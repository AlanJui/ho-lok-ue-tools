(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{447:function(n,e,s){"use strict";s.r(e);var t=s(10),o=Object(t.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"使用-docker-compose-建置-django-app"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-docker-compose-建置-django-app"}},[n._v("#")]),n._v(" 使用 Docker Compose 建置 Django App")]),n._v(" "),e("p",[n._v("【參考文件】：")]),n._v(" "),e("p",[n._v("http://pawamoy.github.io/2018/02/01/docker-compose-django-postgres-nginx.html")]),n._v(" "),e("h1",{attrs:{id:"系統架構"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#系統架構"}},[n._v("#")]),n._v(" 系統架構")]),n._v(" "),e("p",[n._v("Django App 上線時之系統架構：")]),n._v(" "),e("p",[e("img",{attrs:{src:"http://pawamoy.github.io/assets/docker1.png",alt:"docker1"}})]),n._v(" "),e("p",[n._v("結合「網路層」之系統架構：")]),n._v(" "),e("p",[e("img",{attrs:{src:"http://pawamoy.github.io/assets/docker3.png",alt:"docker3"}})]),n._v(" "),e("p",[n._v("結合「Docker Compose」後之系統架構：")]),n._v(" "),e("p",[e("img",{attrs:{src:"http://pawamoy.github.io/assets/docker4.png",alt:"docker4"}})]),n._v(" "),e("h1",{attrs:{id:"將-django-app-置於-docker-容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#將-django-app-置於-docker-容器"}},[n._v("#")]),n._v(" 將 Django App 置於 Docker 容器")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("code\n├── Pipfile\n├── Pipfile.lock\n├── log_msg\n├── manage.py\n├── requirements.txt\n├── static_collected\n└── web_app\n    ├── __init__.py\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py \n\n\n\ncode\n├── Pipfile\n├── Pipfile.lock\n├── log_msg\n│   ├── __init__.py\n│   ├── admin.py\n│   ├── apps.py\n│   ├── forms.py\n│   ├── migrations\n│   │   ├── ⋯⋯\n│   │   └── __init__.py\n│   ├── models.py\n│   ├── static\n│   │   └── hello\n│   │       └── site.css\n│   ├── templates\n│   │   └── log_msg\n│   │       ├── about.html\n│   │       ├── contact.html\n│   │       ├── hello_there.html\n│   │       ├── home.html\n│   │       ├── layout.html\n│   │       └── log_message.html\n│   ├── tests.py\n│   ├── urls.py\n│   └── views.py\n├── manage.py\n├── requirements.txt\n├── static_collected\n│   ├── admin\n│   │   ├── css\n│   │   │   ├── ⋯⋯\n│   │   │   └── ⋯⋯\n│   │   ├── fonts\n│   │   │   ├── ⋯⋯\n│   │   │   └── ⋯⋯\n│   │   ├── img\n│   │   │   ├── ⋯⋯\n│   │   │   └── ⋯⋯\n│   │   └── js\n│   │       ├── ⋯⋯\n│   │       └── ⋯⋯\n│   └── log_msg\n│       └── site.css\n└── web_app\n    ├── __init__.py\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py \n")])])]),e("h2",{attrs:{id:"製作-dockerfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#製作-dockerfile"}},[n._v("#")]),n._v(" 製作 Dockerfile")]),n._v(" "),e("p",[n._v("Dockerfile 容器設定：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('FROM      python:6.8.2\nENV       PYTHONUNBUFFERED 1\nRUN       mkdir /app\nWORKDIR   /app\nCOPY      requirements.txt /app/\nRUN       pip install -r requirements.txt\nCOPY      ./code /app/\n\n\n\n# start from an official image\nFROM python:3.8\n\n# arbitrary location choice: you can change the directory\nRUN mkdir -p /opt/services/django_app/src\nWORKDIR /opt/services/django_app/src\n\n# install our two dependencies\nRUN pip install gunicorn django\n\n# copy our project code\nCOPY . /opt/services/django_app/src\n\n# expose the port 8000\nEXPOSE 8000\n\n# define the default command to run when starting the container\nCMD ["gunicorn", "--chdir", "code", "--bind", ":8000", "web_project.wsgi:application"]\n')])])]),e("p",[n._v("建置 Docker 容器執行檔")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("cd code\npipenv shell\npipenv lock --requirements > requirements.txt\n")])])]),e("p",[n._v("進入《專案根目錄》，透過指令建置 Django App 的 Docker 容器：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("docker build . -t my_django_img\n")])])]),e("p",[n._v("驗證 Django App 的 Docker 容器已能正常運作：")]),n._v(" "),e("p",[n._v("（1）啟動 Docker 容器： my_app")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ docker run --name my_app -p 8000:8000 -t my_django_img\n\\[2020-04-30 02:59:49 +0000\\] [1] [INFO] Starting gunicorn 20.0.4\n\\[2020-04-30 02:59:49 +0000\\] [1] [INFO] Listening at: http://0.0.0.0:8000 (1)\n\\[2020-04-30 02:59:49 +0000\\] [1] [INFO] Using worker: sync\n\\[2020-04-30 02:59:49 +0000\\] [7] [INFO] Booting worker with pid: 7\n")])])]),e("p",[n._v("（2）換另一個 Terminal（2）視窗，要求 Docker 容器： my_app 執行下列 django 指令")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES\ne6d79945d14e        my_django_img       \"gunicorn --chdir . …\"   36 seconds ago      Up 36 seconds       0.0.0.0:8000->8000/tcp   my_app\n\n$ docker exec -it my_app python manage.py migrate\nOperations to perform:\n  Apply all migrations: admin, auth, contenttypes, hello, sessions\nRunning migrations:\n  Applying contenttypes.0001_initial... OK\n  Applying auth.0001_initial... OK\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying admin.0003_logentry_add_action_flag_choices... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  Applying auth.0002_alter_permission_name_max_length... OK\n  Applying auth.0003_alter_user_email_max_length... OK\n  Applying auth.0004_alter_user_username_opts... OK\n  Applying auth.0005_alter_user_last_login_null... OK\n  Applying auth.0006_require_contenttypes_0002... OK\n  Applying auth.0007_alter_validators_add_error_messages... OK\n  Applying auth.0008_alter_user_username_max_length... OK\n  Applying auth.0009_alter_user_last_name_max_length... OK\n  Applying auth.0010_alter_group_name_max_length... OK\n  Applying auth.0011_update_proxy_permissions... OK\n  Applying hello.0001_initial... OK\n  Applying sessions.0001_initial... OK\n\n$ docker exec -it my_app python manage.py createsuperuser\nUsername (leave blank to use 'root'): admin\nEmail address:\nPassword:\nPassword (again):\nSuperuser created successfully.\n\n$ docker exec -it my_app python manage.py collectstatic\n\nYou have requested to collect static files at the destination\nlocation as specified in your settings:\n\n    /opt/services/django_app/src/static_collected\n\nThis will overwrite existing files!\nAre you sure you want to do this?\n\nType 'yes' to continue, or 'no' to cancel: yes\n\n130 static files copied to '/opt/services/django_app/src/static_collected', 1 unmodified.\n")])])]),e("p",[n._v("（3）瀏覽 http://localhost:8000")]),n._v(" "),e("p",[n._v("（4）回到 Terminal（2）視窗，終止 Docker 容器運作")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('$ docker stop my_app\nmy_app\n\n$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS                       PORTS               NAMES\ne6d79945d14e        my_django_img       "gunicorn --chdir . …"   16 minutes ago      Exited (0) 32 seconds ago                        my_app\n\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nmy_django_img       latest              bfeccafa4be7        20 minutes ago      985MB\n')])])]),e("p",[n._v("（5）重新啟動 Docker 容器（my_app）")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('$ docker start my_app\nmy_app\n\n$ docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES\ne6d79945d14e        my_django_img       "gunicorn --chdir . …"   22 minutes ago      Up 6 seconds        0.0.0.0:8000->8000/tcp   my_app\n')])])]),e("p",[n._v("（6）瀏覽 http://localhost:8000")]),n._v(" "),e("p",[n._v("（7）再次終止 Docker 容器")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ docker stop my_app\n")])])]),e("h1",{attrs:{id:"docker-compose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[n._v("#")]),n._v(" docker-compose")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('$ docker-compose build\n\n$ docker-compose run --rm app /bin/bash\nroot@44f2a65aa0fe:/opt/services/django_app/src# psql -h localhost -U postgres\npsql: error: could not connect to server: could not connect to server: Connection refused\n        Is the server running on host "localhost" (127.0.0.1) and accepting\n        TCP/IP connections on port 5432?\ncould not connect to server: Cannot assign requested address\n        Is the server running on host "localhost" (::1) and accepting\n        TCP/IP connections on port 5432?\nroot@8d35d83ebf04:/#\n\n\n\n\n\n$ docker-compose build\n\n$ docker-compose run --rm db1 /bin/bash\nroot@8d35d83ebf04:/# which psql\n/usr/bin/psql\nroot@8d35d83ebf04:/#\n\n\n\n\n\n\n\n$ docker-compose build\n\n$ docker-compose up\n\n$ docker-compose ps\n     Name                   Command               State     Ports\n-------------------------------------------------------------------\ntest-101_app_1   gunicorn --chdir . --bind  ...   Up       8000/tcp\ntest-101_db1_1   docker-entrypoint.sh postgres    Up       5432/tcp\ntest-101_web_1   nginx -g daemon off;             Exit 1\n\n$ docker-compose run app bash\nStarting test-101_db1_1 ... done\nroot@adcabbb9cb0f:/opt/services/django_app/src# python manage.py migrate\n\n\n\n\nalanjui@MBP-2018:~/workspace/vagrant/test-101 (master) \n$ docker-compose run app python manage.py shell\nStarting test-101_db1_1 ... done\nPython 3.8.2 (default, Apr 23 2020, 14:22:33) \n[GCC 8.3.0] on linux\nType "help", "copyright", "credits" or "license" for more information.\n(InteractiveConsole)\n>>> \nnow exiting InteractiveConsole...\n\nalanjui@MBP-2018:~/workspace/vagrant/test-101 (master) \n$ \n\n\n\n\ndocker-compose run --rm app python manage.py db1 upgrade\n\n\n\nalanjui@MBP-2018:~/workspace/vagrant/test-101 (master) \n$ docker-compose run db1 psql -h localhost -U postgres\npsql: could not connect to server: Connection refused\nIs the server running on host "localhost" (127.0.0.1) and accepting\nTCP/IP connections on port 5432?\ncould not connect to server: Cannot assign requested address\nIs the server running on host "localhost" (::1) and accepting\nTCP/IP connections on port 5432?\n')])])]),e("h2",{attrs:{id:"postgresql-service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#postgresql-service"}},[n._v("#")]),n._v(" PostgreSQL Service")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('$ docker run --name postgres-12 -e POSTGRES_PASSWORD=Passw0rd -d postgres\n\n$ docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES\n1349636c5389        postgres            "docker-entrypoint.s…"   4 seconds ago       Up 3 seconds        5432/tcp            postgres-12\n\n\n\n\ndocker run --name postgres_bash --rm -i -t postgres bash\ndocker exec -d postgres_bash touch /tmp/execWorks\n\n\ndocker exec -it postgres_bash bash\n\n\n\n\n\nroot@ed337d648dea:/# service postgresql start\n[warn] No PostgreSQL clusters exist; see "man pg_createcluster" ... (warning).\n\n\n\nroot@ed337d648dea:/# /etc/init.d/postgresql start\n[warn] No PostgreSQL clusters exist; see "man pg_createcluster" ... (warning).\n\n\n\n\n$ service postgresql status\n')])])]),e("h1",{attrs:{id:"各種疑難雜症排解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#各種疑難雜症排解"}},[n._v("#")]),n._v(" 各種疑難雜症排解")]),n._v(" "),e("p",[n._v("檢視 docker volume 容器中存放的檔案")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('docker run --rm -i -v=docker-compose-02_staticfiles_volume:/tmp/myvolume busybox find /tmp/myvolume\n/tmp/myvolume\n/tmp/myvolume/admin\n/tmp/myvolume/admin/fonts\n/tmp/myvolume/admin/fonts/LICENSE.txt\n/tmp/myvolume/admin/fonts/Roboto-Regular-webfont.woff\n/tmp/myvolume/admin/fonts/Roboto-Bold-webfont.woff\n/tmp/myvolume/admin/fonts/Roboto-Light-webfont.woff\n/tmp/myvolume/admin/fonts/README.txt\n/tmp/myvolume/admin/css\n/tmp/myvolume/admin/css/login.css\n/tmp/myvolume/admin/css/autocomplete.css\n/tmp/myvolume/admin/css/vendor\n/tmp/myvolume/admin/css/vendor/select2\n/tmp/myvolume/admin/css/vendor/select2/select2.min.css\n/tmp/myvolume/admin/css/vendor/select2/LICENSE-SELECT2.md\n/tmp/myvolume/admin/css/vendor/select2/select2.css\n/tmp/myvolume/admin/css/dashboard.css\n/tmp/myvolume/admin/css/rtl.css\n/tmp/myvolume/admin/css/changelists.css\n/tmp/myvolume/admin/css/responsive_rtl.css\n/tmp/myvolume/admin/css/responsive.css\n/tmp/myvolume/admin/css/base.css\n/tmp/myvolume/admin/css/fonts.css\n/tmp/myvolume/admin/css/forms.css\n/tmp/myvolume/admin/css/widgets.css\n/tmp/myvolume/admin/js\n/tmp/myvolume/admin/js/admin\n/tmp/myvolume/admin/js/admin/DateTimeShortcuts.js\n/tmp/myvolume/admin/js/admin/RelatedObjectLookups.js\n/tmp/myvolume/admin/js/actions.min.js\n/tmp/myvolume/admin/js/SelectBox.js\n/tmp/myvolume/admin/js/popup_response.js\n/tmp/myvolume/admin/js/prepopulate.min.js\n/tmp/myvolume/admin/js/prepopulate_init.js\n/tmp/myvolume/admin/js/inlines.min.js\n/tmp/myvolume/admin/js/SelectFilter2.js\n/tmp/myvolume/admin/js/vendor\n/tmp/myvolume/admin/js/vendor/jquery\n/tmp/myvolume/admin/js/vendor/jquery/jquery.js\n/tmp/myvolume/admin/js/vendor/jquery/LICENSE.txt\n/tmp/myvolume/admin/js/vendor/jquery/jquery.min.js\n/tmp/myvolume/admin/js/vendor/xregexp\n/tmp/myvolume/admin/js/vendor/xregexp/xregexp.js\n/tmp/myvolume/admin/js/vendor/xregexp/xregexp.min.js\n/tmp/myvolume/admin/js/vendor/xregexp/LICENSE.txt\n/tmp/myvolume/admin/js/vendor/select2\n/tmp/myvolume/admin/js/vendor/select2/i18n\n/tmp/myvolume/admin/js/vendor/select2/i18n/cs.js\n⋯⋯\n/tmp/myvolume/admin/js/vendor/select2/i18n/zh-TW.js\n⋯⋯\n/tmp/myvolume/admin/js/vendor/select2/select2.full.js\n/tmp/myvolume/admin/js/vendor/select2/select2.full.min.js\n/tmp/myvolume/admin/js/vendor/select2/LICENSE.md\n/tmp/myvolume/admin/js/prepopulate.js\n/tmp/myvolume/admin/js/calendar.js\n/tmp/myvolume/admin/js/urlify.js\n/tmp/myvolume/admin/js/autocomplete.js\n/tmp/myvolume/admin/js/inlines.js\n/tmp/myvolume/admin/js/collapse.js\n/tmp/myvolume/admin/js/actions.js\n/tmp/myvolume/admin/js/change_form.js\n/tmp/myvolume/admin/js/jquery.init.js\n/tmp/myvolume/admin/js/cancel.js\n/tmp/myvolume/admin/js/collapse.min.js\n/tmp/myvolume/admin/js/core.js\n/tmp/myvolume/admin/img\n/tmp/myvolume/admin/img/icon-deletelink.svg\n/tmp/myvolume/admin/img/icon-addlink.svg\n/tmp/myvolume/admin/img/icon-no.svg\n/tmp/myvolume/admin/img/icon-unknown-alt.svg\n/tmp/myvolume/admin/img/tooltag-arrowright.svg\n/tmp/myvolume/admin/img/gis\n/tmp/myvolume/admin/img/gis/move_vertex_off.svg\n/tmp/myvolume/admin/img/gis/move_vertex_on.svg\n/tmp/myvolume/admin/img/tooltag-add.svg\n/tmp/myvolume/admin/img/selector-icons.svg\n/tmp/myvolume/admin/img/icon-clock.svg\n/tmp/myvolume/admin/img/icon-changelink.svg\n/tmp/myvolume/admin/img/calendar-icons.svg\n/tmp/myvolume/admin/img/icon-unknown.svg\n/tmp/myvolume/admin/img/inline-delete.svg\n/tmp/myvolume/admin/img/LICENSE\n/tmp/myvolume/admin/img/icon-calendar.svg\n/tmp/myvolume/admin/img/icon-yes.svg\n/tmp/myvolume/admin/img/README.txt\n/tmp/myvolume/admin/img/icon-viewlink.svg\n/tmp/myvolume/admin/img/search.svg\n/tmp/myvolume/admin/img/sorting-icons.svg\n/tmp/myvolume/admin/img/icon-alert.svg\n/tmp/myvolume/log_msg\n/tmp/myvolume/log_msg/test.png\n/tmp/myvolume/log_msg/log_msg.css\n\n\n$ docker volume inspect docker-compose-02_staticfiles_volume\n[\n    {\n        "CreatedAt": "2020-05-04T02:15:36Z",\n        "Driver": "local",\n        "Labels": {\n            "com.docker.compose.project": "docker-compose-02",\n            "com.docker.compose.version": "1.25.4",\n            "com.docker.compose.volume": "staticfiles_volume"\n        },\n        "Mountpoint": "/var/lib/docker/volumes/docker-compose-02_staticfiles_volume/_data",\n        "Name": "docker-compose-02_staticfiles_volume",\n        "Options": null,\n        "Scope": "local"\n    }\n]\n')])])]),e("h1",{attrs:{id:"nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[n._v("#")]),n._v(" nginx")]),n._v(" "),e("h2",{attrs:{id:"nginx-預設的-default-conf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx-預設的-default-conf"}},[n._v("#")]),n._v(" nginx 預設的 default.conf")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("server {                                                                                                                                     \n    listen       80;\n    server_name  localhost;\n\n    #charset koi8-r;\n    #access_log  /var/log/nginx/host.access.log  main;\n\n    location / {\n        root   /usr/share/nginx/html;\n        index  index.html index.htm;\n    }\n\n    #error_page  404              /404.html;\n\n    # redirect server error pages to the static page /50x.html\n    #\n    error_page   500 502 503 504  /50x.html;                                                                                                 [14/1631]\n    location = /50x.html {\n        root   /usr/share/nginx/html;\n    }\n\n    # deny access to .htaccess files, if Apache's document root\n    # concurs with nginx's one\n    #\n    #location ~ /\\.ht {\n    #    deny  all;\n    #}\n}\n")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);