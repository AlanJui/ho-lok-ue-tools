(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{432:function(n,e,t){"use strict";t.r(e);var a=t(10),s=Object(a.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"vs-code-vim-setting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vs-code-vim-setting"}},[n._v("#")]),n._v(" VS Code Vim Setting")]),n._v(" "),e("h2",{attrs:{id:"settings-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#settings-json"}},[n._v("#")]),n._v(" settings.json")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('  // Editor\n    "editor.tabSize": 2,\n    "editor.minimap.enabled": false,\n    "editor.fontSize": 18,\n    "editor.fontFamily": "Menlo, Monaco, \'Courier New\', monospace, \'SauceCodePro Nerd Font\'",\n    \n    // Vim \n    "editor.suggestSelection": "first",\n    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",\n    "python.jediEnabled": false,\n   \n    // Python\n    "python.linting.pylintArgs": [\n        "--load-plugins",\n        "--errors-only", \n        "pylint_django"\n    ],\n \n    // Django\n    "emmet.includeLanguages": {\n        "django-html": "html"\n    },\n    "files.associations": {\n        "**/templates/*.html": "django-html",\n        "**/templates/*": "django-txt",\n        "**/requirements{/**,*}.{txt,in}": "pip-requirements"\n    },\n    // VIM Ref: https://github.com/VSCodeVim/Vim\n    "editor.lineNumbers": "relative",\n    "vim.enableNeovim": true,\n    "vim.neovimPath": "/usr/local/bin/nvim",\n    "vim.easymotion": true,\n    "vim.sneak": true,\n    "vim.incsearch": true,\n    "vim.useSystemClipboard": true,\n    "vim.useCtrlKeys": true,\n    "vim.hlsearch": true,\n    // "vim.leader": "<space>",\n    "vim.leader": ",",\n    "vim.insertModeKeyBindings": [\n        {\n            "before": ["j", "j"],\n            "after": ["<Esc>"]\n        },\n        {\n            "before": ["<leader>", "<leader>"],\n            "after": ["<Esc>", "A", ","]\n        },\n        {\n            "before": ["<leader>", "."],\n            "after": ["<Right>", ","]\n        },\n        {\n            "before": [":", ":"],\n            "after": ["<Esc>", "A", ":"]\n        },\n        {\n            "before": ["<leader>", "w"],\n            "commands": [\n                ":w"\n            ]\n        } \n    ],\n    "vim.normalModeKeyBindingsNonRecursive": [\n        {\n            "before": ["<leader>", "d"],\n            "after": ["d", "d"]\n        },\n        {\n            "before": ["<C-n>"],\n            "commands": [":nohl"]\n        },\n        {\n            "before": ["<leader>", "w"],\n            "commands": [\n                ":w"\n            ]\n        } \n    ],\n    "vim.visualModeKeyBindingsNonRecursive": [\n        {\n            "before": ["<leader>", "w"],\n            "commands": [\n                ":w"\n            ]\n        },\n        {\n            "before": [\n                ">"\n            ],\n            "commands": [\n                "editor.action.indentLines"\n            ]\n        },\n        {\n            "before": [\n                "<"\n            ],\n            "commands": [\n                "editor.action.outdentLines"\n            ]\n        },\n    ],\n    "vim.handleKeys": {\n        "<C-a>": false,\n        "<C-f>": false\n    }\n')])])]),e("h2",{attrs:{id:"launch-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#launch-json"}},[n._v("#")]),n._v(" launch.json")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('        {\n            "name": "Pythonï¼šDjango",\n            "type": "python",\n            "request": "launch",\n            "program": "${workspaceFolder}/manage.py",\n            "args": [\n                "runserver",\n                "0.0.0.0:9000",\n                "--noreload"\n            ],\n            "django": true\n        },\n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);