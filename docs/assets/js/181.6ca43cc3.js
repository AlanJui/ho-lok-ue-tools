(window.webpackJsonp=window.webpackJsonp||[]).push([[181],{468:function(a,n,t){"use strict";t.r(n);var i=t(10),e=Object(i.a)({},(function(){var a=this,n=a._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"yabai"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yabai"}},[a._v("#")]),a._v(" Yabai")]),a._v(" "),n("p",[a._v("https://www.youtube.com/watch?v=mMV3LXQ3pKQ&")]),a._v(" "),n("p",[n("a",{attrs:{href:"https://youtu.be/mMV3LXQ3pKQ",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://youtu.be/mMV3LXQ3pKQ"),n("OutboundLink")],1)]),a._v(" "),n("p",[a._v("https://www.youtube.com/watch?v=JL1lz77YbUE&")]),a._v(" "),n("p",[n("a",{attrs:{href:"https://youtu.be/JL1lz77YbUE",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://youtu.be/JL1lz77YbUE"),n("OutboundLink")],1)]),a._v(" "),n("h2",{attrs:{id:"關閉-sip"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#關閉-sip"}},[a._v("#")]),a._v(" 關閉 SIP")]),a._v(" "),n("p",[a._v("SIP（System Integrity Protection）")]),a._v(" "),n("p",[a._v("https://blog.developer.money/%E9%97%9C%E9%96%89-mac-%E7%9A%84-sip-system-integrity-protection-8f679c4fdd9e")]),a._v(" "),n("h2",{attrs:{id:"快捷鍵操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#快捷鍵操作"}},[a._v("#")]),a._v(" 快捷鍵操作")]),a._v(" "),n("p",[a._v("https://github.com/itgoyo/yabai-config")]),a._v(" "),n("p",[n("strong",[a._v("Changing focus")]),a._v("\nalt + hjkl")]),a._v(" "),n("p",[n("strong",[a._v("Focus")])]),a._v(" "),n("table",[n("thead",[n("tr",[n("th",[n("strong",[a._v("Action")])]),a._v(" "),n("th",[n("strong",[a._v("Key Combination")])])])]),a._v(" "),n("tbody",[n("tr",[n("td",[a._v("focus west")]),a._v(" "),n("td",[a._v("alt + h")])]),a._v(" "),n("tr",[n("td",[a._v("focus south")]),a._v(" "),n("td",[a._v("alt + j")])]),a._v(" "),n("tr",[n("td",[a._v("focus north")]),a._v(" "),n("td",[a._v("alt + k")])]),a._v(" "),n("tr",[n("td",[a._v("focus east")]),a._v(" "),n("td",[a._v("alt + l")])])])]),a._v(" "),n("p",[n("strong",[a._v("Resize windows")])]),a._v(" "),n("table",[n("thead",[n("tr",[n("th",[n("strong",[a._v("Action")])]),a._v(" "),n("th",[n("strong",[a._v("Key Combination")])])])]),a._v(" "),n("tbody",[n("tr",[n("td",[a._v("Resize left")]),a._v(" "),n("td",[a._v("shfit + cmd + h")])]),a._v(" "),n("tr",[n("td",[a._v("Resize down")]),a._v(" "),n("td",[a._v("shfit + cmd + j")])]),a._v(" "),n("tr",[n("td",[a._v("Resize up")]),a._v(" "),n("td",[a._v("shfit + cmd + k")])]),a._v(" "),n("tr",[n("td",[a._v("Resize right")]),a._v(" "),n("td",[a._v("shfit + cmd + l")])]),a._v(" "),n("tr",[n("td",[a._v("Equalise")]),a._v(" "),n("td",[a._v("shfit + cmd + 0")])])])]),a._v(" "),n("p",[n("strong",[a._v("Move windows")]),a._v("\nshift + alt + hjkl")]),a._v(" "),n("p",[n("strong",[a._v("Move windows to workspace")])]),a._v(" "),n("table",[n("thead",[n("tr",[n("th",[n("strong",[a._v("Action")])]),a._v(" "),n("th",[n("strong",[a._v("Key Combination")])])])]),a._v(" "),n("tbody",[n("tr",[n("td",[a._v("Send to last active desktop")]),a._v(" "),n("td",[a._v("shift + alt + m")])]),a._v(" "),n("tr",[n("td",[a._v("Send to previous workplace")]),a._v(" "),n("td",[a._v("shift + alt + p")])]),a._v(" "),n("tr",[n("td",[a._v("Send to next workplace")]),a._v(" "),n("td",[a._v("shift + alt + n")])]),a._v(" "),n("tr",[n("td",[a._v("Send to workplace")]),a._v(" "),n("td",[a._v("shift + alt + num")])])])]),a._v(" "),n("p",[n("strong",[a._v("Rotate windows")])]),a._v(" "),n("table",[n("thead",[n("tr",[n("th",[n("strong",[a._v("Action")])]),a._v(" "),n("th",[n("strong",[a._v("Key Combination")])])])]),a._v(" "),n("tbody",[n("tr",[n("td",[a._v("Rotate clockwise")]),a._v(" "),n("td",[a._v("shift + alt + r")])]),a._v(" "),n("tr",[n("td",[a._v("Rotate anticlockwise")]),a._v(" "),n("td",[a._v("alt + r")])]),a._v(" "),n("tr",[n("td",[a._v("Flip on x-axis")]),a._v(" "),n("td",[a._v("shift + alt + x")])]),a._v(" "),n("tr",[n("td",[a._v("Flip on y-axis")]),a._v(" "),n("td",[a._v("shift + alt + y")])])])]),a._v(" "),n("p",[n("strong",[a._v("Window actions")])]),a._v(" "),n("table",[n("thead",[n("tr",[n("th",[n("strong",[a._v("Action")])]),a._v(" "),n("th",[n("strong",[a._v("Key Combination")])])])]),a._v(" "),n("tbody",[n("tr",[n("td",[a._v("Fullscreen")]),a._v(" "),n("td",[a._v("alt + f")])]),a._v(" "),n("tr",[n("td",[a._v("Native fullscreen")]),a._v(" "),n("td",[a._v("shift + alt + f")])]),a._v(" "),n("tr",[n("td",[a._v("Center window")]),a._v(" "),n("td",[a._v("shift + alt + c")])])])]),a._v(" "),n("p",[n("strong",[a._v("Insertion point")])]),a._v(" "),n("table",[n("thead",[n("tr",[n("th",[n("strong",[a._v("Action")])]),a._v(" "),n("th",[n("strong",[a._v("Key Combination")])])])]),a._v(" "),n("tbody",[n("tr",[n("td",[a._v("Insert left")]),a._v(" "),n("td",[a._v("shift + lctrl + alt + h")])]),a._v(" "),n("tr",[n("td",[a._v("Insert down")]),a._v(" "),n("td",[a._v("shift + lctrl + alt + j")])]),a._v(" "),n("tr",[n("td",[a._v("Insert up")]),a._v(" "),n("td",[a._v("shift + lctrl + alt + k")])]),a._v(" "),n("tr",[n("td",[a._v("Insert right")]),a._v(" "),n("td",[a._v("shift + lctrl + alt + l")])]),a._v(" "),n("tr",[n("td",[a._v("Cancel insert (chunkwm only)")]),a._v(" "),n("td",[a._v("shift + lctrl + alt + x")])])])]),a._v(" "),n("p",[n("strong",[a._v("Misc")])]),a._v(" "),n("table",[n("thead",[n("tr",[n("th",[n("strong",[a._v("Action")])]),a._v(" "),n("th",[n("strong",[a._v("Key Combination")])])])]),a._v(" "),n("tbody",[n("tr",[n("td",[a._v("Toggle float")]),a._v(" "),n("td",[a._v("shift + alt + space")])]),a._v(" "),n("tr",[n("td",[a._v("Toggle gaps")]),a._v(" "),n("td",[a._v("lctrl + alt + g")])]),a._v(" "),n("tr",[n("td",[a._v("Restart chunkwm")]),a._v(" "),n("td",[a._v("lctrl + shift + alt + r")])])])]),a._v(" "),n("hr"),a._v(" "),n("ul",[n("li",[n("p",[a._v("alt + hjkl\n切換視窗的 focus")])]),a._v(" "),n("li",[n("p",[a._v("alt + s\nfocus 視窗全屏")])]),a._v(" "),n("li",[n("p",[a._v("alt + e\n切換回拼圖排列")])]),a._v(" "),n("li",[n("p",[a._v("alt + shift + hjkl\n移動 focus 視窗的位置")])]),a._v(" "),n("li",[n("p",[a._v("alt + cmd + shift + hjkl\n調整 focus 視窗的大小")])]),a._v(" "),n("li",[n("p",[a._v("alt + r\n旋轉所有視窗 90 度")])]),a._v(" "),n("li",[n("p",[a._v("alt + shift + space\nfocus 視窗懸浮（可以亂移動）")])]),a._v(" "),n("li",[n("p",[a._v("alt + shift + 1234\n把 focus 視窗送到 1234 的桌面（要先有桌面，必須手動新增）")])]),a._v(" "),n("li",[n("p",[a._v("alt + shift + p n m\n把 focus 視窗送到 p(上一個) n(下一個) m(最後切換的) 桌面，如果條件不成立將無動作。")])]),a._v(" "),n("li",[n("p",[a._v("alt + p n\n切換 focus 到 p(上一個) n(下一個) 視窗")])])]),a._v(" "),n("h2",{attrs:{id:"設定檔"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#設定檔"}},[a._v("#")]),a._v(" 設定檔")]),a._v(" "),n("h3",{attrs:{id:"yabairc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yabairc"}},[a._v("#")]),a._v(" .yabairc")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[a._v('#!/usr/bin/env sh\n\n# the scripting-addition must be loaded manually if\n# you are running yabai on macOS Big Sur. Uncomment\n# the following line to have the injection performed\n# when the config is executed during startup.\n#\n# for this to work you must configure sudo such that\n# it will be able to run the command without password\n#\n# see this wiki page for information:\n#  - https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)\n#\n# sudo yabai --load-sa\n# yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"\n\n# global settings\nyabai -m config mouse_follows_focus          off\nyabai -m config focus_follows_mouse          off\nyabai -m config window_placement             second_child\nyabai -m config window_topmost               off\nyabai -m config window_shadow                on\nyabai -m config window_opacity               off\nyabai -m config window_opacity_duration      0.0\nyabai -m config active_window_opacity        1.0\nyabai -m config normal_window_opacity        0.90\nyabai -m config window_border                off\nyabai -m config window_border_width          6\nyabai -m config active_window_border_color   0xff775759\nyabai -m config normal_window_border_color   0xff555555\nyabai -m config insert_feedback_color        0xffd75f5f\nyabai -m config split_ratio                  0.50\nyabai -m config auto_balance                 off\nyabai -m config mouse_modifier               fn\nyabai -m config mouse_action1                move\nyabai -m config mouse_action2                resize\nyabai -m config mouse_drop_action            swap\n\n# general space settings\nyabai -m config layout                       bsp\nyabai -m config top_padding                  12\nyabai -m config bottom_padding               12\nyabai -m config left_padding                 12\nyabai -m config right_padding                12\nyabai -m config window_gap                   06\n\necho "yabai configuration loaded.."\n')])])]),n("h3",{attrs:{id:"skhdrc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#skhdrc"}},[a._v("#")]),a._v(" .skhdrc")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[a._v("# opens iTerm2(暂时隐藏了，因为权限太高了，导致AS快捷键都捕获不到，热键冲突)\n#alt - return : \"${HOME}\"/.config/yabai/scripts/open_iterm2.sh\n\n\n# Show system statistics\n\n\n# Navigation\nalt - h : yabai -m window --focus west\nalt - j : yabai -m window --focus south\nalt - k : yabai -m window --focus north\nalt - l : yabai -m window --focus east\n\n# Moving windows\nshift + alt - h : yabai -m window --warp west\nshift + alt - j : yabai -m window --warp south\nshift + alt - k : yabai -m window --warp north\nshift + alt - l : yabai -m window --warp east\n\n\n# Resize windows\nshift+ cmd - h : \\\n    yabai -m window --resize left:-20:0 ; \\\n    yabai -m window --resize right:-20:0\n\nshift + cmd - j : \\\n    yabai -m window --resize bottom:0:20 ; \\\n    yabai -m window --resize top:0:20\n\nshift + cmd - k : \\\n    yabai -m window --resize top:0:-20 ; \\\n    yabai -m window --resize bottom:0:-20\n\nshift + cmd - l : \\\n    yabai -m window --resize right:20:0 ; \\\n    yabai -m window --resize left:20:0\n\n# Float and center window\nshift + alt - c : yabai -m window --toggle float;\\\n                  yabai -m window --grid 4:4:1:1:2:2\n\n# Equalize size of windows\nlctrl + alt - 0 : yabai -m space --balance\n\n# Enable / Disable gaps in current workspace\nlctrl + alt - g : yabai -m space --toggle padding; yabai -m space --toggle gap\n\n# Rotate windows clockwise and anticlockwise\nalt - r         : yabai -m space --rotate 90\nshift + alt - r : yabai -m space --rotate 270\n\n# Rotate on X and Y Axis\nshift + alt - x : yabai -m space --mirror x-axis\nshift + alt - y : yabai -m space --mirror y-axis\n\n# Set insertion point for focused container\nshift + lctrl + alt - h : yabai -m window --insert west\nshift + lctrl + alt - j : yabai -m window --insert south\nshift + lctrl + alt - k : yabai -m window --insert north\nshift + lctrl + alt - l : yabai -m window --insert east\n\n# Float / Unfloat window (更换 layout 方式) w\nshift + alt - space : yabai -m window --toggle float\n\n# Restart Yabai\nshift + cmd + alt - r :\n    /usr/bin/env osascript <<< \\\n        \"display notification \\\"Restarting Yabai\\\" with title \\\"Yabai\\\"\"; \\\n    launchctl kickstart -k \"gui/${UID}/homebrew.mxcl.yabai\"\n\n# Make window native fullscreen\nalt - f         : yabai -m window --toggle zoom-fullscreen\nshift + alt - f : yabai -m window --toggle native-fullscreen\n\n# toggle window split type\nalt - e : yabai -m window --toggle split\n\n# increase window size 竖直方向才能用 top  水平方向才能用 left\nshift + alt - d : yabai -m window --resize left:-20:0\nshift + alt - w : yabai -m window --resize top:0:-20\n\n\n# decrease window size\nshift + alt - a : yabai -m window --resize left:20:0\nshift + alt - s : yabai -m window --resize top:0:20\n\n\n# fast focus desktop (切换空间焦点)\n# cmd + alt - x : yabai -m space --focus recent\n# cmd + alt - z : yabai -m space --focus prev\n# cmd + alt - c : yabai -m space --focus next\nalt - 1 : yabai -m space --focus 1\nalt - 2 : yabai -m space --focus 2\nalt - 3 : yabai -m space --focus 3\nalt - 4 : yabai -m space --focus 4\nalt - 5 : yabai -m space --focus 5\nalt - 6 : yabai -m space --focus 6\nalt - 7 : yabai -m space --focus 7\nalt - 8 : yabai -m space --focus 8\nalt - 9 : yabai -m space --focus 9\nalt - 0 : yabai -m space --focus 10\n\n# create new space\nctrl - n : yabai -m space --create\nctrl - m : yabai -m space --destroy\n\n# destroy empty spaces\nshift + cmd + alt - w : echo \"destroy empty spaces\";\\\n                        yabai -m query --spaces \\\n                        | jq 'reverse | .[] | select((.windows | length) == 0) | .index' \\\n                        | xargs -I{} yabai -m space {} --destroy \\;\n\n# send window to space\nctrl + shift - 1 : yabai -m window --space 1\nctrl + shift - 2 : yabai -m window --space 2\nctrl + shift - 3 : yabai -m window --space 3\nctrl + shift - 4 : yabai -m window --space 4\nctrl + shift - 5 : yabai -m window --space 5\nctrl + shift - 6 : yabai -m window --space 6\nctrl + shift - 7 : yabai -m window --space 7\nctrl + shift - 8 : yabai -m window --space 8\nctrl + shift - 9 : yabai -m window --space 9\nctrl + shift - 0 : yabai -m window --space 10\n\n# Move focus container to workspace\nshift + cmd - m : yabai -m window --space last && yabai -m space --focus last\nshift + cmd - b : yabai -m window --space prev && yabai -m space --focus prev\nshift + cmd - n : yabai -m window --space next && yabai -m space --focus next\nshift + cmd - 1 : yabai -m window --space 1 && yabai -m space --focus 1\nshift + cmd - 2 : yabai -m window --space 2 && yabai -m space --focus 2\nshift + cmd - 3 : yabai -m window --space 3 && yabai -m space --focus 3\nshift + cmd - 4 : yabai -m window --space 4 && yabai -m space --focus 4\nshift + cmd - 5 : yabai -m window --space 5 && yabai -m space --focus 5\nshift + cmd - 6 : yabai -m window --space 6 && yabai -m space --focus 6\n\n\nalt + ctrl - f : yabai -m space --layout float && \\\n                 yabai -m config window_border off\nalt + ctrl - b : yabai -m space --layout bsp && \\\n                 yabai -m config window_border on\n\n\n\n\n# ################################################################ #\n# THE FOLLOWING IS AN EXPLANATION OF THE GRAMMAR THAT SKHD PARSES. #\n# FOR SIMPLE EXAMPLE MAPPINGS LOOK FURTHER DOWN THIS FILE..        #\n# ################################################################ #\n\n# A list of all built-in modifier and literal keywords can\n# be found at https://github.com/koekeishiya/skhd/issues/1\n#\n# A hotkey is written according to the following rules:\n#\n#   hotkey       = <mode> '<' <action> | <action>\n#\n#   mode         = 'name of mode' | <mode> ',' <mode>\n#\n#   action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'\n#                  <keysym> ':' <command>          | <keysym> '->' ':' <command>\n#                  <keysym> ';' <mode>             | <keysym> '->' ';' <mode>\n#\n#   keysym       = <mod> '-' <key> | <key>\n#\n#   mod          = 'modifier keyword' | <mod> '+' <mod>\n#\n#   key          = <literal> | <keycode>\n#\n#   literal      = 'single letter or built-in keyword'\n#\n#   keycode      = 'apple keyboard kVK_<Key> values (0x3C)'\n#\n#   proc_map_lst = * <proc_map>\n#\n#   proc_map     = <string> ':' <command> | <string>     '~' |\n#                  '*'      ':' <command> | '*'          '~'\n#\n#   string       = '\"' 'sequence of characters' '\"'\n#\n#   command      = command is executed through '$SHELL -c' and\n#                  follows valid shell syntax. if the $SHELL environment\n#                  variable is not set, it will default to '/bin/bash'.\n#                  when bash is used, the ';' delimeter can be specified\n#                  to chain commands.\n#\n#                  to allow a command to extend into multiple lines,\n#                  prepend '\\' at the end of the previous line.\n#\n#                  an EOL character signifies the end of the bind.\n#\n#   ->           = keypress is not consumed by skhd\n#\n#   *            = matches every application not specified in <proc_map_lst>\n#\n#   ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>\n#\n# A mode is declared according to the following rules:\n#\n#   mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |\n#               '::' <name> '@'               | '::' <name>\n#\n#   name      = desired name for this mode,\n#\n#   @         = capture keypresses regardless of being bound to an action\n#\n#   command   = command is executed through '$SHELL -c' and\n#               follows valid shell syntax. if the $SHELL environment\n#               variable is not set, it will default to '/bin/bash'.\n#               when bash is used, the ';' delimeter can be specified\n#               to chain commands.\n#\n#               to allow a command to extend into multiple lines,\n#               prepend '\\' at the end of the previous line.\n#\n#               an EOL character signifies the end of the bind.\n\n# ############################################################### #\n# THE FOLLOWING SECTION CONTAIN SIMPLE MAPPINGS DEMONSTRATING HOW #\n# TO INTERACT WITH THE YABAI WM. THESE ARE SUPPOSED TO BE USED AS #\n# A REFERENCE ONLY, WHEN MAKING YOUR OWN CONFIGURATION..          #\n# ############################################################### #\n\n# focus window\nalt - h : yabai -m window --focus west\n\n# swap managed window\nshift + alt - h : yabai -m window --swap north\n\n# move managed window\nshift + cmd - h : yabai -m window --warp east\n\n# balance size of windows\nshift + alt - 0 : yabai -m space --balance\n\n# make floating window fill screen\nshift + alt - up     : yabai -m window --grid 1:1:0:0:1:1\n\n# make floating window fill left-half of screen\nshift + alt - left   : yabai -m window --grid 1:2:0:0:1:1\n\n# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)\nshift + cmd - n : yabai -m space --create && \\\n                  index=\"$(yabai -m query --spaces --display | jq 'map(select(.\"native-fullscreen\" == 0))[-1].index')\" && \\\n                  yabai -m window --space \"${index}\" && \\\n                  yabai -m space --focus \"${index}\"\n\n# fast focus desktop\ncmd + alt - x : yabai -m space --focus recent\ncmd + alt - 1 : yabai -m space --focus 1\n\n# send window to desktop and follow focus\nshift + cmd - z : yabai -m window --space next; yabai -m space --focus next\nshift + cmd - 2 : yabai -m window --space  2; yabai -m space --focus 2\n\n# focus monitor\nctrl + alt - z  : yabai -m display --focus prev\nctrl + alt - 3  : yabai -m display --focus 3\n\n# send window to monitor and follow focus\nctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1\nctrl + cmd - c  : yabai -m window --display next; yabai -m display --focus next\n\n# move floating window\nshift + ctrl - s : yabai -m window --move rel:0:20\nshift + ctrl - a : yabai -m window --move rel:-20:0\n\n# increase window size\nshift + alt - a : yabai -m window --resize left:-20:0\nshift + alt - w : yabai -m window --resize top:0:-20\n\n# decrease window size\nshift + cmd - s : yabai -m window --resize bottom:0:-20\nshift + cmd - w : yabai -m window --resize top:0:20\n\n# set insertion point in focused container\nctrl + alt - h : yabai -m window --insert west\n\n# toggle window zoom\nalt - d : yabai -m window --toggle zoom-parent\nalt - f : yabai -m window --toggle zoom-fullscreen\n\n# toggle window split type\nalt - e : yabai -m window --toggle split\n\n# float / unfloat window and center on screen\nalt - t : yabai -m window --toggle float;\\\n          yabai -m window --grid 4:4:1:1:2:2\n\n# toggle sticky(+float), topmost, picture-in-picture\nalt - p : yabai -m window --toggle sticky;\\\n          yabai -m window --toggle topmost;\\\n          yabai -m window --toggle pip\n#\n# change windows size\n# shrink/extend width/height\nalt + shift + cmd - h : yabai tiling::window --use-temporary-ratio -0.05 --adjust-window-edge west;  yabai tiling::window --use-temporary-ratio -0.05 --adjust-window-edge east\nalt + shift + cmd - j : yabai tiling::window --use-temporary-ratio -0.05 --adjust-window-edge north; yabai tiling::window --use-temporary-ratio -0.05 --adjust-window-edge south\nalt + shift + cmd - k : yabai tiling::window --use-temporary-ratio  0.05 --adjust-window-edge north; yabai tiling::window --use-temporary-ratio  0.05 --adjust-window-edge south\nalt + shift + cmd - l : yabai tiling::window --use-temporary-ratio  0.05 --adjust-window-edge west;  yabai tiling::window --use-temporary-ratio  0.05 --adjust-window-edge east\n\n\n\n# focus window\n# alt - h : yabai -m window --focus west\n\n# swap managed window\n# shift + alt - h : yabai -m window --swap north\n\n# move managed window\n# shift + cmd - h : yabai -m window --warp east\n\n# balance size of windows\n# shift + alt - 0 : yabai -m space --balance\n\n# make floating window fill screen\n# shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1\n\n# make floating window fill left-half of screen\n# shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1\n\n# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)\n# shift + cmd - n : yabai -m space --create && \\\n#                   index=\"$(yabai -m query --spaces --display | jq 'map(select(.\"native-fullscreen\" == 0))[-1].index')\" && \\\n#                   yabai -m window --space \"${index}\" && \\\n#                   yabai -m space --focus \"${index}\"\n\n# fast focus desktop\n# cmd + alt - x : yabai -m space --focus recent\n# cmd + alt - 1 : yabai -m space --focus 1\n\n# send window to desktop and follow focus\n# shift + cmd - z : yabai -m window --space next; yabai -m space --focus next\n# shift + cmd - 2 : yabai -m window --space  2; yabai -m space --focus 2\n\n# focus monitor\nctrl + alt - z  : yabai -m display --focus prev\nctrl + alt - 3  : yabai -m display --focus 3\n\n# send window to monitor and follow focus\n# ctrl + cmd - c  : yabai -m window --display next; yabai -m display --focus next\n# ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1\n\n# move floating window\n# shift + ctrl - a : yabai -m window --move rel:-20:0\n# shift + ctrl - s : yabai -m window --move rel:0:20\n\n# increase window size\n# shift + alt - a : yabai -m window --resize left:-20:0\n# shift + alt - w : yabai -m window --resize top:0:-20\n\n# decrease window size\n# shift + cmd - s : yabai -m window --resize bottom:0:-20\n# shift + cmd - w : yabai -m window --resize top:0:20\n\n# set insertion point in focused container\n# ctrl + alt - h : yabai -m window --insert west\n\n# toggle window zoom\n# alt - d : yabai -m window --toggle zoom-parent\n# alt - f : yabai -m window --toggle zoom-fullscreen\n\n# toggle window split type\n# alt - e : yabai -m window --toggle split\n\n# float / unfloat window and center on screen\n# alt - t : yabai -m window --toggle float;\\\n#           yabai -m window --grid 4:4:1:1:2:2\n\n# toggle sticky(+float), topmost, picture-in-picture\n# alt - p : yabai -m window --toggle sticky;\\\n#           yabai -m window --toggle topmost;\\\n#           yabai -m window --toggle pip\n")])])]),n("h2",{attrs:{id:"異常排除"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#異常排除"}},[a._v("#")]),a._v(" 異常排除")]),a._v(" "),n("h3",{attrs:{id:"無法切換桌面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#無法切換桌面"}},[a._v("#")]),a._v(" 無法切換桌面")]),a._v(" "),n("p",[n("strong",[a._v("無法使用 [Cmd] + [Alt] + [n] 快捷鍵切換「桌面」（Desktop / Space）。")]),a._v("\n可試著先用指令執行切換，籍此診斷：「是否導因起於『指令』亦無法正常運作？」。")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[a._v("$ yabai -m space --focus 3\n")])])]),n("p",[n("strong",[a._v("無法使用「指令」切換桌面，終端機出現如下之錯誤回報：")])]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[a._v("$ yabai -m space --focus 3\ncannot focus space due to an error with the scripting-addition.\n")])])]),n("p",[a._v("【異常排除作業】：")]),a._v(" "),n("ol",[n("li",[a._v("務必確認「SPI： Disable」。\ncsrutil status")])]),a._v(" "),n("p",[a._v("【註】： 關閉 SPI 作業程序 ⋯⋯")]),a._v(" "),n("p",[a._v("https://blog.developer.money/%E9%97%9C%E9%96%89-mac-%E7%9A%84-sip-system-integrity-protection-8f679c4fdd9e")]),a._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[n("p",[a._v("重新安裝 scripting-addition，並重新啟動。")]),a._v(" "),n("p",[a._v("sudo yabai --uninstall-sa && sudo yabai --install-sa\nsudo yabai --load-sa")])])]),a._v(" "),n("h3",{attrs:{id:"無法使用浮動視窗"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#無法使用浮動視窗"}},[a._v("#")]),a._v(" 無法使用浮動視窗")]),a._v(" "),n("p",[a._v("設定「某些 App 啟動時，使用浮動視窗」**")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[a._v("yabai -m rule --add app=SomeName manage=off\n")])])]),n("p",[a._v("Ref: "),n("a",{attrs:{href:"https://github.com/koekeishiya/yabai/issues/76",target:"_blank",rel:"noopener noreferrer"}},[a._v("set certain window to float mode #76"),n("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=e.exports}}]);