(window.webpackJsonp=window.webpackJsonp||[]).push([[259],{546:function(n,e,s){"use strict";s.r(e);var t=s(10),o=Object(t.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"ubuntu-18-04-web-server-環境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-18-04-web-server-環境"}},[n._v("#")]),n._v(" Ubuntu 18.04 Web Server 環境")]),n._v(" "),e("ul",[e("li",[n._v("使用者帳號與群組建立")]),n._v(" "),e("li",[n._v("Python環境安裝與設定")]),n._v(" "),e("li",[n._v("DB服務（Postgres）安裝與設定")]),n._v(" "),e("li",[n._v("網站安裝與設定")]),n._v(" "),e("li",[n._v("uWSGI服務安裝與設定")]),n._v(" "),e("li",[n._v("nginx服務安裝與設定")])]),n._v(" "),e("h1",{attrs:{id:"使用者帳號與群組建立"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用者帳號與群組建立"}},[n._v("#")]),n._v(" 使用者帳號與群組建立")]),n._v(" "),e("p",[n._v("以下說明在作業系統環境，應建立之使用者帳號及群組。")]),n._v(" "),e("h2",{attrs:{id:"設定使用者與群組"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#設定使用者與群組"}},[n._v("#")]),n._v(" 設定使用者與群組")]),n._v(" "),e("p",[e("strong",[n._v("加入使用者帳號")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo adduser juzhengzhong\n$ usermod -aG sudo juzhengzhong\n")])])]),e("p",[e("strong",[n._v("先登出再使用 juzhengzhong 使用者帳號登入")])]),n._v(" "),e("p",[e("strong",[n._v("將登入時使用的使用者帳號加入 www-data 群組")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo usermod -aG www-data $USER\n")])])]),e("p",[e("strong",[n._v("驗證設定成功：")])]),n._v(" "),e("p",[n._v("先登出，再登入才能執行下列驗證指令。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ groups\n\n\n$ groups\njuzhengzhong root adm sudo www-data sambashare docker\n$ id\nuid=1003(juzhengzhong) gid=1004(juzhengzhong) 群組=1004(juzhengzhong),0(root),4(adm),27(sudo),33(www-data),126(sambashare),999(docker)\n")])])]),e("hr"),n._v(" "),e("h1",{attrs:{id:"python環境安裝與設定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#python環境安裝與設定"}},[n._v("#")]),n._v(" Python環境安裝與設定")]),n._v(" "),e("p",[e("strong",[n._v("更新作業系統套件庫。")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("sudo apt-get update\nsudo apt-get upgrade\n")])])]),e("p",[e("strong",[n._v("檢查作業系統預先安裝之 python 3 是否存在，且能正常運作。")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("# check if installed\npython3.6 --version\n==> Python 3.6.5\n")])])]),e("p",[e("strong",[n._v("在作業系統安裝 pip3 套件。")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo apt install python3-pip\n# Check if installed successfully\n$ pip3 --version\npip 9.0.1 from /usr/lib/python3/dist-packages (python 3.6)\n")])])]),e("p",[e("strong",[n._v("安裝  python 3 之 virtualenv 套件。")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo -H pip3 install virtualenv\n\n\n$ sudo -H pip3 install virtualenv\nRequirement already satisfied: virtualenv in /usr/local/lib/python3.6/dist-packages\n")])])]),e("p",[e("strong",[n._v("安裝  python 3 之 pipenv 套件。")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo -H pip3 install pipenv\n\n\n$ sudo -H pip3 install pipenv\nCollecting pipenv\n  Downloading https://files.pythonhosted.org/packages/13/b4/3ffa55f77161cff9a5220f162670f7c5eb00df52e00939e203f601b0f579/pipenv-2018.11.26-py3-none-any.whl (5.2MB)\n    100% |████████████████████████████████| 5.2MB 53kB/s\nCollecting virtualenv-clone>=0.2.5 (from pipenv)\n  Downloading https://files.pythonhosted.org/packages/e3/d9/d9c56deb483c4d3289a00b12046e41428be64e8236fa210111a1f57cc42d/virtualenv_clone-0.5.1-py2.py3-none-any.whl\nRequirement already satisfied: setuptools>=36.2.1 in /usr/lib/python3/dist-packages (from pipenv)\nRequirement already satisfied: certifi in /usr/lib/python3/dist-packages (from pipenv)\nRequirement already satisfied: pip>=9.0.1 in /usr/lib/python3/dist-packages (from pipenv)\nRequirement already satisfied: virtualenv in /usr/local/lib/python3.6/dist-packages (from pipenv)\nInstalling collected packages: virtualenv-clone, pipenv\nSuccessfully installed pipenv-2018.11.26 virtualenv-clone-0.5.1\n")])])]),e("hr"),n._v(" "),e("h1",{attrs:{id:"db服務-postgres-安裝與設定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#db服務-postgres-安裝與設定"}},[n._v("#")]),n._v(" DB服務（Postgres）安裝與設定")]),n._v(" "),e("h2",{attrs:{id:"安裝-postgres-套件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安裝-postgres-套件"}},[n._v("#")]),n._v(" 安裝 Postgres 套件")]),n._v(" "),e("p",[e("strong",[n._v("安裝指令：")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo apt install postgresql postgresql-contrib\n")])])]),e("p",[e("strong",[n._v("摘要：")])]),n._v(" "),e("p",[n._v("程式： /var/lib/postgresql/11/main/")]),n._v(" "),e("p",[n._v("重新啟動 Postgres Database Server：  /usr/lib/postgresql/11/bin/pg_ctl -D /var/lib/postgresql/11/main -l logfile start")]),n._v(" "),e("p",[n._v("Ver Cluster Port Status Owner    Data directory              Log file\n11  main    5432 down   postgres /var/lib/postgresql/11/main /var/log/postgresql/postgresql-11-main.log\nupdate-alternatives: using /usr/share/postgresql/11/man/man1/postmaster.1.gz to provide /usr/share/man/man1/postmaster.1.gz (postmaster.1.gz) in auto mode")]),n._v(" "),e("p",[e("strong",[n._v("驗證安裝")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('$ sudo -u postgres psql -c "SELECT version();"\n')])])]),e("h2",{attrs:{id:"操作-psql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作-psql"}},[n._v("#")]),n._v(" 操作 psql")]),n._v(" "),e("p",[e("strong",[n._v("方法一：不切換使用者帳號操作法")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('juzhengzhong@SRV-01:~$ sudo -u postgres psql\npsql (11.2 (Ubuntu 11.2-1.pgdg18.04+1))\nType "help" for help.\n\npostgres=# \\q\njuzhengzhong@SRV-01:~$\n')])])]),e("p",[e("strong",[n._v("方法二：先切換成 postgres 帳號操作法")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('juzhengzhong@SRV-01:~$ sudo su - postgres\npostgres@SRV-01:~$ psql\npsql (11.2 (Ubuntu 11.2-1.pgdg18.04+1))\nType "help" for help.\n\npostgres=# \\q\npostgres@SRV-01:~$ exit\n登出\njuzhengzhong@SRV-01:~$1\n')])])]),e("h2",{attrs:{id:"建立-role-與-database-授權"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建立-role-與-database-授權"}},[n._v("#")]),n._v(" 建立 Role 與 Database 授權")]),n._v(" "),e("p",[e("strong",[n._v("建立資料庫系統之使用者帳號")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('$ sudo su - postgres -c "createuser django2_helloworld"\n')])])]),e("p",[e("strong",[n._v("建立資料庫")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('$ sudo su - postgres -c "createdb django2_helloworld_db"\n')])])]),e("p",[e("strong",[n._v("設定資料庫使用者與其操作權限")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo -u postgres psql\npsql (11.2 (Ubuntu 11.2-1.pgdg18.04+1))\nType \"help\" for help.\n\npostgres=# grant all privileges on database django2_helloworld_db to django2_helloworld;\nGRANT\npostgres=# alter role django2_helloworld with password 'Passw0rd';\nALTER ROLE\npostgres=# \\q\n$\n")])])]),e("p",[e("strong",[n._v("刪除資料庫使用者")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('$ sudo su - postgres -c "dropuser django2_helloworld"\n')])])]),e("hr"),n._v(" "),e("h1",{attrs:{id:"設定網站-web-sites"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#設定網站-web-sites"}},[n._v("#")]),n._v(" 設定網站（Web Sites）")]),n._v(" "),e("h2",{attrs:{id:"安裝及設定-django-網站"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安裝及設定-django-網站"}},[n._v("#")]),n._v(" 安裝及設定 Django 網站")]),n._v(" "),e("p",[e("strong",[n._v("安裝網站所需檔案")])]),n._v(" "),e("p",[n._v("將 Django 網站所有檔案，放入如下路徑處：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ mkdir -p ~/workspace/django && cd $_\n$ git clone <RepoPath>\n")])])]),e("p",[e("strong",[n._v("設定檔案擁有者及其權限")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo chown -R $USER:www-data django2_helloworld/\n$ sudo chmod -R 775 django2_helloworld/\n")])])]),e("p",[e("strong",[n._v("安裝 Python 套件")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ cd django2_helloworld\n$ python3 --version\n$ pipenv --python 3.7.2\n$ pipenv install -r requirements.txt\n$ pipenv shell\n")])])]),e("p",[e("s",[e("strong",[n._v("設定 django 運作環境")])])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code")]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"})]),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('$ export django2_helloworld="staging"\n')])])]),e("p",[e("strong",[n._v("設定 django 資料庫")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ ./manage.py migrate\n$ ./manage.py createsuperuser    # juzhengzhong: juzhengzhong@gmail.com\n")])])]),e("p",[n._v("【註】： 建置開發環境使用的 SQLite 資料庫")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v(" $ DJANGO_SETTINGS_MODULE=web_site.settings.dev ./manage.py migrate \n $ DJANGO_SETTINGS_MODULE=web_site.settings.dev ./manage.py createsuperuser \n")])])]),e("p",[e("strong",[n._v("設定 static 檔案")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ ./manage.py collectstatic\n")])])]),e("hr"),n._v(" "),e("h1",{attrs:{id:"uwsgi-服務安裝與設定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uwsgi-服務安裝與設定"}},[n._v("#")]),n._v(" uwsgi 服務安裝與設定")]),n._v(" "),e("p",[n._v("為使 uwsgi service 能正常運作，Django 2 App 的「多環境設定」務必應有如下之配合：")]),n._v(" "),e("p",[e("strong",[n._v("managy.py")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == "__main__":\n    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "web_site.settings.prod")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            "Couldn\'t import Django. Are you sure it\'s installed and "\n            "available on your PYTHONPATH environment variable? Did you "\n            "forget to activate a virtual environment?"\n        ) from exc\n    execute_from_command_line(sys.argv)\n')])])]),e("p",[e("strong",[n._v("wsgi.py")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('"""\nWSGI config for web_site project.\n\nIt exposes the WSGI callable as a module-level variable named ``application``.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/2.0/howto/deployment/wsgi/\n"""\n\nimport os\n\nfrom django.core.wsgi import get_wsgi_application\n\n# os.environ.setdefault("DJANGO_SETTINGS_MODULE", "web_site.settings")\nos.environ.setdefault(\'DJANGO_SETTINGS_MODULE\', \'web_site.settings.prod\')\n\napplication = get_wsgi_application()\n')])])]),e("p",[e("strong",[n._v("base.py")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("\"\"\"\nDjango settings for web_site project.\n\nGenerated by 'django-admin startproject' using Django 2.0.\n\nFor more information on this file, see\nhttps://docs.djangoproject.com/en/2.0/topics/settings/\n\nFor the full list of settings and their values, see\nhttps://docs.djangoproject.com/en/2.0/ref/settings/\n\"\"\"\n\nimport os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '7g@&s!bkka+)w70=9=t2+%&r7um_!dg!7^5^yso%on@w&u&7g6'\n\n# SECURITY WARNING: don't run with debug turned on in production!\n# DEBUG= True\n\nALLOWED_HOSTS = [\n    '127.0.0.1',\n    'localhost',\n]\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'whitenoise.runserver_nostatic',\n    'django.contrib.staticfiles',\n\n    # Libs\n    'crispy_forms',\n\n    # My Apps\n    'pages.apps.PagesConfig',\n    'posts.apps.PostsConfig',\n    'books.apps.BooksConfig',\n    'accounts.apps.AccountsConfig',\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'whitenoise.middleware.WhiteNoiseMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n\n    # My MiddleWare\n]\n\nROOT_URLCONF = 'web_site.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [\n            os.path.join(BASE_DIR, 'templates'),\n        ],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = 'web_site.wsgi.application'\n\n# Database\n# https://docs.djangoproject.com/en/2.0/ref/settings/#databases\n\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n\n\n# Password validation\n# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',\n    },\n]\n\n\n# Internationalization\n# https://docs.djangoproject.com/en/2.0/topics/i18n/\n\nLANGUAGE_CODE = 'en-us'\n\nTIME_ZONE = 'UTC'\n\nUSE_I18N = True\n\nUSE_L10N = True\n\nUSE_TZ = True\n\n\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/2.0/howto/static-files/\n\nSTATIC_URL = '/static/'\n\n# location where you will store your static files\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, \"../static\"),\n]\n\n# The absolute path to the directory where collectstatic will collect static files for deployment.\nSTATIC_ROOT = os.path.join(BASE_DIR, '../staticfiles')\n\n# Simplified static file serving.\n# https://warehouse.python.org/project/whitenoise/\n# Document Ref: http://whitenoise.evans.io/en/stable/django.html\nSTATICFILES_STORAGEGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\n\n# Media Files\nMEDIA_ROOT = os.path.join(BASE_DIR, '../media')\nMEDIA_URL = '/media/'\n\n# User Account Management\nLOGIN_REDIRECT_URL = 'pages:home'\nLOGOUT_REDIRECT_URL = 'pages:home'\nAUTH_USER_MODEL = 'accounts.CustomUser'\n\n# Form formatting\nCRISPY_TEMPLATE_PACK = 'bootstrap4'\n")])])]),e("p",[e("strong",[n._v("dev.py")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("from .base import *\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/\n\nALLOWED_HOSTS = [\n    '127.0.0.1',\n    '0.0.0.0',\n]\n\n# Database\n# https://docs.djangoproject.com/en/2.0/ref/settings/#databases\n\nif 'DATABASE_HOST' in os.environ:\n    DATABASES\\['default'\\]['HOST'] = os.getenv('DATABASE_HOST')\n    DATABASES\\['default'\\]['ENGINE'] = 'django.db.backends.postgresql_psycopg2'\n    DATABASES\\['default'\\]['NAME'] = os.getenv('DATABASE_NAME')\n    DATABASES\\['default'\\]['USER'] = os.getenv('DATABASE_USER')\n    DATABASES\\['default'\\]['PASSWORD'] = os.getenv('DATABASE_PASSWORD')\n\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.postgresql_psycopg2',\n            'NAME': 'django2_helloworld_db',\n            'USER': 'django2_helloworld',\n            'PASSWORD': 'Passw0rd',\n            'HOST': 'localhost',\n            'PORT': '5432',\n        }\n    }\nelse:\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.sqlite3',\n            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n        }\n    }\n\n\n# Contact Us From\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'\n\n# BASE_URL required for notification emails\nBASE_URL = 'http://localhost:8000'\n")])])]),e("p",[e("strong",[n._v("prod.py")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("# from web_site.settings.base import *\nfrom .base import *\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = False\n\nALLOWED_HOSTS = [\n    '127.0.0.1',\n    '192.168.66.10',\n    'localhost',\n    'www.ccc99.tw',\n]\n\nDATABASES = {\n   'default': {\n       'ENGINE': 'django.db.backends.postgresql_psycopg2',\n       'NAME': 'django2_helloworld_db',\n       'USER': 'django2_helloworld',\n       'PASSWORD': 'Passw0rd',\n       'HOST': 'localhost',\n       'PORT': '5432',\n   }\n}\n\nDATABASE_URL = 'postgres://django2_helloworld:Passw0rd@localhost:5432/django2_hellowrold_db'\n")])])]),e("p",[e("strong",[n._v("heroku.py")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("# from web_site.settings.base import *\nfrom .base import *\nimport django_heroku\nimport dj_database_url\n\n# Set environment variables (SECRET_KEY and others)\nEMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')\nEMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')\n\n# SECURITY WARNING: keep the secret key used in production secret!\n# SECRET_KEY = 'CHANGE_ME!!!! (P.S. the SECRET_KEY environment variable will be used, if set, instead).'\n# SECRET_KEY = os.environ.get('SECRET_KEY')\n\n# SECURITY WARNING: don't run with debug turned on in production!\n# DEBGUG = True\nDEBUG = bool(os.environ.get('DJANGO_DEBUG', True))\n\n# # Quick-start development settings - unsuitable for production\n# # See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/\n\nALLOWED_HOSTS = [\n    '127.0.0.1',\n    'localhost',\n    '.herokuapp.com',\n    'serene-crag-30137.herokuapp.com',\n]\n\n# Database\n# https://docs.djangoproject.com/en/2.0/ref/settings/#databases\n\n# Heroku: Update database configuration from $DATABASE_URL\ndb_from_env = dj_database_url.config(conn_max_age=500)\nDATABASES['default'].update(db_from_env)\n\ndjango_heroku.settings(locals())\n")])])]),e("p",[e("strong",[n._v("urls.py")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("\"\"\"web_site URL Configuration\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/2.0/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('accounts/', include('accounts.urls')),\n    path('accounts/', include('django.contrib.auth.urls')),\n    path('books/', include('books.urls')),\n    path('posts/', include('posts.urls')),\n    path('', include('pages.urls')),\n]\n")])])]),e("h2",{attrs:{id:"安裝-uwsgi-套件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安裝-uwsgi-套件"}},[n._v("#")]),n._v(" 安裝 uwsgi 套件")]),n._v(" "),e("ol",[e("li",[e("p",[e("strong",[n._v("以 Global 方式安裝 uwsgi")])]),n._v(" "),e("p",[n._v("$ sudo -H pip3 install uwsgi")]),n._v(" "),e("p",[n._v("$ sudo -H pip3 install uwsgi\nCollecting uwsgi\nDownloading https://files.pythonhosted.org/packages/e7/1e/3dcca007f974fe4eb369bf1b8629d5e342bb3055e2001b2e5340aaefae7a/uwsgi-2.0.18.tar.gz (801kB)\n100% |████████████████████████████████| 808kB 1.8MB/s\nBuilding wheels for collected packages: uwsgi\nRunning setup.py bdist_wheel for uwsgi ... done\nStored in directory: /root/.cache/pip/wheels/2d/0c/b0/f3ba1bbce35c3766c9dac8c3d15d5431cac57e7a8c4111c268\nSuccessfully built uwsgi\nInstalling collected packages: uwsgi\nSuccessfully installed uwsgi-2.0.18\n$ uwsgi --version\n2.0.18")])]),n._v(" "),e("li",[e("p",[e("strong",[n._v("驗證 uwsgi 已能正常運作")])]),n._v(" "),e("p",[n._v("$ cd ~/workspace/django/django2_helloworld\n$ pipenv install -r requirements.txt  # 產生 .venv\n$ uwsgi --http 0.0.0.0:8000 --home ~/workspace/django/django2_helloworld/.venv/ --chdir ~/workspace/django/django2_helloworld  --wsgi-file ~/workspace/django/django2_helloworld/web_site/wsgi.py")]),n._v(" "),e("p",[n._v("$ uwsgi --http 0.0.0.0:8000 --home ~/workspace/django/django2_helloworld/.venv/ --chdir ~/workspace/django/django2_helloworld  --wsgi-file ~/workspace/django/django2_helloworld/web_site/wsgi.py\n*** Starting uWSGI 2.0.18 (64bit) on [Mon Apr  1 21:07:21 2019] ***\ncompiled with version: 7.3.0 on 01 April 2019 12:42:54\nos: Linux-4.15.0-46-generic #49-Ubuntu SMP Wed Feb 6 09:33:07 UTC 2019\nnodename: SRV-01\nmachine: x86_64\nclock source: unix\npcre jit disabled\ndetected number of CPU cores: 8\ncurrent working directory: /home/juzhengzhong/workspace/django/django2_helloworld\ndetected binary path: /usr/local/bin/uwsgi\nchdir() to /home/juzhengzhong/workspace/django/django2_helloworld\n*** WARNING: you are running uWSGI without its master process manager ***\nyour processes number limit is 63633\nyour memory page size is 4096 bytes\ndetected max file descriptor number: 1024\nlock engine: pthread robust mutexes\nthunder lock: disabled (you can enable it with --thunder-lock)\nuWSGI http bound on 0.0.0.0:8000 fd 4\nspawned uWSGI http 1 (pid: 29795)\nuwsgi socket 0 bound to TCP address 127.0.0.1:34649 (port auto-assigned) fd 3\nPython version: 3.6.7 (default, Oct 22 2018, 11:32:17)  [GCC 8.2.0]\nSet PythonHome to /home/juzhengzhong/workspace/django/django2_helloworld/.venv/\n*** Python threads support is disabled. You can enable it with --enable-threads ***\nPython main interpreter initialized at 0x55987cc93030\nyour server socket listen backlog is limited to 100 connections\nyour mercy for graceful operations on workers is 60 seconds\nmapped 72920 bytes (71 KB) for 1 cores\n*** Operational MODE: single process ***\n/home/juzhengzhong/workspace/django/django2_helloworld/.venv/lib/python3.6/site-packages/psycopg2/"),e("strong",[n._v("init")]),n._v('.py:144: UserWarning: The psycopg2 wheel package will be renamed from release 2.8; in order to keep installing from binary please use "pip install psycopg2-binary" instead. For details see: '),e("a",{attrs:{href:"http://initd.org/psycopg/docs/install.html#binary-install-from-pypi",target:"_blank",rel:"noopener noreferrer"}},[n._v("http://initd.org/psycopg/docs/install.html#binary-install-from-pypi"),e("OutboundLink")],1),n._v('.\n""")\nWSGI app 0 (mountpoint=\'\') ready in 0 seconds on interpreter 0x55987cc93030 pid: 29794 (default app)\n*** uWSGI is running in multiple interpreter mode ***\nspawned uWSGI worker 1 (and the only) (pid: 29794, cores: 1)\n[pid: 29794|app: 0|req: 1/1] 192.168.66.10 () {38 vars in 797 bytes} [Mon Apr  1 13:07:50 2019] GET / => generated 3450 bytes in 76 msecs (HTTP/1.1 200) 4 headers in 124 bytes (1 switches on core 0)\n[pid: 29794|app: 0|req: 2/2] 192.168.66.10 () {38 vars in 780 bytes} [Mon Apr  1 13:07:50 2019] GET /static/fontawesome/fontawesome-all.css => generated 112 bytes in 2 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 0)\n[pid: 29794|app: 0|req: 3/3] 192.168.66.10 () {38 vars in 742 bytes} [Mon Apr  1 13:07:50 2019] GET /static/css/base.css => generated 93 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 0)\n[pid: 29794|app: 0|req: 4/4] 192.168.66.10 () {40 vars in 851 bytes} [Mon Apr  1 13:07:53 2019] GET /posts/ => generated 3799 bytes in 15 msecs (HTTP/1.1 200) 4 headers in 124 bytes (1 switches on core 0)\n[pid: 29794|app: 0|req: 5/5] 192.168.66.10 () {38 vars in 786 bytes} [Mon Apr  1 13:07:53 2019] GET /static/fontawesome/fontawesome-all.css => generated 112 bytes in 2 msecs (HTTP/1.1 404) 3 headers in 101 bytes (1 switches on core 0)\n[pid: 29794|app: 0|req: 6/6] 192.168.66.10 () {38 vars in 748 bytes} [Mon Apr  1 13:07:53 2019] GET /static/css/base.css => generated 93 bytes in 1 msecs (HTTP/1.1 404) 3 headers in 100 bytes (1 switches on core 0)')])])]),n._v(" "),e("h2",{attrs:{id:"設定-uwsgi-執行環境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#設定-uwsgi-執行環境"}},[n._v("#")]),n._v(" 設定 uwsgi 執行環境")]),n._v(" "),e("p",[n._v("注意：以下之作業之前，需先以 juzhengzhong 使用者帳號登入。")]),n._v(" "),e("ol",[e("li",[e("p",[e("strong",[n._v("建立 uwsgi 目錄")])]),n._v(" "),e("p",[n._v("$ mkdir -p ~/uwsgi/sites")])]),n._v(" "),e("li",[e("p",[e("strong",[n._v("建立 ini 執行設定檔")])]),n._v(" "),e("p",[n._v("$ cd ~/uwsgi/sites\n$ nano django2_helloworld_uwsgi.ini")])])]),n._v(" "),e("p",[n._v("django2_helloworld_uwsgi.ini :")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("[uwsgi]\nhome = /home/juzhengzhong/workspace/django/django2_helloworld/.venv/\nchdir = /home/juzhengzhong/workspace/django/django2_helloworld\nwsgi-file = /home/juzhengzhong/workspace/django/django2_helloworld/web_site/wsgi.py\nhttp = 0.0.0.0:8000\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[e("p",[e("strong",[n._v("驗證 ini 檔已能正常執行")])]),n._v(" "),e("p",[n._v("$ uwsgi --ini /home/juzhengzhong/uwsgi/sites/django2_helloworld_uwsgi.ini")])])]),n._v(" "),e("h2",{attrs:{id:"建立-uwsgi-service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建立-uwsgi-service"}},[n._v("#")]),n._v(" 建立 uwsgi service")]),n._v(" "),e("ol",[e("li",[e("p",[e("strong",[n._v("建立 uwsgi service")])]),n._v(" "),e("p",[n._v("$ sudo nano /etc/systemd/system/uwsgi.service")])])]),n._v(" "),e("p",[n._v("uwsgi.service:")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("[Unit]\nDescription=uWSGI Emperor service\n[Service]\nExecStartPre=/bin/bash -c 'mkdir -p /run/uwsgi; chown juzhengzhong:www-data /run/uwsgi'\nExecStart=/usr/local/bin/uwsgi --emperor /home/juzhengzhong/uwsgi/sites\nRestart=always\nKillSignal=SIGQUIT\nType=notify\nNotifyAccess=all\n[Install]\nWantedBy=multi-user.target\n")])])]),e("p",[n._v("【註】： uwsgi 與 nginx 之溝通，將透過 unix socket 檔案，該檔案名稱為："),e("strong",[n._v("django_helloworld.sock")]),n._v(" ，置於目錄路徑： "),e("strong",[n._v("/home/juzhengzhong/uwsgi/")]),n._v(" 處。")]),n._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[n._v("啟用 uwsgi service\n$ sudo systemctl enable uwsgi")])]),n._v(" "),e("h2",{attrs:{id:"設定-nginx-網站與-uwsgi-溝通之設定檔"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#設定-nginx-網站與-uwsgi-溝通之設定檔"}},[n._v("#")]),n._v(" "),e("strong",[n._v("設定 nginx 網站與 uwsgi 溝通之設定檔")])]),n._v(" "),e("p",[n._v("建立設定檔")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo nano /home/juzhengzhong/uwsgi/sites/django2_helloworld_uwsgi.ini\n")])])]),e("p",[n._v("django2_helloworld_uwsgi.ini")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("[uwsgi]\n\n# Initial\n#home = /home/juzhengzhong/workspace/django/django2_helloworld/.venv/\n#chdir = /home/juzhengzhong/workspace/django/django2_helloworld\n#wsgi-file = /home/juzhengzhong/workspace/django/django2_helloworld/web_site/wsgi.py\n#http = 0.0.0.0:8000\n\n# defines directives here\nuid             = juzhengzhong\ngid             = www-data\nuser            = juzhengzhong\nuser_path       = /home/%(user)\nbase            = %(user_path)/workspace/django\nproject         = django2_helloworld\nsite            = web_site\n\n# =======================\n# Django-related settings\n# =======================\n\n# the project base directory (full path) : /app/django2_helloworld\nchdir           = %(base)/%(project)\n\n# Django's wsgi file : web_site.wsgi:application\nwsgi-file       = %(chdir)/%(site)/wsgi.py\n\n# Python Home\nhome            = %(chdir)/.venv\n\n# ========================\n# process-related settings\n# ========================\n\n# master\n#master          = true\n# maximum number of worker processes\n#processes       = 4\n#threads         = 2\n\n# the socket (use the full path to be safe)\nsocket          = %(user_path)/uwsgi/%(project).sock\n\n# ... with appropriate permissions - may be needed\nchown-socket    = %(uid):%(gid)\n\nchmod-socket    = 660\n\n# clear environment on exit\nvacuum          = true\n\n#disable-loggine  = false\n#log             = file\n#logto           = /var/log/uwsgi/%(project)\n")])])]),e("p",[e("strong",[n._v("uwsgi service 正常啟動")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo service uwsgi status\n● uwsgi.service - uWSGI Emperor service\n   Loaded: loaded (/etc/systemd/system/uwsgi.service; enabled; vendor preset: enabled)\n   Active: active (running) since Fri 2019-04-05 11:40:34 CST; 2s ago\n  Process: 24321 ExecStartPre=/bin/bash -c mkdir -p /run/uwsgi; chown juzhengzhong:www-data /run/uwsgi (code=exited, status=0/SUCCESS)\n Main PID: 24329 (uwsgi)\n   Status: \"The Emperor is governing 1 vassals\"\n    Tasks: 3 (limit: 4915)\n   CGroup: /system.slice/uwsgi.service\n           ├─24329 /usr/local/bin/uwsgi --emperor /home/juzhengzhong/uwsgi/sites\n           ├─24336 /usr/local/bin/uwsgi --ini django2_helloworld_uwsgi.ini\n           └─24344 /usr/local/bin/uwsgi --ini django2_helloworld_uwsgi.ini\n\n 4月 05 11:40:34 SRV-01 uwsgi[24329]: your server socket listen backlog is limited to 100 connections\n 4月 05 11:40:34 SRV-01 uwsgi[24329]: your mercy for graceful operations on workers is 60 seconds\n 4月 05 11:40:34 SRV-01 uwsgi[24329]: mapped 145840 bytes (142 KB) for 1 cores\n 4月 05 11:40:34 SRV-01 uwsgi[24329]: *** Operational MODE: single process ***\n 4月 05 11:40:36 SRV-01 uwsgi[24329]: WSGI app 0 (mountpoint='') ready in 2 seconds on interpreter 0x5590c6bea9d0 pid: 24336 (default app)\n 4月 05 11:40:36 SRV-01 uwsgi[24329]: *** uWSGI is running in multiple interpreter mode ***\n 4月 05 11:40:36 SRV-01 uwsgi[24329]: spawned uWSGI master process (pid: 24336)\n 4月 05 11:40:36 SRV-01 uwsgi[24329]: Fri Apr  5 11:40:36 2019 - [emperor] vassal django2_helloworld_uwsgi.ini has been spawned\n 4月 05 11:40:36 SRV-01 uwsgi[24329]: spawned uWSGI worker 1 (pid: 24344, cores: 1)\n 4月 05 11:40:36 SRV-01 uwsgi[24329]: Fri Apr  5 11:40:36 2019 - [emperor] vassal django2_helloworld_uwsgi.ini is ready to accept requests\n")])])]),e("p",[e("strong",[n._v("uwsgi service stop")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('$ sudo service uwsgi status\n● uwsgi.service - uWSGI Emperor service\n   Loaded: loaded (/etc/systemd/system/uwsgi.service; enabled; vendor preset: enabled)\n   Active: inactive (dead) since Fri 2019-04-05 11:48:27 CST; 2s ago\n  Process: 24642 ExecStart=/usr/local/bin/uwsgi --emperor /home/juzhengzhong/uwsgi/sites (code=exited, status=0/SUCCESS)\n  Process: 24632 ExecStartPre=/bin/bash -c mkdir -p /run/uwsgi; chown juzhengzhong:www-data /run/uwsgi (code=exited, status=0/SUCCESS)\n Main PID: 24642 (code=exited, status=0/SUCCESS)\n   Status: "The Emperor is buried."\n\n 4月 05 11:48:24 SRV-01 uwsgi[24642]: Fri Apr  5 11:48:24 2019 - [emperor] stop the uwsgi instance django2_helloworld_uwsgi.ini\n 4月 05 11:48:24 SRV-01 uwsgi[24642]: SIGINT/SIGQUIT received...killing workers...\n 4月 05 11:48:24 SRV-01 uwsgi[24642]: Fri Apr  5 03:48:24 2019 - received message 0 from emperor\n 4月 05 11:48:24 SRV-01 systemd[1]: Stopping uWSGI Emperor service...\n 4月 05 11:48:25 SRV-01 uwsgi[24642]: worker 1 buried after 1 seconds\n 4月 05 11:48:25 SRV-01 uwsgi[24642]: goodbye to uWSGI.\n 4月 05 11:48:25 SRV-01 uwsgi[24642]: VACUUM: unix socket /home/juzhengzhong/uwsgi/django2_helloworld.sock removed.\n 4月 05 11:48:26 SRV-01 uwsgi[24642]: Fri Apr  5 11:48:26 2019 - [emperor] removed uwsgi instance django2_helloworld_uwsgi.ini\n 4月 05 11:48:27 SRV-01 uwsgi[24642]: Fri Apr  5 11:48:27 2019 - The Emperor is buried.\n 4月 05 11:48:27 SRV-01 systemd[1]: Stopped uWSGI Emperor service.\n')])])]),e("h1",{attrs:{id:"nginx服務安裝與設定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx服務安裝與設定"}},[n._v("#")]),n._v(" Nginx服務安裝與設定")]),n._v(" "),e("p",[n._v("參考文件： https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-18-04")]),n._v(" "),e("h2",{attrs:{id:"安裝-nginx-套件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安裝-nginx-套件"}},[n._v("#")]),n._v(" "),e("strong",[n._v("安裝 nginx 套件")])]),n._v(" "),e("p",[e("strong",[n._v("執行 nginx 安裝指令")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo apt update\n$ sudo apt install nginx\n")])])]),e("h2",{attrs:{id:"設定-nginx-環境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#設定-nginx-環境"}},[n._v("#")]),n._v(" "),e("strong",[n._v("設定 nginx 環境")])]),n._v(" "),e("p",[e("strong",[n._v("設定系統服務層級之 nginx 執行環境")])]),n._v(" "),e("ol",[e("li",[e("strong",[n._v("變更設定檔。")]),n._v("\n$ sudo nano /etc/nginx/nginx.conf")])]),n._v(" "),e("p",[n._v("nginx.conf 設定結果：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('user www-data;\nworker_processes auto;\npid /run/nginx.pid;\ninclude /etc/nginx/modules-enabled/*.conf;\n\nevents {\n        worker_connections 768;\n        # multi_accept on;\n}\n\nhttp {\n\n        ##\n        # Basic Settings\n        ##\n\n        sendfile on;\n        tcp_nopush on;\n        tcp_nodelay on;\n        keepalive_timeout 65;\n        types_hash_max_size 2048;\n        # server_tokens off;\n\n        server_names_hash_bucket_size 64;\n        # server_name_in_redirect off;\n\n        include /etc/nginx/mime.types;\n        default_type application/octet-stream;\n\n        ##\n        # SSL Settings\n        ##\n\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE\n        ssl_prefer_server_ciphers on;\n\n        ##\n        # Logging Settings\n        ##\n\n        access_log /var/log/nginx/access.log;\n        error_log /var/log/nginx/error.log;\n\n        ##\n        # Gzip Settings\n        ##\n\n        gzip on;\n        gzip_disable "msie6";\n\n        # gzip_vary on;\n        # gzip_proxied any;\n        # gzip_comp_level 6;\n        # gzip_buffers 16 8k;\n        # gzip_http_version 1.1;\n        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;\n\n        ##\n        # Virtual Host Configs\n        ##\n\n        include /etc/nginx/conf.d/*.conf;\n        include /etc/nginx/sites-enabled/*;\n}\n\n\n#mail {\n#        # See sample authentication script at:\n#        # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript\n# \n#        # auth_http localhost/auth.php;\n#        # pop3_capabilities "TOP" "USER";\n#        # imap_capabilities "IMAP4rev1" "UIDPLUS";\n# \n#        server {\n#                listen     localhost:110;\n#                protocol   pop3;\n#                proxy      on;\n#        }\n# \n#        server {\n#                listen     localhost:143;\n#                protocol   imap;\n#                proxy      on;\n#        }\n#}\n')])])]),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[e("strong",[n._v("驗證設定檔內容無誤")])]),n._v(" "),e("p",[n._v("sudo nginx -t")]),n._v(" "),e("p",[n._v("$ sudo nginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful")])])]),n._v(" "),e("p",[n._v("【參考】："),e("strong",[n._v("nginx Service 管理指令")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("sudo service nginx status\nsudo service nginx stop\nsudo service nginx start\n")])])]),e("p",[e("strong",[n._v("設定網站層級之 nginx 設定")])]),n._v(" "),e("ol",[e("li",[e("p",[n._v("變更"),e("strong",[n._v("網站 nginx 設定檔")])]),n._v(" "),e("p",[n._v("$ sudo nano /etc/nginx/sites-available/django2_helloworld.conf")])])]),n._v(" "),e("p",[n._v("django2_helloworld.conf:")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("# configuration of the server\nserver {\n    # the port your site will be served on\n    listen          80;\n    # the domain name it will serve for\n    #server_name     .example.com; # substitute your machine's Ip address or FQDN\n    #server_name     127.0.0.1;\n    #server_name     192.168.66.10;\n    server_name     www.ccc99.tw;\n    charset         utf8-8;\n\n    # max upload size\n    client_max_body_size 75M;  # adjust to taste\n\n     location = /favicon.ico {\n        access_log      off;\n        log_not_found   off;\n    }\n\n    # Django media\n    location /media {\n        alias   /home/juzhengzhong/workspace/django/django2_helloworld/media;  \n    }\n\n    # Django static\n    location /static {\n        alias   /home/juzhengzhong/workspace/django/django2_helloworld/staticfiles;\n    }\n\n    # Finally, send all non-media requests to the Django s2.erver\n    location / {\n        include         uwsgi_params; # should be located in /etc/nginx/\n        uwsgi_pass      unix:/home/juzhengzhong/uwsgi/django2_helloworld.sock;\n    }\n}\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[e("strong",[n._v("啟用網站所需之 nginx 設定檔")]),n._v("\n$ sudo ln -s /etc/nginx/sites-available/django2_helloworld.conf /etc/nginx/sites-enabled/\n$ sudo rm /etc/nginx/sites-enabled/default")])]),n._v(" "),e("li",[e("p",[e("strong",[n._v("重新啟動 nginx service")]),n._v("\n$ sudo service uwsgi restart\n$ sudo service uwsgi status\n$ sudo service nginx restart\n$ sudo service nginx status")])])]),n._v(" "),e("hr"),n._v(" "),e("h1",{attrs:{id:"https"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[n._v("#")]),n._v(" HTTPS")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo add-apt-repository ppa:certbot/certbot\n$ sudo apt update\n$ sudo apt upgrade\n$ sudo apt install python-certbot-nginx\ns sudo cerbot --nginx -d ccc99.tw -d www.ccc99.tw\n\n\n\n$ sudo cerbot --nginx -d ccc99.tw -d www.ccc99.tw\nsudo: cerbot: command not found\njuzhengzhong@SRV-01:~$ sudo certbot --nginx -d ccc99.tw -d www.ccc99.tw\nSaving debug log to /var/log/letsencrypt/letsencrypt.log\nPlugins selected: Authenticator nginx, Installer nginx\nEnter email address (used for urgent renewal and security notices) (Enter 'c' to\ncancel): alanjui.1960@gmail.com\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nPlease read the Terms of Service at\nhttps://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must\nagree in order to register with the ACME server at\nhttps://acme-v02.api.letsencrypt.org/directory\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n(A)gree/(C)ancel: a\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nWould you be willing to share your email address with the Electronic Frontier\nFoundation, a founding partner of the Let's Encrypt project and the non-profit\norganization that develops Certbot? We'd like to send you email about our work\nencrypting the web, EFF news, campaigns, and ways to support digital freedom.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n(Y)es/(N)o: n\nObtaining a new certificate\nPerforming the following challenges:\nhttp-01 challenge for ccc99.tw\nhttp-01 challenge for www.ccc99.tw\nWaiting for verification...\nCleaning up challenges\nDeploying Certificate to VirtualHost /etc/nginx/sites-enabled/django2_helloworld.conf\nDeploying Certificate to VirtualHost /etc/nginx/sites-enabled/django2_helloworld.conf\n\nPlease choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n1: No redirect - Make no further changes to the webserver configuration.\n2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for\nnew sites, or if you're confident your site works on HTTPS. You can undo this\nchange by editing your web server's configuration.\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nSelect the appropriate number [1-2] then [enter] (press 'c' to cancel): 2\nRedirecting all traffic on port 80 to ssl in /etc/nginx/sites-enabled/django2_helloworld.conf\nRedirecting all traffic on port 80 to ssl in /etc/nginx/sites-enabled/django2_helloworld.conf\n\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\nCongratulations! You have successfully enabled https://ccc99.tw and\nhttps://www.ccc99.tw\n\nYou should test your configuration at:\nhttps://www.ssllabs.com/ssltest/analyze.html?d=ccc99.tw\nhttps://www.ssllabs.com/ssltest/analyze.html?d=www.ccc99.tw\n- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\nIMPORTANT NOTES:\n - Congratulations! Your certificate and chain have been saved at:\n   /etc/letsencrypt/live/ccc99.tw/fullchain.pem\n   Your key file has been saved at:\n   /etc/letsencrypt/live/ccc99.tw/privkey.pem\n   Your cert will expire on 2019-07-01. To obtain a new or tweaked\n   version of this certificate in the future, simply run certbot again\n   with the \"certonly\" option. To non-interactively renew *all* of\n   your certificates, run \"certbot renew\"\n - Your account credentials have been saved in your Certbot\n   configuration directory at /etc/letsencrypt. You should make a\n   secure backup of this folder now. This configuration directory will\n   also contain certificates and private keys obtained by Certbot so\n   making regular backups of this folder is ideal.\n - If you like Certbot, please consider supporting our work by:\n\n   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n   Donating to EFF:                    https://eff.org/donate-le\n\n\n\n\n# configuration of the server\nserver {\n    # the port your site will be served on\n    # the domain name it will serve for\n    #server_name     .example.com; # substitute your machine's Ip address or FQDN\n    #server_name     192.168.66.10;\n    server_name     ccc99.tw www.ccc99.tw;\n    charset         utf8-8;\n\n    # max upload size\n    client_max_body_size 75M;  # adjust to taste\n\n    location = /favicon.ico {\n        access_log      off;\n        log_not_found   off;\n    }\n\n    # Django media\n    location /media {\n        #root    /home/juzhengzhong/workspace/django2_helloworld;\n        alias   /home/juzhengzhong/workspace/django2_helloworld/media;  # your Django project's media files - amend as required\n    }\n\n    location /static {\n        alias   /home/juzhengzhong/workspace/django2_helloworld/web_site/staticfiles;\n    }\n\n    # Finally, send all non-media requests to the Django server\n    location / {\n        include         uwsgi_params; # should be located in /etc/nginx/\n        uwsgi_pass      unix:/home/juzhengzhong/uwsgi/django2_helloworld.sock;\n    }\n\n    listen 443 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/ccc99.tw/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/ccc99.tw/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n}\n\nserver {\n    if ($host = www.ccc99.tw) {\n        return 301 https://$host$request_uri;\n    } # managed by Certbot\n\n\n    if ($host = ccc99.tw) {\n        return 301 https://$host$request_uri;\n    } # managed by Certbot\n\n\n    listen          80;\n    server_name     ccc99.tw www.ccc99.tw;\n    return 404; # managed by Certbot\n}\n")])])]),e("p",[e("strong",[n._v("SSL Server Setting")]),n._v("\nhttps://www.ssllabs.com/ssltest/index.html")]),n._v(" "),e("hr"),n._v(" "),e("h1",{attrs:{id:"疑難排解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#疑難排解"}},[n._v("#")]),n._v(" 疑難排解")]),n._v(" "),e("p",[e("strong",[n._v("無法安裝 psycopg2 v2.8.x")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("sudo apt install python-psycopg2\nsudo apt install libpq-dev\npipenv install psycopg2==2.8.1\n")])])]),e("hr"),n._v(" "),e("h1",{attrs:{id:"參考文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#參考文件"}},[n._v("#")]),n._v(" 參考文件")]),n._v(" "),e("p",[e("strong",[n._v("Django Settings")]),n._v("\nhttps://docs.djangoproject.com/en/2.1/topics/settings/")]),n._v(" "),e("p",[n._v("https://medium.com/@panzelva/deploying-django-website-to-vps-with-uwsgi-and-nginx-on-ubuntu-18-04-db9b387ad19d")]),n._v(" "),e("p",[n._v("How To Install Python 3 and Set Up a Programming Environment on Ubuntu 18.04 [Quickstart]\nhttps://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-programming-environment-on-ubuntu-18-04-quickstart")]),n._v(" "),e("p",[e("strong",[n._v("多重環境")])]),n._v(" "),e("p",[n._v("https://stackoverflow.com/questions/10664244/django-how-to-manage-development-and-production-settings")])])}),[],!1,null,null,null);e.default=o.exports}}]);