(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{510:function(n,e,r){"use strict";r.r(e);var t=r(10),o=Object(t.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"fzf-工具安裝與操作簡介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fzf-工具安裝與操作簡介"}},[n._v("#")]),n._v(" fzf 工具安裝與操作簡介")]),n._v(" "),e("p",[n._v("fzf 提供的「Fuzzy 搜尋功能」，可用於「終端機」及「Vim 8編輯器」。")]),n._v(" "),e("p",[n._v("https://www.youtube.com/watch?v=1a5NiMhqAR0&")]),n._v(" "),e("p",[e("a",{attrs:{href:"https://youtu.be/1a5NiMhqAR0",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://youtu.be/1a5NiMhqAR0"),e("OutboundLink")],1)]),n._v(" "),e("h1",{attrs:{id:"fzf-安裝與設定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fzf-安裝與設定"}},[n._v("#")]),n._v(" fzf 安裝與設定")]),n._v(" "),e("p",[n._v("以下之安裝作業程序，個人測試過，試用於 Ubuntu 20.04 與 macOS 11.1 之作業系統。")]),n._v(" "),e("h2",{attrs:{id:"將-fzf-充當「終端機」工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#將-fzf-充當「終端機」工具"}},[n._v("#")]),n._v(" 將 fzf 充當「終端機」工具")]),n._v(" "),e("p",[n._v("https://github.com/junegunn/fzf/blob/master/README-VIM.md")]),n._v(" "),e("p",[e("strong",[n._v("（1）自 Git Repo 下載安裝執行檔")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf\n")])])]),e("p",[e("strong",[n._v("（2）執行安裝軟件")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ ~/.fzf/install\nDownloading bin/fzf ...\n  - Found in $PATH\n  - Creating symlink: bin/fzf -> /usr/bin/fzf\n  - Checking fzf executable ... 0.20.0 != 0.25.0\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   635  100   635    0     0   1446      0 --:--:-- --:--:-- --:--:--  1443\n100 1122k  100 1122k    0     0  1024k      0  0:00:01  0:00:01 --:--:-- 1024k\n  - Checking fzf executable ... 0.25.0\nDo you want to enable fuzzy auto-completion? ([y]/n) y\nDo you want to enable key bindings? ([y]/n) y\n\nGenerate /home/alanjui/.fzf.bash ... OK\nGenerate /home/alanjui/.fzf.zsh ... OK\n\nDo you want to update your shell configuration files? ([y]/n) y\n\nUpdate /home/alanjui/.bashrc:\n  - [ -f ~/.fzf.bash ] && source ~/.fzf.bash\n    - Already exists: line #173\n\nUpdate /home/alanjui/.zshrc:\n  - [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh\n    + Added\n\nFinished. Restart your shell or reload config file.\n   source ~/.bashrc  # bash\n   source ~/.zshrc   # zsh\n\nUse uninstall script to remove fzf.\n\nFor more information, see: https://github.com/junegunn/fzf\n")])])]),e("p",[e("strong",[n._v("（3）驗證執行檔安裝路徑")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ which fzf\n/usr/bin/fzf\n")])])]),e("p",[e("strong",[n._v("（4）驗證各 Shell 的設定檔")]),n._v("\n驗證下列各 Shell 設定檔，是否已加入應有的「設定」。")]),n._v(" "),e("p",[n._v("《"),e("strong",[n._v("Bash Shell 設定檔》：~/.bashrc")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("....\n[ -f ~/.fzf.bash ] && source ~/.fzf.bash\n")])])]),e("p",[n._v("《"),e("strong",[n._v("ZSH Shell 設定檔》：~/.zshrc")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("....\n[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh\n")])])]),e("h2",{attrs:{id:"與-vim-8-整合應用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#與-vim-8-整合應用"}},[n._v("#")]),n._v(" 與 Vim 8 整合應用")]),n._v(" "),e("p",[n._v("https://github.com/junegunn/fzf.vim")]),n._v(" "),e("p",[n._v("（1）在 "),e("strong",[n._v("Vim  Plugins 設定檔，加入如下設定：")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("vim ~/.vim/vimrc\n\n\n\" check whether vim-plug is installed and install it if necessary\nif empty(glob('~/.vim/autoload/plug.vim'))\n  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs\n    \\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n  autocmd VimEnter * PlugInstall\nendif\n\n\"==============================================================\n\" 擴充套件安裝\n\"==============================================================\n\ncall plug#begin('~/.vim/plugged')\n....\nPlug 'junegunn/fzf', { 'do': { -> fzf#install() } }\nPlug 'junegunn/fzf.vim'\n\ncall plug#end()\n")])])]),e("p",[e("strong",[n._v("（2）在 Vim 8 透過 vim-plug 安裝 Plugins")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v(":PlugInstall\n")])])]),e("p",[e("strong",[n._v("（3）在 Vim 設定檔，加入設定。")])]),n._v(" "),e("p",[n._v("【註】：以下的「設定」 ，會令「Preview Window」顯示在 Vim 的畫面中央，此等功能需要 Vim 8.2 方能支援。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("\" Keymap\nmap <silent> <Leader>f :Files<CR>\nmap <silent> <Leader>g :GFiles<CR>\nmap <silent> <leader>b :Buffers<CR>\nnnoremap <leader>g :Rg<CR>\nnnoremap <leader>t :Tags<CR>\nnnoremap <leader>m :Marks<CR>\n\n\n\" This is the default extra key bindings\nlet g:fzf_action = {\n  \\ 'ctrl-t': 'tab split',\n  \\ 'ctrl-x': 'split',\n  \\ 'ctrl-v': 'vsplit' }\n\n\" Enable per-command history.\n\" CTRL-N and CTRL-P will be automatically bound to next-history and\n\" previous-history instead of down and up. If you don't like the change,\n\" explicitly bind the keys to down and up in your $FZF_DEFAULT_OPTS.\nlet g:fzf_history_dir = '~/.local/share/fzf-history'\n\n\nlet g:fzf_tags_command = 'ctags -R'\n\" Border color\nlet g:fzf_layout = {'up':'~90%', 'window': { 'width': 0.8, 'height': 0.8,'yoffset':0.5,'xoffset': 0.5, 'highlight': 'Todo', 'border': 'sharp' } }\n\nlet $FZF_DEFAULT_OPTS = '--layout=reverse --info=inline'\nlet $FZF_DEFAULT_COMMAND=\"rg --files --hidden\"\n\" let $FZF_DEFAULT_COMMAND=\"rg --files\"\n\n\n\" Customize fzf colors to match your color scheme\nlet g:fzf_colors =\n\\ { 'fg':      ['fg', 'Normal'],\n  \\ 'bg':      ['bg', 'Normal'],\n  \\ 'hl':      ['fg', 'Comment'],\n  \\ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],\n  \\ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],\n  \\ 'hl+':     ['fg', 'Statement'],\n  \\ 'info':    ['fg', 'PreProc'],\n  \\ 'border':  ['fg', 'Ignore'],\n  \\ 'prompt':  ['fg', 'Conditional'],\n  \\ 'pointer': ['fg', 'Exception'],\n  \\ 'marker':  ['fg', 'Keyword'],\n  \\ 'spinner': ['fg', 'Label'],\n  \\ 'header':  ['fg', 'Comment'] }\n\n\"Get Files\ncommand! -bang -nargs=? -complete=dir Files\n    \\ call fzf#vim#files(<q-args>, fzf#vim#with_preview({'options': ['--layout=reverse', '--info=inline']}), <bang>0)\n\n\n\" Get text in files with Rg\ncommand! -bang -nargs=* Rg\n  \\ call fzf#vim#grep(\n  \\   'rg --column --line-number --no-heading --color=always --smart-case '.shellescape(<q-args>), 1,\n  \\   fzf#vim#with_preview(), <bang>0)\n\n\" Ripgrep advanced\nfunction! RipgrepFzf(query, fullscreen)\n  let command_fmt = 'rg --column --line-number --no-heading --color=always --smart-case %s || true'\n  let initial_command = printf(command_fmt, shellescape(a:query))\n  let reload_command = printf(command_fmt, '{q}')\n  let spec = {'options': ['--phony', '--query', a:query, '--bind', 'change:reload:'.reload_command]}\n  call fzf#vim#grep(initial_command, 1, fzf#vim#with_preview(spec), a:fullscreen)\nendfunction\n\ncommand! -nargs=* -bang RG call RipgrepFzf(<q-args>, <bang>0)\n\n\" Git grep\ncommand! -bang -nargs=* GGrep\n  \\ call fzf#vim#grep(\n  \\   'git grep --line-number '.shellescape(<q-args>), 0,\n  \\   fzf#vim#with_preview({'dir': systemlist('git rev-parse --show-toplevel')[0]}), <bang>0)\n")])])]),e("p",[n._v("使用「快捷鍵」："),e("strong",[n._v("《，》")]),n._v("+"),e("strong",[n._v("《f》")]),n._v("；或用「Vim 指令」："),e("strong",[n._v(":Files")]),n._v(" ，Vim 將會顯示如下之 fzf preview 畫面。在畫面「左邊」的「檔案清單」，若有檔案不想看到，譬如： Django 專案的 "),e("strong",[n._v("**pycach")]),n._v("/  目錄，或** .pyc 檔案，可藉由 git repo 及 .gitignore 來控制「不要顯示」。")]),n._v(" "),e("p",[n._v("至於「隱藏檔」，要不要顯示，則透過 vimrc 設定檔中的 "),e("strong",[n._v("$FZF_DEFAULT_COMMAND")]),n._v(" 變數來控制。想要顯示隱藏檔，就加入選項 —hidden：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('let $FZF_DEFAULT_COMMAND="rg --files --hidden"\n')])])]),e("p",[e("img",{attrs:{src:"https://paper-attachments.dropbox.com/s_47C109833DC0497FDCE822317C00C069C098DEF280C17A0C6936FF770DF11953_1612020401643_image.png",alt:""}})]),n._v(" "),e("p",[n._v("以下為 Django 專案，所使用 .gitignore 設定：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("###################\n.DS_Store\n.hg\n.svn\n.idea\n.vscode\n.git\n*.vscode\nnode_modules\n###################\n# Python files\n.venv/\nenv/\n__pycache__/\n.pyc\nstatic_collected/\n# Temporary files\n*.kate-swp\n*.swp\n*.swo\n*~\n")])])]),e("hr"),n._v(" "),e("h1",{attrs:{id:"安裝-vim-8-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安裝-vim-8-2"}},[n._v("#")]),n._v(" 安裝 Vim 8.2")]),n._v(" "),e("p",[n._v("https://www.ultralinux.org/post/how-to-install-vim-8-2-on-ubuntu/")]),n._v(" "),e("p",[e("strong",[n._v("（1） 解除已安裝 Vim")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("sudo apt remove --purge vim vim-runtime\n")])])]),e("p",[e("strong",[n._v("（2）自 Git  Repo 下載原始碼")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("cd ~/build\ngit clone https://github.com/vim/vim\ncd vim\ngit pull && git fetch\n")])])]),e("p",[e("strong",[n._v("（3） 執行「設定編譯組態」")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('$ ./configure \\\n--enable-multibyte \\\n--enable-rubyinterp=dynamic \\\n--enable-pythoninterp=dynamic \\\n--with-ruby-command=/usr/bin/ruby \\\n--enable-python3interp \\\n--enable-cscope \\\n--enable-gui=auto \\\n--with-features=huge \\\n--with-x \\\n--enable-fontset \\\n--enable-largefile \\\n--disable-netbeans \\\n--with-compiledby="alanjui" \\\n--enable-fail-if-missing\n\n$ make && sudo make install\n')])])]),e("p",[n._v("【註】：")]),n._v(" "),e("ul",[e("li",[e("p",[n._v("安裝路徑：")]),n._v(" "),e("h1",{attrs:{id:"執行檔安裝路徑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#執行檔安裝路徑"}},[n._v("#")]),n._v(" 執行檔安裝路徑")]),n._v(" "),e("p",[n._v("$ which vim\n/usr/local/bin/vim")]),n._v(" "),e("h1",{attrs:{id:"執行環境存放路徑"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#執行環境存放路徑"}},[n._v("#")]),n._v(" 執行環境存放路徑")]),n._v(" "),e("p",[n._v("$ ll /usr/local/share/vim/vim82\n總用量 392\ndrwxr-xr-x  4 root root  4096  1月 30 22:25 autoload\n-rw-r--r--  1 root root  1927  1月 30 22:25 bugreport.vim\ndrwxr-xr-x  3 root root  4096  1月 30 22:25 colors\ndrwxr-xr-x  2 root root  4096  1月 30 22:25 compiler\n-rw-r--r--  1 root root  4454  1月 30 22:25 defaults.vim\n-rw-r--r--  1 root root   806  1月 30 22:25 delmenu.vim\ndrwxr-xr-x  2 root root  4096  1月 30 22:25 doc\n-rw-r--r--  1 root root  2126  1月 30 22:25 evim.vim\n-rw-r--r--  1 root root 61332  1月 30 22:25 filetype.vim\n-rw-r--r--  1 root root   280  1月 30 22:25 ftoff.vim\ndrwxr-xr-x  2 root root 12288  1月 30 22:25 ftplugin\n-rw-r--r--  1 root root   971  1月 30 22:25 ftplugin.vim\n-rw-r--r--  1 root root   337  1月 30 22:25 ftplugof.vim\n-rw-r--r--  1 root root  1641  1月 30 22:25 gvimrc_example.vim\ndrwxr-xr-x  2 root root  4096  1月 30 22:25 indent\n-rw-r--r--  1 root root   767  1月 30 22:25 indent.vim\n-rw-r--r--  1 root root   282  1月 30 22:25 indoff.vim\ndrwxr-xr-x  2 root root  4096  1月 30 22:25 keymap\ndrwxr-xr-x 43 root root 12288  1月 30 22:25 lang\ndrwxr-xr-x  6 root root  4096  1月 30 22:25 macros\n-rw-r--r--  1 root root 42147  1月 30 22:25 menu.vim\n-rw-r--r--  1 root root  3430  1月 30 22:25 mswin.vim\n-rw-r--r--  1 root root 67096  1月 30 22:25 optwin.vim\ndrwxr-xr-x  3 root root  4096  1月 30 22:25 pack\ndrwxr-xr-x  2 root root  4096  1月 30 22:25 plugin\ndrwxr-xr-x  2 root root  4096  1月 30 22:25 print\n-rw-r--r--  1 root root 17780  1月 30 22:25 rgb.txt\n-rw-r--r--  1 root root 11716  1月 30 22:25 scripts.vim\ndrwxr-xr-x  2 root root  4096  1月 30 22:25 spell\n-rw-r--r--  1 root root 39825  1月 30 22:25 synmenu.vim\ndrwxr-xr-x  2 root root 20480  1月 30 22:25 syntax\ndrwxr-xr-x  2 root root  4096  1月 30 22:25 tools\ndrwxr-xr-x  2 root root  4096  1月 30 22:25 tutor\n-rw-r--r--  1 root root  1369  1月 30 22:25 vimrc_example.vim")])]),n._v(" "),e("li",[e("p",[n._v("錯誤路徑：\n/usr/bin/vim")])])]),n._v(" "),e("p",[e("strong",[n._v("（4）驗證安裝結果")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('$ /usr/local/bin/vim --version\nVIM - Vi IMproved 8.2 (2019 Dec 12, compiled Jan 30 2021 22:25:11)\n引入修正: 1-2427\n編譯者:alanjui@SRV-2020\n超強版本 不使用圖型界面。 目前可使用(+)與不可使用(-)的模組列表:\n+acl               -farsi             +mouse_sgr         +tag_binary\n+arabic            +file_in_path      -mouse_sysmouse    -tag_old_static\n+autocmd           +find_in_path      +mouse_urxvt       -tag_any_white\n+autochdir         +float             +mouse_xterm       -tcl\n-autoservername    +folding           +multi_byte        +termguicolors\n-balloon_eval      -footer            +multi_lang        +terminal\n+balloon_eval_term +fork()            -mzscheme          +terminfo\n-browse            +gettext           +netbeans_intg     +termresponse\n++builtin_terms    -hangul_input      +num64             +textobjects\n+byte_offset       +iconv             +packages          +textprop\n+channel           +insert_expand     +path_extra        +timers\n+cindent           +ipv6              -perl              +title\n+clientserver      +job               +persistent_undo   -toolbar\n+clipboard         +jumplist          +popupwin          +user_commands\n+cmdline_compl     +keymap            +postscript        +vartabs\n+cmdline_hist      +lambda            +printer           +vertsplit\n+cmdline_info      +langmap           +profile           +virtualedit\n+comments          +libcall           -python            +visual\n+conceal           +linebreak         -python3           +visualextra\n+cryptv            +lispindent        +quickfix          +viminfo\n+cscope            +listcmds          +reltime           +vreplace\n+cursorbind        +localmap          +rightleft         +wildignore\n+cursorshape       -lua               -ruby              +wildmenu\n+dialog_con        +menu              +scrollbind        +windows\n+diff              +mksession         +signs             +writebackup\n+digraphs          +modify_fname      +smartindent       +X11\n-dnd               +mouse             -sound             +xfontset\n-ebcdic            -mouseshape        +spell             -xim\n+emacs_tags        +mouse_dec         +startuptime       -xpm\n+eval              -mouse_gpm         +statusline        +xsmp_interact\n+ex_extra          -mouse_jsbterm     -sun_workshop      +xterm_clipboard\n+extra_search      +mouse_netterm     +syntax            -xterm_save\n        系統 vimrc 設定檔: "$VIM/vimrc"\n  使用者個人 vimrc 設定檔: "$HOME/.vimrc"\n    第二組個人 vimrc 檔案: "~/.vim/vimrc"\n   使用者個人 exrc 設定檔: "$HOME/.exrc"\n       defaults file: "$VIMRUNTIME/defaults.vim"\n              $VIM 預設值: "/usr/local/share/vim"\n編譯方式: gcc -c -I. -Iproto -DHAVE_CONFIG_H -O2 -fno-strength-reduce -Wall -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1\n鏈結方式: gcc -L/usr/local/lib -Wl,--as-needed -o vim -lSM -lICE -lXt -lX11 -lXdmcp -lSM -lICE -lm -ltinfo -ldl\n')])])]),e("p",[e("strong",[n._v("（5）下載個人 Vim 8 設定檔")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("git clone https://github.com/AlanJui/vim8 ~/.vim\nvim\n\n\n\n:PlugInstall\n:CocInstall\n")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);