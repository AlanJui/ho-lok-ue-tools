(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{447:function(n,e,s){"use strict";s.r(e);var a=s(10),t=Object(a.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"vagrant-pyenv-pipenv-postgres"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vagrant-pyenv-pipenv-postgres"}},[n._v("#")]),n._v(" vagrant + pyenv + pipenv + postgres")]),n._v(" "),e("h1",{attrs:{id:"host端開發機"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#host端開發機"}},[n._v("#")]),n._v(" Host端開發機")]),n._v(" "),e("p",[n._v("開發機本身作業系統為： Mac OS X")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('brew install pyenv\n\n\nbrew upgrade pyenv\n\n\n\nbrew upgrade pyenv                                                  \n==> Upgrading 1 outdated package:\npyenv 1.2.10 -> 1.2.11\n==> Upgrading pyenv\n==> Installing dependencies for pyenv: readline\n==> Installing pyenv dependency: readline\n==> Downloading https://homebrew.bintray.com/bottles/readline-8.0.0_1.mojave.bottle.tar.gz\n######################################################################## 100.0%\n==> Pouring readline-8.0.0_1.mojave.bottle.tar.gz\n==> Caveats\nreadline is keg-only, which means it was not symlinked into /usr/local,\nbecause macOS provides the BSD libedit library, which shadows libreadline.\nIn order to prevent conflicts when programs look for libreadline we are\ndefaulting this GNU Readline installation to keg-only.\n\nFor compilers to find readline you may need to set:\n  export LDFLAGS="-L/usr/local/opt/readline/lib"\n  export CPPFLAGS="-I/usr/local/opt/readline/include"\n\nFor pkg-config to find readline you may need to set:\n  export PKG_CONFIG_PATH="/usr/local/opt/readline/lib/pkgconfig"\n\n==> Summary\n🍺  /usr/local/Cellar/readline/8.0.0_1: 48 files, 1.5MB\n==> Installing pyenv\n==> Downloading https://homebrew.bintray.com/bottles/pyenv-1.2.11.mojave.bottle.tar.gz\n######################################################################## 100.0%\n==> Pouring pyenv-1.2.11.mojave.bottle.tar.gz\n🍺  /usr/local/Cellar/pyenv/1.2.11: 643 files, 2.4MB\n==> Caveats\n==> readline\nreadline is keg-only, which means it was not symlinked into /usr/local,\nbecause macOS provides the BSD libedit library, which shadows libreadline.\nIn order to prevent conflicts when programs look for libreadline we are\ndefaulting this GNU Readline installation to keg-only.\n\nFor compilers to find readline you may need to set:\n  export LDFLAGS="-L/usr/local/opt/readline/lib"\n  export CPPFLAGS="-I/usr/local/opt/readline/include"\n\nFor pkg-config to find readline you may need to set:\n  export PKG_CONFIG_PATH="/usr/local/opt/readline/lib/pkgconfig"\n')])])]),e("hr"),n._v(" "),e("p",[n._v("完成 pyenv 安裝後，會產生目錄 ~/.pyenv")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ tree -L 1 ~/.pyenv\n/Users/alanjui/.pyenv\n├── shims\n└── versions\n\n\n$ tree -L 2 ~/.pyenv  \n/Users/alanjui/.pyenv\n├── shims\n│   ├── 2to3\n│   ├── 2to3-3.6\n│   ├── 2to3-3.7\n│   ├── easy_install\n│   ├── easy_install-3.6\n│   ├── easy_install-3.7\n│   ├── idle\n│   ├── idle3\n│   ├── idle3.6\n│   ├── idle3.7\n│   ├── pip\n│   ├── pip3\n│   ├── pip3.6\n│   ├── pip3.7\n│   ├── pydoc\n│   ├── pydoc3\n│   ├── pydoc3.6\n│   ├── pydoc3.7\n│   ├── python\n│   ├── python-config\n│   ├── python3\n│   ├── python3-config\n│   ├── python3.6\n│   ├── python3.6-config\n│   ├── python3.6-gdb.py\n│   ├── python3.6m\n│   ├── python3.6m-config\n│   ├── python3.7\n│   ├── python3.7-config\n│   ├── python3.7-gdb.py\n│   ├── python3.7m\n│   ├── python3.7m-config\n│   ├── pyvenv\n│   ├── pyvenv-3.6\n│   └── pyvenv-3.7\n└── versions\n    ├── 3.6.8\n    └── 3.7.3\n")])])]),e("hr"),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("pyenv install 3.8.5\n\n\n\n$ pyenv versions\n* system (set by /Users/alanjui/.pyenv/version)\n  3.6.8\n  3.7.3\n\n\n\n$ pyenv version\nsystem (set by /Users/alanjui/.pyenv/version)\n\n\n\n$ pyenv global 3.7.3\n\n$ pyenv version \n3.7.3 (set by /Users/alanjui/.pyenv/version)\n\n$ python --version\nPython 2.7.15\n\n$ python3 --version\nPython 3.7.3\n\n\n\n$ pyenv which python\n$ pip install pipenv\n")])])]),e("hr"),n._v(" "),e("h1",{attrs:{id:"guest端虛擬機"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#guest端虛擬機"}},[n._v("#")]),n._v(" Guest端虛擬機")]),n._v(" "),e("p",[n._v("啟動虛擬機")]),n._v(" "),e("p",[n._v("（1）在開發機使用 Terminal App 執行以下指令：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ vagrant up\n$ vagrant ssh\n")])])]),e("p",[n._v("（2）執行「安裝 pipenv 作業」。")]),n._v(" "),e("p",[n._v("（3）執行「安裝 Postgres 作業」。")]),n._v(" "),e("p",[n._v("（4）執行「驗證資料庫系統已備妥」。")]),n._v(" "),e("p",[n._v("（5）啟動虛擬機的伺服器。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('DJANGO_SETTINGS_MODULE="web_site.settings.prod" ./manage.py collectstatic\nDJANGO_SETTINGS_MODULE="web_site.settings.prod" ./manage.py createsuperuserv\nDJANGO_SETTINGS_MODULE="web_site.settings.prod" ./manage.py runserver 0:8000\n')])])]),e("h2",{attrs:{id:"安裝-postgres-作業"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安裝-postgres-作業"}},[n._v("#")]),n._v(" 安裝 Postgres 作業")]),n._v(" "),e("p",[n._v("安裝 Postgres DB 資料庫系統，及進行：使用者、資料庫設定。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo apt install postgresql postgresql-contrib\n\n\n\n$ sudo -u postgres createuser django2_helloworld -P\n")])])]),e("p",[n._v("-P 表 Password，當要求輸入 password 時，輸入： "),e("strong",[n._v("Passw0rd")]),n._v(" 。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo -u postgres createdb django2_helloworld_db -O django2_helloworld\n")])])]),e("h2",{attrs:{id:"安裝-postcopg2-作業"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安裝-postcopg2-作業"}},[n._v("#")]),n._v(" 安裝 postcopg2 作業")]),n._v(" "),e("p",[n._v("安裝 python 套件，以便 Django Framework 可存取 Postgres DB 資料庫。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo apt install python3-dev python3-psycopg2 libpq-dev\n\n\n\n$ pip3 install psycopg2\n")])])]),e("p",[n._v("修訂 web_site/settings/prod.py 設定：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("DATABASES = {\n   'default': {\n       'ENGINE': 'django.db.backends.postgresql_psycopg2',\n       'NAME': 'django2_helloworld_db',\n       'USER': 'django2_helloworld',\n       'PASSWORD': 'Passw0rd',\n       'HOST': 'localhost',\n       'PORT': '5432',\n   }\n}\n\nDATABASE_URL = 'postgres://django2_helloworld:Passw0rd@localhost:5432/django2_hellowrold_db'\n")])])]),e("h2",{attrs:{id:"驗證資料庫系統已備妥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#驗證資料庫系統已備妥"}},[n._v("#")]),n._v(" 驗證資料庫系統已備妥")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ DJANGO_SETTINGS_MODULE=web_site.settings.prod ./manage.py migrate\n$ sudo -u postgres psql django2_helloworld_db\n")])])]),e("h2",{attrs:{id:"安裝-pipenv-作業"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安裝-pipenv-作業"}},[n._v("#")]),n._v(" 安裝 pipenv 作業")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ pip install --upgrade pip\n\n\n$ pyenv versions\n\n\n$ cd <ProjectRootDir>\n\n\n$ pyenv local 3.7.3\n\n\n$ python --version\n\n\n$ pip install -U pipenv\n\n\n$ pipenv --version\n")])])]),e("p",[n._v("參考資訊：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ which pipenv\n/Users/alanjui/.pyenv/shims/pipenv\n\nll ~/.pyenv/shims/pipenv*\n-rwxr-xr-x  1 alanjui  staff   417B  4 29 22:04 /Users/alanjui/.pyenv/shims/pipenv\n-rwxr-xr-x  1 alanjui  staff   417B  4 29 22:04 /Users/alanjui/.pyenv/shims/pipenv-resolver\n")])])]),e("h2",{attrs:{id:"啟動虛擬環境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#啟動虛擬環境"}},[n._v("#")]),n._v(" 啟動虛擬環境")]),n._v(" "),e("p",[n._v("~/.bashrc")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('export PYENV_ROOT="$HOME/.pyenv"\nexport PATH="$PYENV_ROOT/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"\nif command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init -)"\nfi\n\n# Create VirtualEnvironment directory under Django Project Root\nexport PIPENV_VENV_IN_PROJECT="enabled"\n\n\n$ source ~/.bashrc\n\n\n$ python --version\n')])])]),e("p",[n._v("若版本不是 3.7.3 ，則需先執行指令： pyenv local 3.7.3")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ pipenv install\n\n\n$ pipenv shell\n\n\n$ pipenv install django==2.2\n")])])]),e("h2",{attrs:{id:"nginx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[n._v("#")]),n._v(" nginx")]),n._v(" "),e("p",[n._v("/etc/nginx/site-available/django_app")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("server {\n        listen 80 default_server;\n        # listen [::]:80 default_server;\n\n        server_name _;\n\n        # root /var/www/html;\n        root /home/vagrant/workspace/django_app;\n\n        # Add index.php to the list if you are using PHP\n        index index.html index.htm index.nginx-debian.html;\n\n        location / {\n                # First attempt to serve request as file, then\n                # as directory, then fall back to displaying a 404.\n                try_files $uri $uri/ =404;\n                \n                include uwsgi_params;\n                uwsgi_pass 127.0.0.1:3031;\n        }\n}\n\n\n$ sudo ln -s /etc/nginx/site-available/django_app /etc/nginx/site-enabled/\n")])])]),e("h2",{attrs:{id:"uwsgi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uwsgi"}},[n._v("#")]),n._v(" uwsgi")]),n._v(" "),e("p",[e("strong",[n._v("製作 uwsgi 執行檔")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("sudo apt install build-essential python-dev\n\n\n$ cd ~/tmp\n$ wget http://projects.unbit.it/downloads/uwsgi-latest.tar.gz\n$ tar zxvf uwsgi-latest.tar.gz\n$ cd <dir>\n$ make\n$ sudo cp uwsgi /usr/bin\n$ sudo chown root:root /usr/bin/uwsgi\n$ sudo chmod 755 /usr/bin/uwsgi\n\n\n\n$ uwsgi --http :3031 --home /home/vagrant/workspace/django_app/.venv/ --chdir /home/vagrant/workspace/django_app/ -w web_site.wsgi\n")])])]),e("p",[n._v("使用瀏覽器觀察網址： http://127.0.0.1:3031/ ，驗證 uwsgi 已能正常運作。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo uwsgi --socket /run/uwsgi/django_app.sock --home /home/vagrant/workspace/django_app/.venv/ --chdir /home/vagrant/workspace/django_app/ --module web_site.wsgi --chmod-socket=664 --uid www-data --gid www-data\n")])])]),e("p",[n._v("使用 "),e("strong",[n._v("Ctrl + C")]),n._v(" 結束 uwsgi 。")]),n._v(" "),e("p",[e("strong",[n._v("建立 uwsgi 執行設定檔")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("vagrant@linux:~$ sudo mkdir -p /etc/uwsgi/sites-available\nvagrant@linux:~$ sudo mkdir -p /etc/uwsgi/sites-enabled\nvagrant@linux:~$ sudo chown -R vagrant:www-data /etc/uwsgi/\nvagrant@linux:~$ ll /etc/uwsgi/\ntotal 24\ndrwxr-xr-x   4 vagrant www-data  4096 May  2 00:56 ./\ndrwxr-xr-x 129 root    root     12288 May  2 00:56 ../\ndrwxr-xr-x   2 vagrant www-data  4096 May  2 01:01 sites-available/\ndrwxr-xr-x   2 vagrant www-data  4096 May  2 01:04 sites-enabled/\n\n\n$ sudo nano /etc/uwsgi/sites-available/django_app.ini\n")])])]),e("p",[e("strong",[n._v("django_app.ini")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("[uwsgi]\n\nuid = www-data\ngid = www-data\n\nproject = django_app\nsite = web_site\nbase = /home/vagrant/workspace/%(project)\n\n#========================\n# Django-related settings\n#========================\n\nchdir = %(base)\n\nhome = %(base)/.venv\n\n# Django's wsgi file\nmodule = web_site.wsgi\n\n#===============================\n# uwsgi process-related settings\n#===============================\n\n# master mode\nmaster = true\n\n# maximum number of worker processes\nprocesses = 4\n\n# the socket (use the full path to be safe)\n# socket = 127.0.0.1:3031\n# socket = %(base)/%(project).socket\nsocket = /run/uwsgi/%(project).sock\n\n# ... with appropriate permissions - may be needed\n# chown-socket = %(uid):%(gid)\nchmod-socket = 664\n\n# clear environment on exit\nvacuum = true\n\n# others......\nstats = 127.0.0.1:9191\n\n\n\n\n\n\n\nvagrant@linux:~$ sudo ln -s /etc/uwsgi/sites-available/django_app.ini /etc/uwsgi/sites-enabled/\nvagrant@linux:~$ ll /etc/uwsgi/sites-enabled/\ntotal 8\ndrwxr-xr-x 2 root root 4096 May  2 01:04 ./\ndrwxr-xr-x 4 root root 4096 May  2 00:56 ../\nlrwxrwxrwx 1 root root   41 May  2 01:04 django_app.ini -> /etc/uwsgi/sites-available/django_app.ini\n")])])]),e("p",[e("strong",[n._v("設定 socket 目錄")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo mkdir -p /run/uwsgi\n$ sudo chown -R vagrant:vagrant /run/uwsgi\n$ sudo chmod -R 660 /run/uwsgi\n")])])]),e("p",[e("strong",[n._v("驗證 uwsgi 設定檔")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ uwsgi --http :3031 --ini /etc/uwsgi/sites-enabled/django_app.ini\n")])])]),e("h2",{attrs:{id:"系統層級-uwsgi"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#系統層級-uwsgi"}},[n._v("#")]),n._v(" 系統層級 uwsgi")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo ln -s /home/vagrant/workspace/django_app/django_app.ini /etc/uwsgi/sites-enabled/\n\n\n\n$ sudo uwsgi /etc/uwsgi/sites-enabled/django_app.ini --uid www-data --gid www-data\n[uWSGI] getting INI configuration from /etc/uwsgi/sites-enabled/django_app.ini\n*** Starting uWSGI 2.0.18 (64bit) on [Thu May  2 08:14:14 2019] ***\ncompiled with version: 7.3.0 on 30 April 2019 14:10:59\nos: Linux-4.15.0-47-generic #50-Ubuntu SMP Wed Mar 13 10:44:52 UTC 2019\nnodename: linux\nmachine: x86_64\nclock source: unix\ndetected number of CPU cores: 3\ncurrent working directory: /home/vagrant/workspace/django_app\ndetected binary path: /usr/bin/uwsgi\n!!! no internal routing support, rebuild with pcre support !!!\nsetgid() to 33\nsetuid() to 33\nchdir() to /home/vagrant/workspace/django_app\nyour processes number limit is 11835\nyour memory page size is 4096 bytes\ndetected max file descriptor number: 1024\nlock engine: pthread robust mutexes\nthunder lock: disabled (you can enable it with --thunder-lock)\nuwsgi socket 0 bound to UNIX address /home/vagrant/workspace/django_app/django_app.socket fd 3\nPython version: 3.7.3 (default, Apr 29 2019, 15:06:56)  [GCC 7.3.0]\nSet PythonHome to /home/vagrant/workspace/django_app/.venv\n*** Python threads support is disabled. You can enable it with --enable-threads ***\nPython main interpreter initialized at 0x56172a70efc0\nyour server socket listen backlog is limited to 100 connections\nyour mercy for graceful operations on workers is 60 seconds\nmapped 802120 bytes (783 KB) for 10 cores\n*** Operational MODE: preforking ***\nWSGI app 0 (mountpoint='') ready in 0 seconds on interpreter 0x56172a70efc0 pid: 11247 (default app)\n*** uWSGI is running in multiple interpreter mode ***\nspawned uWSGI master process (pid: 11247)\nspawned uWSGI worker 1 (pid: 11248, cores: 1)\nspawned uWSGI worker 2 (pid: 11249, cores: 1)\nspawned uWSGI worker 3 (pid: 11250, cores: 1)\nspawned uWSGI worker 4 (pid: 11251, cores: 1)\nspawned uWSGI worker 5 (pid: 11252, cores: 1)\nspawned uWSGI worker 6 (pid: 11253, cores: 1)\nspawned uWSGI worker 7 (pid: 11254, cores: 1)\nspawned uWSGI worker 8 (pid: 11255, cores: 1)\nspawned uWSGI worker 9 (pid: 11256, cores: 1)\nspawned uWSGI worker 10 (pid: 11257, cores: 1)\n*** Stats server enabled on 127.0.0.1:9191 fd: 27 ***\n")])])]),e("h2",{attrs:{id:"設定開機自動啟動-uwsgi-功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#設定開機自動啟動-uwsgi-功能"}},[n._v("#")]),n._v(" 設定開機自動啟動 uwsgi 功能")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo usermod -a -G www-data vagrant\n\n\n\n$ sudo cp -R /home/vagrant/workspace/django_app /var/www/\n\n\n\n$ sudo nano /etc/uwsgi/sites-available/django_app.ini\n")])])]),e("p",[e("strong",[n._v("django_app.ini：")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("[uwsgi]\n\nuid = root\ngid = root\n\nproject = django_app\nsite = web_site\nbase = /var/www/%(project)\n\n# chdir = /var/www/django_app\nchdir = %(base)\n\n# home = /var/www/django_app/.venv\nhome = %(base)/.venv\n\nwsgi-file = web_site/wsgi.py\n\n\nmaster = true\nprocesses = 4\nthreads = 2\n\n# socket = 127.0.0.1:3031\nsocket = /run/uwsgi/%(project).socket\nchown-socket = %(uid):%(gid)\nchmod-socket = 660\n\nstats = 127.0.0.1:9191\n\nvacuum = true\n\n\n\n$ sudo nano /etc/nginx/sites-available/django_app\n")])])]),e("p",[e("strong",[n._v("django_app：")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("server {\n        listen 80 default_server;\n        # listen [::]:80 default_server;\n\n        server_name localhost;\n\n        # root /var/www/html;\n        root /var/www/django_app;\n\n        # Add index.php to the list if you are using PHP\n        index index.html index.htm index.nginx-debian.html;\n\n\n        location = /favicon.ico {\n            access_log      off;\n            log_not_found   off;\n        }\n\n\n        location / {\n            # First attempt to serve request as file, then\n            # as directory, then fall back to displaying a 404.\n            try_files $uri $uri/ =404;\n                \n            include uwsgi_params;\n            # uwsgi_pass 127.0.0.1:3031;\n            uwsgi_pass unix:///run/uwsgi/django_app.socket;\n        }\n\n\n        location /static {\n            root    /var/www/django_app/static;\n        }\n}\n")])])]),e("p",[n._v("透過 systemd ，令 uwsgi 成為開機後便會自動啟動的 service 。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("$ sudo nano /etc/systemd/system/uwsgi.service\n")])])]),e("p",[e("strong",[n._v("uwsgi.service：")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("[Unit]\nDescription=uWSGI Emperor service\n\n[Service]\nExecStartPre=/bin/bash -c 'mkdir -p /run/uwsgi; chown root:root /run/uwsgi'\nExecStart=/usr/bin/uwsgi --emperor /etc/uwsgi/sites-enabled\nRestart=always\nKillSignal=SIGQUIT\nType=notify\nNotifyAccess=all\n\n[Install]\nWantedBy=multi-user.target\n\n\n\n$ sudo systemctl enable uwsgi\nCreated symlink /etc/systemd/system/multi-user.target.wants/uwsgi.service → /etc/systemd/system/uwsgi.service.\n\n\n\n$ sudo service uwsgi status\n● uwsgi.service - uWSGI Emperor service\n   Loaded: loaded (/etc/systemd/system/uwsgi.service; enabled; vendor preset: enabled)\n   Active: inactive (dead)\n\n\n\n$ sudo service uwsgi start\n$ sudo service uwsgi status\n● uwsgi.service - uWSGI Emperor service\n   Loaded: loaded (/etc/systemd/system/uwsgi.service; enabled; vendor preset: enabled)\n   Active: active (running) since Thu 2019-05-02 05:21:15 UTC; 1min 6s ago\n  Process: 7972 ExecStartPre=/bin/bash -c mkdir -p /run/uwsgi; chown root:root /run/uwsgi (code=exited, status=0/SUCCESS)\n Main PID: 7975 (uwsgi)\n   Status: \"The Emperor is governing 1 vassals\"\n    Tasks: 10 (limit: 3550)\n   CGroup: /system.slice/uwsgi.service\n           ├─7975 /usr/bin/uwsgi --emperor /etc/uwsgi/sites-enabled\n           ├─7976 /usr/bin/uwsgi --ini django_app.ini\n           ├─7977 /usr/bin/uwsgi --ini django_app.ini\n           ├─7978 /usr/bin/uwsgi --ini django_app.ini\n           ├─7980 /usr/bin/uwsgi --ini django_app.ini\n           └─7981 /usr/bin/uwsgi --ini django_app.ini\n\nMay 02 05:21:16 linux uwsgi[7975]: *** WARNING: you are running uWSGI as root !!! (use the --uid flag) ***\nMay 02 05:21:16 linux uwsgi[7975]: *** uWSGI is running in multiple interpreter mode ***\nMay 02 05:21:16 linux uwsgi[7975]: spawned uWSGI master process (pid: 7976)\nMay 02 05:21:16 linux uwsgi[7975]: Thu May  2 05:21:16 2019 - [emperor] vassal django_app.ini has been spawned\nMay 02 05:21:16 linux uwsgi[7975]: spawned uWSGI worker 1 (pid: 7977, cores: 2)\nMay 02 05:21:16 linux uwsgi[7975]: spawned uWSGI worker 2 (pid: 7978, cores: 2)\nMay 02 05:21:16 linux uwsgi[7975]: Thu May  2 05:21:16 2019 - [emperor] vassal django_app.ini is ready to accept requests\nMay 02 05:21:16 linux uwsgi[7975]: spawned uWSGI worker 3 (pid: 7980, cores: 2)\nMay 02 05:21:16 linux uwsgi[7975]: spawned uWSGI worker 4 (pid: 7981, cores: 2)\nMay 02 05:21:16 linux uwsgi[7975]: *** Stats server enabled on 127.0.0.1:9191 fd: 16 ***\n\n\n\n$ sudo systemctl daemon-reload\n")])])]),e("hr"),n._v(" "),e("h1",{attrs:{id:"ref"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[n._v("#")]),n._v(" Ref")]),n._v(" "),e("p",[n._v("https://hackernoon.com/reaching-python-development-nirvana-bb5692adf30c")]),n._v(" "),e("p",[n._v("https://github.com/pyenv/pyenv/wiki/common-build-problems")])])}),[],!1,null,null,null);e.default=t.exports}}]);