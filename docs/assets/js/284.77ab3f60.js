(window.webpackJsonp=window.webpackJsonp||[]).push([[284],{574:function(a,t,n){"use strict";n.r(t);var e=n(10),i=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"yabai"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yabai"}},[a._v("#")]),a._v(" Yabai")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=mMV3LXQ3pKQ",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.youtube.com/watch?v=mMV3LXQ3pKQ"),t("OutboundLink")],1),a._v("&")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://youtu.be/mMV3LXQ3pKQ",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://youtu.be/mMV3LXQ3pKQ"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("a",{attrs:{href:"https://www.youtube.com/watch?v=JL1lz77YbUE",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.youtube.com/watch?v=JL1lz77YbUE"),t("OutboundLink")],1),a._v("&")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://youtu.be/JL1lz77YbUE",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://youtu.be/JL1lz77YbUE"),t("OutboundLink")],1)]),a._v(" "),t("h1",{attrs:{id:"關閉-sip-system-integrity-protection"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#關閉-sip-system-integrity-protection"}},[a._v("#")]),a._v(" 關閉 SIP（System Integrity Protection）")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.developer.money/%E9%97%9C%E9%96%89-mac-%E7%9A%84-sip-system-integrity-protection-8f679c4fdd9e",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://blog.developer.money/關閉-mac-的-sip-system-integrity-protection-8f679c4fdd9e"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"install-yabai"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-yabai"}},[a._v("#")]),a._v(" Install Yabai")]),a._v(" "),t("p",[a._v("Update newer “Command Lin e Tools”")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("softwareupdate --all --install --force\n")])])]),t("p",[a._v("If that doesn’t show any updates, run:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("sudo rm -rf /Library/Developer/CommandLineTools\nsudo xcode-select --install\n\n\nbrew install koekeishiya/formulae/yabai\n")])])]),t("p",[a._v("Logs will be found in /usr/local/var/log/yabai/yabai.[out|err].log")]),a._v(" "),t("p",[a._v("Open "),t("code",[a._v("System Preferences.app")]),a._v(" and navigate to "),t("code",[a._v("Security & Privacy")]),a._v(", then\n"),t("code",[a._v("Privacy")]),a._v(", then "),t("code",[a._v("Accessibility")]),a._v(". Click the lock icon at the bottom and enter\nyour password to allow changes to the list. Starting with\n"),t("code",[a._v("brew services start yabai")]),a._v(" will prompt the user to allow "),t("code",[a._v("yabai")]),a._v(" accessibility\npermissions. Check the box next to "),t("code",[a._v("yabai")]),a._v(" to allow accessibility permissions.\nNow install the scripting addition.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("# install the scripting addition\nsudo yabai --install-sa\n\n# if macOS Big Sur, load the scripting addition manually; follow instructions below to automate on startup\nsudo yabai --load-sa\n")])])]),t("p",[a._v("To run yabai, simply start it.")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("# start yabai\nbrew services start yabai\n")])])]),t("p",[a._v("To have launchd start koekeishiya/formulae/yabai now and restart at login:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("brew services start koekeishiya/formulae/yabai\n")])])]),t("h1",{attrs:{id:"快捷操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快捷操作"}},[a._v("#")]),a._v(" 快捷操作")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/itgoyo/yabai-config",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/itgoyo/yabai-config"),t("OutboundLink")],1)]),a._v(" "),t("p",[t("strong",[a._v("Focus window in a desktop (space)")])]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[a._v("Action")])]),a._v(" "),t("th",[t("strong",[a._v("Key Combination")])])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("focus west")]),a._v(" "),t("td",[a._v("cmd + h")])]),a._v(" "),t("tr",[t("td",[a._v("focus south")]),a._v(" "),t("td",[a._v("cmd + j")])]),a._v(" "),t("tr",[t("td",[a._v("focus north")]),a._v(" "),t("td",[a._v("cmd + k")])]),a._v(" "),t("tr",[t("td",[a._v("focus east")]),a._v(" "),t("td",[a._v("cmd + l")])])])]),a._v(" "),t("p",[t("strong",[a._v("Move window by direction in a desktop (space)")])]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[a._v("Action")])]),a._v(" "),t("th",[t("strong",[a._v("Key Combination")])])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("Move window to left")]),a._v(" "),t("td",[a._v("shift + cmd + h")])]),a._v(" "),t("tr",[t("td",[a._v("Move window up")]),a._v(" "),t("td",[a._v("shift + cmd + j")])]),a._v(" "),t("tr",[t("td",[a._v("Move window down")]),a._v(" "),t("td",[a._v("shift + cmd + k")])]),a._v(" "),t("tr",[t("td",[a._v("Move window to right")]),a._v(" "),t("td",[a._v("shift + cmd + l")])])])]),a._v(" "),t("p",[t("strong",[a._v("Resize windows")])]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[a._v("Action")])]),a._v(" "),t("th",[t("strong",[a._v("Key Combination")])])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("Resize left")]),a._v(" "),t("td",[a._v("shfit + cmd + h")])]),a._v(" "),t("tr",[t("td",[a._v("Resize down")]),a._v(" "),t("td",[a._v("shfit + cmd + j")])]),a._v(" "),t("tr",[t("td",[a._v("Resize up")]),a._v(" "),t("td",[a._v("shfit + cmd + k")])]),a._v(" "),t("tr",[t("td",[a._v("Resize right")]),a._v(" "),t("td",[a._v("shfit + cmd + l")])]),a._v(" "),t("tr",[t("td",[a._v("Equalise")]),a._v(" "),t("td",[a._v("shfit + cmd + 0")])])])]),a._v(" "),t("p",[t("strong",[a._v("Rotate windows")])]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[a._v("Action")])]),a._v(" "),t("th",[t("strong",[a._v("Key Combination")])])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("Rotate clockwise")]),a._v(" "),t("td",[a._v("shift + alt + r")])]),a._v(" "),t("tr",[t("td",[a._v("Rotate anticlockwise")]),a._v(" "),t("td",[a._v("alt + r")])]),a._v(" "),t("tr",[t("td",[a._v("Flip on x-axis")]),a._v(" "),t("td",[a._v("shift + alt + x")])]),a._v(" "),t("tr",[t("td",[a._v("Flip on y-axis")]),a._v(" "),t("td",[a._v("shift + alt + y")])])])]),a._v(" "),t("p",[t("strong",[a._v("Window actions")])]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[a._v("Action")])]),a._v(" "),t("th",[t("strong",[a._v("Key Combination")])])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("Fullscreen")]),a._v(" "),t("td",[a._v("alt + f")])]),a._v(" "),t("tr",[t("td",[a._v("Native fullscreen")]),a._v(" "),t("td",[a._v("shift + alt + f")])]),a._v(" "),t("tr",[t("td",[a._v("Center window")]),a._v(" "),t("td",[a._v("shift + alt + c")])])])]),a._v(" "),t("p",[t("strong",[a._v("Insertion point")])]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[a._v("Action")])]),a._v(" "),t("th",[t("strong",[a._v("Key Combination")])])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("Insert left")]),a._v(" "),t("td",[a._v("shift + lctrl + alt + h")])]),a._v(" "),t("tr",[t("td",[a._v("Insert down")]),a._v(" "),t("td",[a._v("shift + lctrl + alt + j")])]),a._v(" "),t("tr",[t("td",[a._v("Insert up")]),a._v(" "),t("td",[a._v("shift + lctrl + alt + k")])]),a._v(" "),t("tr",[t("td",[a._v("Insert right")]),a._v(" "),t("td",[a._v("shift + lctrl + alt + l")])]),a._v(" "),t("tr",[t("td",[a._v("Cancel insert (chunkwm only)")]),a._v(" "),t("td",[a._v("shift + lctrl + alt + x")])])])]),a._v(" "),t("p",[t("strong",[a._v("Misc")])]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[t("strong",[a._v("Action")])]),a._v(" "),t("th",[t("strong",[a._v("Key Combination")])])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("Toggle float")]),a._v(" "),t("td",[a._v("shift + alt + space")])]),a._v(" "),t("tr",[t("td",[a._v("Toggle gaps")]),a._v(" "),t("td",[a._v("lctrl + alt + g")])]),a._v(" "),t("tr",[t("td",[a._v("Restart chunkwm")]),a._v(" "),t("td",[a._v("lctrl + shift + alt + r")])])])]),a._v(" "),t("hr"),a._v(" "),t("ul",[t("li",[a._v("alt + hjkl 切換視窗的 focus")]),a._v(" "),t("li",[a._v("alt + s focus 視窗全屏")]),a._v(" "),t("li",[a._v("alt + e 切換回拼圖排列")]),a._v(" "),t("li",[a._v("alt + shift + hjkl 移動 focus 視窗的位置")]),a._v(" "),t("li",[a._v("alt + cmd + shift + hjkl 調整 focus 視窗的大小")]),a._v(" "),t("li",[a._v("alt + r 旋轉所有視窗 90 度")]),a._v(" "),t("li",[a._v("alt + shift + space focus 視窗懸浮（可以亂移動）")]),a._v(" "),t("li",[a._v("alt + shift + 1234 把 focus 視窗送到 1234 的桌面（要先有桌面，必須手動新增）")]),a._v(" "),t("li",[a._v("alt + shift + p n m 把 focus 視窗送到 p(上一個) n(下一個) m(最後切換的) 桌面，\n如果條件不成立將無動作。")]),a._v(" "),t("li",[a._v("alt + p n 切換 focus 到 p(上一個) n(下一個) 視窗")])]),a._v(" "),t("h2",{attrs:{id:"yabairc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#yabairc"}},[a._v("#")]),a._v(" .yabairc")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('#!/usr/bin/env sh\n\n# the scripting-addition must be loaded manually if\n# you are running yabai on macOS Big Sur. Uncomment\n# the following line to have the injection performed\n# when the config is executed during startup.\n#\n# for this to work you must configure sudo such that\n# it will be able to run the command without password\n\nsudo yabai --load-sa\nyabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"\n\n#YABAI STUFF\n# bsp or float (default: bsp)\n# yabai -m config layout bsp\n\n# My custom space names for my 3 monitor setup. These names are used in some of my scripts.\nyabai -m space 1 --label one\nyabai -m space 2 --label two\nyabai -m space 3 --label three\n\n# float system preferences. Most of these just diable Yabai form resizing them.\n# yabai -m rule --add app="系統偏好設定" manage=off\n# yabai -m rule --add app="GitKraken" manage=off\n# yabai -m rule --add app="LINE" manage=off\n# yabai -m rule --add app="Commander One" manage=off\n# yabai -m rule --add app="iTube Studio" manage=off\n# yabai -m rule --add app="啟動台" manage=off\n# yabai -m rule --add app="活動監視器" manage=off\n# yabai -m rule --add app="時光機" manage=off\n# yabai -m rule --add app="照片" manage=off\n# yabai -m rule --add app="預覽程式" manage=off\n# yabai -m rule --add app="影像擷取" manage=off\n# yabai -m rule --add app="行事曆" manage=off\n\n#find ~/Library/Parallels/Applications\\ Menus/ -maxdepth 3 -type f | awk -F\'/\' \'{ print $NF; }\' | awk \'{$1=$1};1\' | sort | uniq | tr "\\n" "\\0" | xargs -0 -I{} yabai -m rule --add app="^{}\\$" title=".*" manage=on\n\n## Some random global settings\n#yabai -m config focus_follows_mouse          autoraise\n#yabai -m config focus_follows_mouse          on\n# New window spawns to the right if vertical split, or bottom if horizontal split\nyabai -m config window_placement second_child\nyabai -m config window_topmost off\n#yabai -m config window_shadow float\nyabai -m config window_opacity off\nyabai -m config window_opacity_duration 0.00\nyabai -m config active_window_opacity 1.0\n#yabai -m config normal_window_opacity        0.97\n#yabai -m config window_border                on | off\n\n## WITH SIP ENABLED (Installed Limelight seperately, Don\'t need this)\nyabai -m config window_border off\n\n## WTIH SIP DISABLED (Limelight build into Yabai, enable it here)\n#yabai -m config window_border on\n#yabai -m config window_border_width 3\n#yabai -m config active_window_border_color 0xFF40FF00\n#yabai -m config normal_window_border_color 0x00FFFFFF\n#yabai -m config insert_feedback_color        0xffd75f5f\n\n## some other settings\nyabai -m config auto_balance off\nyabai -m config split_ratio 0.50\n# # set mouse interaction modifier key (default: fn)\nyabai -m config mouse_modifier ctrl\n# set modifier + right-click drag to resize window (default: resize)\nyabai -m config mouse_action2 resize\n# set modifier + left-click drag to resize window (default: move)\nyabai -m config mouse_action1 move\n\n# general space settings\n#yabai -m config focused_border_skip_floating  1\n#yabai -m config --space 3 layout             float\n\n## Change how yabai looks\nyabai -m config layout bsp\nyabai -m config top_padding 2\nyabai -m config bottom_padding 2\nyabai -m config left_padding 2\nyabai -m config right_padding 2\nyabai -m config window_gap 10\n\n#Limelight addon (Kill it and start it each time Yabai starts)\nkillall limelight &>/dev/null\nlimelight &>/dev/null &\n\n# #Ubersicht widget bar stuff\n#yabai -m signal --add event=space_changed \\\n#action="osascript -e \'tell application \\"Übersicht\\" to refresh widget id \\"nibar-spaces-primary-jsx\\"\'"\n#yabai -m signal --add event=display_changed \\\n#action="osascript -e \'tell application \\"Übersicht\\" to refresh widget id \\"nibar-spaces-primary-jsx\\"\'"\n\n#yabai -m signal --add event=space_changed \\\n#action="osascript -e \'tell application \\"Übersicht\\" to refresh widget id \\"nibar-spaces-secondary-jsx\\"\'"\n#yabai -m signal --add event=display_changed \\\n#action="osascript -e \'tell application \\"Übersicht\\" to refresh widget id \\"nibar-spaces-secondary-jsx\\"\'"\n\n# signals\n# yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"\n#yabai -m signal --add event=space_changed action="yabai -m window --focus $(yabai -m query --windows --window | jq ".id")"\n# yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"\n\n#testing signals\n# yabai -m signal --add event=window_destroyed action="terminal-notifier -message \'window_destroyed\'"\n# yabai -m signal --add event=application_terminated action="terminal-notifier -message \'application_terminated\'"\n\n## If I close the active window, focus on any other visible window.\n# yabai -m signal --add event=window_destroyed action="bash /Users/alanjui/.local/share/YabaiScripts/window-focus-on-destroy.sh"\n# yabai -m signal --add event=space_changed action="export CUR_ACTIVE_APP=\\"iTerm2\\""\n\necho "yabai configuration loaded.."\n\n#END\n')])])]),t("h2",{attrs:{id:"skhdrc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#skhdrc"}},[a._v("#")]),a._v(" .skhdrc")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v('#SKHD STUFF\n# if you\'re having troubles finding key codes for a key just type\n# skhd --observe in a terminal and type a key.\n\n# hyper = Shift + Ctrl + Cmd(Window) + Alt(Option)\n\n# prevents skhd from monitoring events for listed processes.\n# .blacklist [\n#     "終端機"\n#     "iTerm2"\n#     "Google Chrome"\n# ]\n# .blacklist [\n# ]\n\n#==============================================================================\n# Restart Yabai\nhyper - r :\n    /usr/bin/env osascript <<< \\\n        "display notification \\"Restarting Yabai\\" with title \\"Yabai\\""; \\\n    launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"\n\n###################################################\n# Window\n###################################################\n\n# focus a window by sequence (recent / previous / next)\ncmd - o : yabai -m window --focus recent\ncmd - p : yabai -m window --focus prev\ncmd - n : yabai -m window --focus next\n# = --\x3e recent;  [ --\x3e prev;  ] --\x3e next\ncmd - 0x18 : yabai -m window --focus recent\ncmd - 0x21 : yabai -m window --focus prev\ncmd - 0x1E : yabai -m window --focus next\n\n# focus a window by direction\ncmd - h : yabai -m window --focus west\ncmd - j : yabai -m window --focus south\ncmd - k : yabai -m window --focus north\ncmd - l : yabai -m window --focus east\n\n# rotate focus window in desktop\nshift + cmd - r : yabai -m space --rotate 270\ncmd - r         : yabai -m space --rotate 270\n\n# # focus window through screen cyclely by direction\n# shift + ctrl + cmd - h : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}\n\n# move window by direction (swap window)\nshift + cmd - h : yabai -m window --swap west\nshift + cmd - j : yabai -m window --swap south\nshift + cmd - k : yabai -m window --swap north\nshift + cmd - l : yabai -m window --swap east\n\n#--------------------------------------------------\n\n# toggle window split vertically or horizontally\ncmd + alt - t : yabai -m window --toggle split\n\n# toggle window to float / unfloat in desktop\ncmd + alt - f : yabai -m window --toggle float\n\n# toggle window to unfloat / foloat and center on screen\ncmd + alt - c : yabai -m window --toggle float;\\\n                yabai -m window --grid 4:4:1:1:2:2\n\n# move floating window\nshift + cmd - w : yabai -m window --move rel:0:-20\nshift + cmd - s : yabai -m window --move rel:0:20\nshift + cmd - a : yabai -m window --move rel:-20:0\nshift + cmd - d : yabai -m window --move rel:20:0\n\n# toggle unfloat window to max size in desktop\ncmd + alt - z  : yabai -m window --toggle zoom-fullscreen\n\n# toggle window to zoon in/out screen\nctrl + cmd - z : yabai -m window --toggle native-fullscreen\n\n#--------------------------------------------------\n\n# Resize width of a window\ncmd + alt - h : \\\n    yabai -m window --resize left:-20:0 ; \\\n    yabai -m window --resize right:-20:0\n\ncmd + alt - l : \\\n    yabai -m window --resize right:20:0 ; \\\n    yabai -m window --resize left:20:0\n\n# Resize height of a window\ncmd + alt - j : \\\n    yabai -m window --resize bottom:0:20 ; \\\n    yabai -m window --resize top:0:20\n\ncmd + alt - k : \\\n    yabai -m window --resize top:0:-20 ; \\\n    yabai -m window --resize bottom:0:-20\n\n# Equalize size of windows (0x18 --\x3e \'=\')\ncmd + alt - 0 : yabai -m space --balance\ncmd + alt - 0x18 : yabai -m space --balance\n\n#--------------------------------------------------\n\n# create a window: open terminal\n# hyper - return : /Applications/iTerm.app/Contents/MacOS/iTerm2\nhyper - return : ~/.config/yabai/scripts/open_iterm2.sh\n\n# close a window (exit active application)\nhyper - backspace : $(yabai -m window $(yabai -m query --windows --window | jq -re ".id") --close)\n\n###################################################\n# Desktop\n###################################################\n\n# focus desktop by sequence (n: 1 --\x3e 2 --\x3e 3; p: 3 --\x3e 2 --\x3e 1)\nctrl + cmd - o : yabai -m space --focus recent\nctrl + cmd - p : yabai -m space --focus prev\nctrl + cmd - n : yabai -m space --focus next\n# = --\x3e recent;  [ --\x3e prev;  ] --\x3e next\nctrl + cmd - 0x18 : yabai -m space --focus recent\nctrl + cmd - 0x21 : yabai -m space --focus prev\nctrl + cmd - 0x1E : yabai -m space --focus next\n\n# focus desktop by number\nctrl + cmd - 1 : yabai -m space --focus 1\nctrl + cmd - 2 : yabai -m space --focus 2\nctrl + cmd - 3 : yabai -m space --focus 3\nctrl + cmd - 4 : yabai -m space --focus 4\nctrl + cmd - 5 : yabai -m space --focus 5\nctrl + cmd - 6 : yabai -m space --focus 6\nctrl + cmd - 7 : yabai -m space --focus 7\nctrl + cmd - 8 : yabai -m space --focus 8\nctrl + cmd - 9 : yabai -m space --focus 9\nctrl + cmd - 0 : yabai -m space --focus 0\n\n# move window to prev/next desktop (space)\n# o --\x3e recent;  p --\x3e prev;  n --\x3e next\nshift + ctrl + cmd - o : ~/.config/yabai/scripts/moveWindowToDesktop.sh recent\nshift + ctrl + cmd - p : ~/.config/yabai/scripts/moveWindowToDesktop.sh prev\nshift + ctrl + cmd - n : ~/.config/yabai/scripts/moveWindowToDesktop.sh next\n# = --\x3e recent;  [ --\x3e prev;  ] --\x3e next\nshift + ctrl + cmd - 0x18 : ~/.config/yabai/scripts/moveWindowToDesktop.sh recent\nshift + ctrl + cmd - 0x21 : ~/.config/yabai/scripts/moveWindowToDesktop.sh prev\nshift + ctrl + cmd - 0x1E : ~/.config/yabai/scripts/moveWindowToDesktop.sh next\n\n# move window to desktop by number\nshift + ctrl + cmd - 1 : ~/.config/yabai/scripts/moveWindowToDesktop.sh 1\nshift + ctrl + cmd - 2 : ~/.config/yabai/scripts/moveWindowToDesktop.sh 2\nshift + ctrl + cmd - 3 : ~/.config/yabai/scripts/moveWindowToDesktop.sh 3\nshift + ctrl + cmd - 4 : ~/.config/yabai/scripts/moveWindowToDesktop.sh 4\nshift + ctrl + cmd - 5 : ~/.config/yabai/scripts/moveWindowToDesktop.sh 5\nshift + ctrl + cmd - 6 : ~/.config/yabai/scripts/moveWindowToDesktop.sh 6\nshift + ctrl + cmd - 7 : ~/.config/yabai/scripts/moveWindowToDesktop.sh 7\nshift + ctrl + cmd - 8 : ~/.config/yabai/scripts/moveWindowToDesktop.sh 8\nshift + ctrl + cmd - 9 : ~/.config/yabai/scripts/moveWindowToDesktop.sh 9\nshift + ctrl + cmd - 0 : ~/.config/yabai/scripts/moveWindowToDesktop.sh 0\n\n# warp desktop\nshift + ctrl + cmd - h : yabai -m window --warp west\nshift + ctrl + cmd - j : yabai -m window --warp south\nshift + ctrl + cmd - k : yabai -m window --warp north\nshift + ctrl + cmd - l : yabai -m window --warp east\n\n# flip the layout of desktop horizontally\nshift + ctrl + cmd - x : yabai -m space --mirror x-axis\n\n# flip the layout of desktop vertically\nshift + ctrl + cmd - y : yabai -m space --mirror y-axis\n\n#--------------------------------------------------\n\n# creat a desktop on current screen\nctrl + cmd - c         : yabai -m space --create\n# destroy desktop on current screen\nctrl + cmd - backspace : yabai -m space --destroy\n\n# create desktop, move focus window to created desktop and follow focus\nshift + ctrl + cmd - c : yabai -m space --create && \\\n                             index="$(yabai -m query --spaces --display \\\n                             | jq \'map(select(."native-fullscreen" == 0))[-1].index\')" && \\\n                         yabai -m window --space "${index}" && \\\n                         yabai -m space --focus "${index}"\n\n# destroy empty spaces\nshift + ctrl + cmd - backspace : echo "destroy empty spaces";\\\n                                 yabai -m query --spaces \\\n                                 | jq \'reverse | .[] | select((.windows | length) == 0) | .index\' \\\n                                 | xargs -I{} yabai -m space {} --destroy \\;\n\n###################################################\n# Screen\n###################################################\n\n# focus screen by swquence\nctrl + cmd + alt - o : yabai -m display --focus recent\nctrl + cmd + alt - p : yabai -m display --focus prev\nctrl + cmd + alt - n : yabai -m display --focus next\nctrl + cmd + alt - m : yabai -m display --focus last\n\n# focus screen by number\nctrl + cmd + alt - 1 : yabai -m display --focus 1\nctrl + cmd + alt - 2 : yabai -m display --focus 2\nctrl + cmd + alt - 3 : yabai -m display --focus 3\n\n# move window to prev/next screen\n# shift + ctrl + cmd + alt - p : /Users/alanjui/.config/yabai/scripts/moveWindowToPrevDisplay.sh\n# shift + ctrl + cmd + alt - n : /Users/alanjui/.config/yabai/scripts/moveWindowToNextDisplay.sh\n# o --\x3e recent;  p --\x3e prev;  n --\x3e next\nshift + ctrl + cmd + alt - o : ~/.config/yabai/scripts/moveWindowToScreen.sh recent\nshift + ctrl + cmd + alt - p : ~/.config/yabai/scripts/moveWindowToScreen.sh prev\nshift + ctrl + cmd + alt - n : ~/.config/yabai/scripts/moveWindowToScreen.sh next\n# = --\x3e recent;  [ --\x3e prev;  ] --\x3e next\nshift + ctrl + cmd + alt - 0x18 : ~/.config/yabai/scripts/moveWindowToScreen.sh recent\nshift + ctrl + cmd + alt - 0x21 : ~/.config/yabai/scripts/moveWindowToScreen.sh prev\nshift + ctrl + cmd + alt - 0x1E : ~/.config/yabai/scripts/moveWindowToScreen.sh next\n\n# move window to screen by number\nshift + ctrl + cmd + alt - 1 :~/.config/yabai/scripts/moveWindowToScreen.sh 1\nshift + ctrl + cmd + alt - 2 :~/.config/yabai/scripts/moveWindowToScreen.sh 2\nshift + ctrl + cmd + alt - 3 :~/.config/yabai/scripts/moveWindowToScreen.sh 3\n')])])]),t("h1",{attrs:{id:"異常排除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#異常排除"}},[a._v("#")]),a._v(" 異常排除")]),a._v(" "),t("p",[t("strong",[a._v("無法使用 [Cmd] + [Alt] + [n] 快捷鍵切換「桌面」（Desktop / Space）。")]),a._v(" 可試著\n先用指令執行切換，籍此診斷：「是否導因起於『指令』亦無法正常運作？」。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("yabai -m space --focus 3\n")])])]),t("p",[t("strong",[a._v("無法使用「指令」切換桌面，終端機出現如下之錯誤回報：")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("$ yabai -m space --focus 3\ncannot focus space due to an error with the scripting-addition.\n")])])]),t("p",[a._v("【異常排除作業】：")]),a._v(" "),t("ol",[t("li",[a._v("務必確認「SPI： Disable」。 csrutil status")])]),a._v(" "),t("p",[a._v("【註】： 關閉 SPI 作業程序 ⋯⋯")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.developer.money/%E9%97%9C%E9%96%89-mac-%E7%9A%84-sip-system-integrity-protection-8f679c4fdd9e",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://blog.developer.money/關閉-mac-的-sip-system-integrity-protection-8f679c4fdd9e"),t("OutboundLink")],1)]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[a._v("重新安裝 scripting-addition，並重新啟動。")]),a._v(" "),t("p",[a._v("sudo yabai --uninstall-sa && sudo yabai --install-sa sudo yabai --load-sa")])])]),a._v(" "),t("p",[t("strong",[a._v("設定「某些 App 啟動時，使用浮動視窗」")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("yabai -m rule --add app=SomeName manage=off\n")])])]),t("p",[a._v("Ref:\n"),t("a",{attrs:{href:"https://github.com/koekeishiya/yabai/issues/76",target:"_blank",rel:"noopener noreferrer"}},[a._v("set certain window to float mode #76"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=i.exports}}]);