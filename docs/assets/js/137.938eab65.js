(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{424:function(n,a,e){"use strict";e.r(a);var s=e(10),t=Object(s.a)({},(function(){var n=this,a=n._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"nvcode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nvcode"}},[n._v("#")]),n._v(" NVCode")]),n._v(" "),a("p",[n._v("https://github.com/ChristianChiarulli/nvim")]),n._v(" "),a("p",[n._v("https://marketplace.visualstudio.com/items?itemName=asvetliakov.vscode-neovim&fbclid=IwAR3UH-vJhQ4rAriMsH3PQPSGQ6BLVGwxiVhFDNJ-dNt8XWk6N4mqcuNzwy4")]),n._v(" "),a("p",[n._v("https://code.visualstudio.com/docs/python/tutorial-django")]),n._v(" "),a("h2",{attrs:{id:"neovim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#neovim"}},[n._v("#")]),n._v(" Neovim")]),n._v(" "),a("p",[n._v("https://github.com/neovim/neovim/releases/nightly")]),n._v(" "),a("h2",{attrs:{id:"mac"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mac"}},[n._v("#")]),n._v(" Mac")]),n._v(" "),a("p",[a("strong",[n._v("Install Neovim V0.5")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("brew install --HEAD neovim # Nightly version\n\nbrew upgrade neovim --fetch-HEAD # Sometimes you need to update\n")])])]),a("p",[n._v("/usr/local/Cellar/neovim/HEAD-f3a8c93")]),n._v(" "),a("p",[n._v("$HOME/.local/bin/nvim")]),n._v(" "),a("p",[n._v("錯誤路徑： /usr/local/bin/nvim")]),n._v(" "),a("p",[a("strong",[n._v("Install Neovim V0.5 Nightly Version")])]),n._v(" "),a("p",[n._v("https://github.com/neovim/neovim/wiki/Installing-Neovim")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("cd ~/build\ncurl -LO https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz\ntar xzf nvim-macos.tar.gz\nmv nvim-osx64 ~/.local/share\n\ncd ~/.local/bin\nln -s -f ~/.local/share/nvim-osx64/bin/nvim\n\n./local/share/nvim-osx64/bin/nvim\n")])])]),a("p",[a("strong",[n._v("Install Python & NodeJS support")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("pip install --upgrade pip\npip install pynvim\npip install neovim-remote\n\n\nnpm i -g neovim\n")])])]),a("p",[n._v("~/.config/nvim/my_nvim.vim")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('let g:python3_host_prog = expand("$HOME/.pyenv/versions/3.8.5/bin/python3.8")\nlet g:node_host_prog = expand("$HOME/n/bin/ndeovim-node-host")\n')])])]),a("p",[a("strong",[n._v("Install clipboard support")]),n._v("\npbcopy is bulletin")]),n._v(" "),a("p",[a("strong",[n._v("Install programs support Vim Plugins")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("brew install <Package>\n\n\n- ripgrep\n- the_silver_searcher\n- fd\n")])])]),a("ul",[a("li",[a("p",[n._v("ranger\nhttps://github.com/kevinhwang91/rnvimr")]),n._v(" "),a("p",[n._v("pip install ranger-fm")])]),n._v(" "),a("li",[a("p",[n._v("ueberzug")])])]),n._v(" "),a("p",[n._v("https://awesomeopensource.com/project/kevinhwang91/rnvimr?categoryPage=40")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("rnvimr\npip install ueberzug")])]),n._v(" "),a("li",[a("p",[n._v("universal-ctags\nhttps://github.com/universal-ctags/homebrew-universal-ctags")]),n._v(" "),a("p",[n._v("brew install --HEAD universal-ctags/universal-ctags/universal-ctags")])]),n._v(" "),a("li",[a("p",[n._v("lazy git\nhttps://github.com/jesseduffield/lazygit")]),n._v(" "),a("p",[n._v("brew install lazygit")])]),n._v(" "),a("li",[a("p",[n._v("lazy docker\nhttps://github.com/jesseduffield/lazydocker")]),n._v(" "),a("p",[n._v("brew install lazydocker")])])]),n._v(" "),a("p",[a("strong",[n._v("Language Servers")])]),n._v(" "),a("ul",[a("li",[a("p",[n._v("Bash Language Server")]),n._v(" "),a("p",[n._v("npm i -g bash-language-server")])])]),n._v(" "),a("p",[n._v("$HOME/.config/nvim/coc-settings.json")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('{\n  ....\n  "languageserver": {\n    "lua": {\n      ....\n    },\n    "bash": {\n      "command": "bash-language-server",\n      "args": ["start"],\n      "filetypes": ["sh"],\n      "ignoredRootPaths": ["~"]    \n    }\n  },\n  ....\n}\n')])])]),a("ul",[a("li",[n._v("Lua Language Server\n參考「建置 Lua 開發環境」")])]),n._v(" "),a("hr"),n._v(" "),a("p",[a("strong",[n._v("For FAR to work")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v(":UpdateRemotePlugins\n")])])]),a("p",[a("strong",[n._v("Vim Gists")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('git config --global github.user "Alan Jui"\n')])])]),a("p",[a("strong",[n._v("Clone configuration files")])]),n._v(" "),a("p",[n._v("（1）下載 Christ 的 NVCode 設定檔：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("git clone https://github.com/ChristianChiarulli/nvim.git ~/.config/nvim\n")])])]),a("p",[n._v("（2）下載「個人客製化」設定檔：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("cd ~/.config/nvim\ngit clone <Repo> my-nvim\n")])])]),a("p",[n._v("my-nvim 之目錄結構與檔案清單：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("[alanjui@VB2101-Manjaro-KDE-202 nvim]$ tree my-nvim        \nmy-nvim \n├── coc-settings.json \n├── lua \n│   ├── ccc-eviline.lua \n│   ├── ccc-spaceline.lua \n│   ├── ccc-statusline.lua \n│   └── my-statusLine.lua \n├── my-init.vim \n├── my-settings.vim \n└── snips \n   ├── html.snippets \n   ├── javascript-node.snippets \n   ├── javascript.snippets \n   ├── json.snippets \n   ├── markdown.json \n   ├── markdown.snippets \n   └── python.snippets \n\n2 directories, 14 files\n")])])]),a("p",[n._v("（3）修訂原設定檔，以便加入「個人客製化」設定：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("cd ~/.config/nvim\ncp init.vim init.vim.org\nvim init.vim\n")])])]),a("p",[n._v("在「檔案底端」加入如下「設定」：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('"=========================================================================\n" User Define\n\nif !exists(\'g:vscode\')\n    let g:python3_host_prog = expand("$HOME/.pyenv/versions/3.9.1/bin/python3")\n    let g:node_host_prog = expand("$HOME/n/bin/neovim-node-host")\n\n    let g:loaded_python_provider = 0\n    let g:loaded_ruby_provider = 0\n    let g:loaded_perl_provider = 0\n\n    source  $HOME/.config/nvim/my-nvim/my-settings.vim\n    luafile $HOME/.config/nvim/my-nvim/lua/my-statusLine.lua\nendif\n')])])]),a("p",[n._v("（4）設定 Snipeets")]),n._v(" "),a("p",[n._v("（4-1）與 VS Code 共用")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("cd ~/.config/nvim/snips\nln -s -f ~/.config/Code/User/snippets/django-html.json htmldjango.json\nln -s -f ~/.config/Code/User/snippets/django-python.json\nln -s -f ~/.config/Code/User/snippets/markdown.json\n")])])]),a("p",[n._v("（4-2）個人客製")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("cd ~/.config/nvim/snips\nln -s -f ../my-nvim/snips/html.snippets\nln -s -f ../my-nvim/snips/javascript-node.snippets\nln -s -f ../my-nvim/snips/javascript.snippets\nln -s -f ../my-nvim/snips/json.snippets\nln -s -f ../my-nvim/snips/markdown.snippets\nln -s -f ../my-nvim/snips/python.snippets\n")])])]),a("p",[n._v("（5）設定「Coc-nvim」設定檔")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("cd ~/.config/nvim\nmv coc-settings.json coc-settings.json.org\nln -s -f my-nvim/coc-settings.json\n")])])]),a("p",[n._v("（6）去除不用的 coc-entensions.vim")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("let g:coc_global_extensions = [\n  \\ 'coc-snippets',\n  \\ 'coc-actions',\n  \\ 'coc-sh',\n  \\ 'coc-java-debug',\n  \\ 'coc-java',\n  \\ 'coc-lists',\n  \\ 'coc-emmet',\n  \\ 'coc-tasks',\n  \\ 'coc-pairs',\n  \\ 'coc-tsserver',\n  \\ 'coc-floaterm',\n  \\ 'coc-fzf-preview',\n  \\ 'coc-html',\n  \\ 'coc-css',\n  \\ 'coc-cssmodules',\n  \\ 'coc-stylelintplus',\n  \\ 'coc-emoji',\n  \\ 'coc-yaml',\n  \\ 'coc-explorer',\n  \\ 'coc-svg',\n  \\ 'coc-prettier',\n  \\ 'coc-vimlsp',\n  \\ 'coc-xml',\n  \\ 'coc-yank',\n  \\ 'coc-json',\n  \\ 'coc-marketplace',\n  \\ ]\n  \" \\ 'coc-pyright',\n  \" \\ 'coc-bookmark',\n  \" \\ 'coc-tabnine',\n  \" \\ 'coc-highlight',\n")])])]),a("hr"),n._v(" "),a("h2",{attrs:{id:"visual-studio-code-extensions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#visual-studio-code-extensions"}},[n._v("#")]),n._v(" Visual Studio Code Extensions")]),n._v(" "),a("p",[n._v("https://morioh.com/p/b6323e6cdfca")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("Install VS Code extensions:")]),n._v(" "),a("ul",[a("li",[n._v("Neo Vim")]),n._v(" "),a("li",[n._v("Which Key")]),n._v(" "),a("li",[n._v("prettier - Code formatter (esbenp.prettier-vscode)")]),n._v(" "),a("li",[n._v("Material Icon Theme (pkief.material-icon-theme)")]),n._v(" "),a("li",[n._v("Django (batisteo.vscode-django)")]),n._v(" "),a("li",[n._v("Djaneiro - Django Snippets (thebarkman.vscode-djaneiro)")]),n._v(" "),a("li",[n._v("Django Samples (mengsicode.vscode-django-boilerplate)")]),n._v(" "),a("li",[n._v("Bracket Pair Colorizer 2 (coenraads.bracket-pair-colorizer-2)")]),n._v(" "),a("li",[n._v("GitLens - Git supercharged (eamodio.gitlens)")]),n._v(" "),a("li",[n._v("Git Graph (mhutchie.git-graph)")])])]),n._v(" "),a("li",[a("p",[n._v("Ref: utils/vscode_config/ ( Git Repo: https://github.com/ChristianChiarulli/nvim )")]),n._v(" "),a("ul",[a("li",[n._v("keybindings.json")]),n._v(" "),a("li",[n._v("settings.json")])])])]),n._v(" "),a("p",[n._v("settings.json")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('{\n  "vscode-neovim.mouseSelectionStartVisualMode": true,\n  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",\n  "vscode-neovim.neovimInitVimPaths.linux": "~/.config/nvim/init.vim",\n  "vscode-neovim.neovimExecutablePaths.darwin": "/Users/alanjui/.local/share/nvim/bin/nvim",\n  "vscode-neovim.neovimInitVimPaths.darwin": "/Users/alanjuigg/.config/nvim/init.vim",\n\n  "files.associations": {\n    "**/*.html": "html",\n    "**/templates/**/*.html": "django-html",\n    "**/templates/**/*": "django-txt",\n    "**/requirements{/**,*}.{txt,in}": "pip-requirements"\n  },\n  "files.exclude": {\n    "**/__pycache__": true,\n    "**/.classpath": true,\n    "**/.project": true,\n    "**/.settings": true,\n    "**/.factorypath": true\n  },\n  "code-runner.executorMap": {\n    "python": "$pythonPath $fileName",\n    "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",\n    "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"\n  },\n  "[javascript]": {\n    "editor.defaultFormatter": "esbenp.prettier-vscode"\n  },\n  \n  "emmet.showSuggestionsAsSnippets": true,\n  "emmet.triggerExpansionOnTab": true,\n  "emmet.includeLanguages": {\n    "javascript": "javascriptreact",\n    "django-html": "html",\n    "razor": "html",\n    "plaintext": "pug"\n  },\n\n  "editor.fontSize": 14,\n  "editor.suggestFontSize": 14,\n  "editor.suggestSelection": "first",\n  "editor.cursorBlinking": "solid",\n  "editor.fontFamily": "FiraCode Nerd Font Mono, Hack, Menlo, Monaco, \'Courier New\', monospace",\n  "editor.minimap.enabled": false,\n  "editor.snippetSuggestions": "bottom",\n  "editor.scrollbar.horizontal": "hidden",\n  "editor.scrollbar.vertical": "hidden",\n\n  //==================================================================\n  // Python\n  //==================================================================\n  //"python.pythonPath": "/home/chris/.miniconda/envs/ds/bin/python",\n  //"python.condaPath": "$HOME/.miniconda/bin/conda",\n  "python.languageServer": "Pylance",\n  "python.formatting.provider": "autopep8",\n  "python.terminal.activateEnvironment": false,\n  "python.insidersChannel": "off",\n  "python.showStartPage": false,\n  "python.dataScience.alwaysTrustNotebooks": true,\n \n  "whichkey.bindings": [\n    {\n      "key": ";",\n      "name": "commands",\n      "type": "command",\n      "command": "workbench.action.showCommands"\n    },\n    ....\n  ]\n')])])]),a("p",[a("strong",[n._v("Git")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('$ git config --global user.name "Alan Jui"\n$ git config --global user.email alanjui.1960@gmail.com\n')])])]),a("hr"),n._v(" "),a("h2",{attrs:{id:"常用操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用操作"}},[n._v("#")]),n._v(" 常用操作")]),n._v(" "),a("p",[a("strong",[n._v("依據「游標」所在處，打開檔案")])]),n._v(" "),a("p",[n._v("https://vim.fandom.com/wiki/Open_file_under_cursor")]),n._v(" "),a("p",[a("strong",[n._v("在 Mac 使用 Nvim V0.4 與 V0.5")]),n._v("\nhttps://purefun.io/blog/2020-11-28-multiple-versions-of-neovim/")]),n._v(" "),a("hr"),n._v(" "),a("h2",{attrs:{id:"建置-django-開發環境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建置-django-開發環境"}},[n._v("#")]),n._v(" 建置 Django 開發環境")]),n._v(" "),a("p",[a("strong",[n._v("（1）在 VS Code 安裝 Extension： Django (batisteo.vscode-django)")])]),n._v(" "),a("p",[a("strong",[n._v("（2）在 settings.json 檔，設定 Django HTML 的 file association")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('"files.associations": {\n    "**/*.html": "html",\n    "**/templates/**/*.html": "django-html",\n    "**/templates/**/*": "django-txt",\n    "**/requirements{/**,*}.{txt,in}": "pip-requirements"\n},\n')])])]),a("p",[a("strong",[n._v("（3）啟用 Emmet 設定，以便編輯 Django Template 時，可透過 Emmet 編輯 HTML Tag：")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('"emmet.includeLanguages": {"django-html": "html"},\n')])])]),a("p",[a("strong",[n._v("（4）令 Django Extension 所使用之 User Snippets ，亦可供 Nvim 使用：")])]),n._v(" "),a("p",[n._v("在 "),a("strong",[n._v("VS Code ，Django Template Snippets 存放於路徑：")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("$HOME/Library/Application\\ Support/Code/User/snippets/django-html.json\n")])])]),a("ul",[a("li",[a("p",[n._v("在 "),a("strong",[n._v("Nvim / Vim Plugins： coc-nvim 的設定檔： coc-settings.json ，增添如下設定⋯⋯")]),n._v('\n"snippets.textmateSnippetsRoots": [\n“~/.config/nvim/snips”\n]')])]),n._v(" "),a("li",[a("p",[a("strong",[n._v("建立 Symbolic Link: htmldjango.json 指向 django-html.json：")])])])]),n._v(" "),a("p",[n._v("【Mac】：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("cd ~/.config/nvim/snips\nln -s -f ~/Library/Application\\ Support/Code/User/snippets/django-html.json htmldjango.json\n")])])]),a("p",[n._v("【ArchLinux】：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("cd ~/.config/nvim/snips\nln -s -f ~/.config/Code/User/snippets/django-html.json  htmldjango.json\nln -s -f ~/.config/Code/User/snippets/markdown.json \n")])])]),a("p",[a("strong",[n._v("Coc.nvim 對 Code Snippets 的支援")])]),n._v(" "),a("p",[n._v("https://kanneg881.gitbook.io/workspace/vim/wai-gua-tui-jian/dai-ma/coc/coc-snippets")]),n._v(" "),a("p",[n._v("安裝 pylint")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("pip install pylint\n")])])]),a("p",[n._v("產生 .pylintrc 設定檔")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("pylint --generate-rcfile > .pylintrc\n")])])]),a("p",[n._v("設定可略過之「規則」")]),n._v(" "),a("ul",[a("li",[a("p",[a("code",[n._v("C0114")]),n._v(" ("),a("code",[n._v("missing-module-docstring")]),n._v(")")])]),n._v(" "),a("li",[a("p",[a("code",[n._v("C0115")]),n._v(" ("),a("code",[n._v("missing-class-docstring")]),n._v(")")])]),n._v(" "),a("li",[a("p",[a("code",[n._v("C0116")]),n._v(" ("),a("code",[n._v("missing-function-docstring")]),n._v(")")]),n._v(" "),a("p",[n._v("[MASTER]\n....\ndisable=print-statement,\n....,\nC0114,\nC0115,\nC0116,\ncompresension-escape")])])]),n._v(" "),a("hr"),n._v(" "),a("h2",{attrs:{id:"建置-lua-開發環境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#建置-lua-開發環境"}},[n._v("#")]),n._v(" 建置 Lua 開發環境")]),n._v(" "),a("p",[n._v("由於 Neovim 支援 Lua ，故而不少的 Nvim-Plugin 系以 Lua Script 撰寫而成。故而 NVCode 之使用，不僅需要建置 Python, NodeJS 作業環境；亦需添加 Lua 作業環境。\nhttps://nathansmith.io/posts/neovim-lsp/")]),n._v(" "),a("p",[n._v("在 Neovim 中使用 Lua Script 參考：")]),n._v(" "),a("p",[n._v("https://github.com/nanotee/nvim-lua-guide")]),n._v(" "),a("p",[n._v("https://www.tutorialspoint.com/lua/lua_environment.htm")]),n._v(" "),a("p",[n._v("https://luarocks.org/modules/alloyed/lua-lsp")]),n._v(" "),a("p",[n._v("【Mac】")]),n._v(" "),a("p",[a("strong",[n._v("（1）安裝 Lua 直譯器（Lua Compiler）")])]),n._v(" "),a("p",[n._v("《安裝最新版》")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("brew install lua\n")])])]),a("p",[n._v("【註】：在 2021/1/20 安裝，最新版本為： 5.4。")]),n._v(" "),a("p",[n._v("《安裝特定版》")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("brew install lua@5.3\n")])])]),a("p",[n._v("【註】：lua 執行檔所在路徑")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("$ ll /usr/local/opt/lua*\nlrwxr-xr-x  1 alanjui  admin    19B  1 20 11:13 /usr/local/opt/lua -> ../Cellar/lua/5.4.2\nlrwxr-xr-x  1 alanjui  admin    23B  1 20 11:16 /usr/local/opt/lua@5.3 -> ../Cellar/lua@5.3/5.3.6\nlrwxr-xr-x  1 alanjui  admin    19B  1 20 11:13 /usr/local/opt/lua@5.4 -> ../Cellar/lua/5.4.2\nlrwxr-xr-x  1 alanjui  admin    22B  9  7 16:27 /usr/local/opt/luajit -> ../Cellar/luajit/2.0.5\nlrwxr-xr-x  1 alanjui  admin    24B  1 20 11:23 /usr/local/opt/luarocks -> ../Cellar/luarocks/3.5.0\n")])])]),a("p",[a("strong",[n._v("（2）安裝「套件管理器」")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("brew install luarocks\n")])])]),a("p",[n._v("luarocks 安裝套件時，可配合 "),a("strong",[n._v("—lua-dir=")]),n._v(" 選項，用以指定 lua 版本：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("luarocks --lua-dir=/usr/local/opt/lua@5.1 install say\n")])])]),a("p",[n._v("《範例》：使用 「套件管理器」，安裝 Lua Language Server: lua-lsp")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("sudo luarocks --lua-dir=/usr/local/opt/lua@5.3 install lua-lsp\n")])])]),a("p",[n._v("【註】：在 2021/1/20 時，尚不能使用以下「方式」安裝 lua-lsp，因為 luarocks 還未支援 lua V5.4 版")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("luarocks install lua-lsp\n")])])]),a("p",[n._v("【註】： 安裝時參考資訊")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("$ brew install lua luarocks\n\nUpdating Homebrew...\n==> Downloading https://homebrew.bintray.com/bottles/lua-5.4.2.big_sur.bottle.tar.gz\nAlready downloaded: /Users/alanjui/Library/Caches/Homebrew/downloads/0bf17f22ff52041bf7ca9415def4cdfcd893ab4c5f72991825cd53c5d3a759c8--lua-5.4.2.big_sur.bottle.tar.gz\n==> Pouring lua-5.4.2.big_sur.bottle.tar.gz\n==> Caveats\nYou may also want luarocks:\n  brew install luarocks\n==> Summary\n🍺  /usr/local/Cellar/lua/5.4.2: 28 files, 403.8KB\n==> Downloading https://homebrew.bintray.com/bottles/luarocks-3.5.0.big_sur.bottle.1.tar.gz\nAlready downloaded: /Users/alanjui/Library/Caches/Homebrew/downloads/716ae460cb801bb882ce188936f66f5032772ff968fc35c407013948784e028f--luarocks-3.5.0.big_sur.bottle.1.tar.gz\n==> Pouring luarocks-3.5.0.big_sur.bottle.1.tar.gz\n==> Caveats\nLuaRocks supports multiple versions of Lua. By default it is configured\nto use Lua5.4, but you can require it to use another version at runtime\nwith the `--lua-dir` flag, like this:\n\n  luarocks --lua-dir=/usr/local/opt/lua@5.1 install say\n==> Summary\n🍺  /usr/local/Cellar/luarocks/3.5.0: 104 files, 707.3KB\n==> Caveats\n==> lua\nYou may also want luarocks:\n  brew install luarocks\n==> luarocks\nLuaRocks supports multiple versions of Lua. By default it is configured\nto use Lua5.4, but you can require it to use another version at runtime\nwith the `--lua-dir` flag, like this:\n\n  luarocks --lua-dir=/usr/local/opt/lua@5.1 install say\n")])])]),a("p",[a("strong",[n._v("（3）安裝 Lua language Server")])]),n._v(" "),a("p",[n._v("《作業系統層級》")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("sudo luarocks --lua-dir=/usr/local/opt/lua@5.3 install lua-lsp\n")])])]),a("p",[n._v("lua-lsp 存放路徑：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("$ which lua-lsp\n/usr/local/bin/lua-lsp\n")])])]),a("p",[n._v("《應用軟體層級：VS Code 整合》\n啟動 VS Code ，安裝 Lua language Server Extension: Lua (sumneko.lua)")]),n._v(" "),a("p",[a("strong",[n._v("（4）參考資訊")])]),n._v(" "),a("p",[n._v("使用 brew 安裝 Lua 時的畫面：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('$ brew install lua\n==> Downloading https://homebrew.bintray.com/bottles/lua-5.4.2.big_sur.bottle.tar.gz\n######################################################################## 100.0%\n==> Reinstalling lua\n==> Pouring lua-5.4.2.big_sur.bottle.tar.gz\nError: The `brew link` step did not complete successfully\nThe formula built, but is not symlinked into /usr/local\nCould not symlink bin/lua\nTarget /usr/local/bin/lua\nalready exists. You may want to remove it:\n  rm \'/usr/local/bin/lua\'\n\nTo force the link and overwrite all conflicting files:\n  brew link --overwrite lua\n\nTo list all files that would be deleted:\n  brew link --overwrite --dry-run lua\n\nPossible conflicting files are:\n/usr/local/bin/lua\n/usr/local/bin/luac\n==> Caveats\nYou may also want luarocks:\n  brew install luarocks\n==> Summary\n🍺  /usr/local/Cellar/lua/5.4.2: 28 files, 403.8KB\n==> Upgrading 1 dependent:\nvim 8.2.2250_1 -> 8.2.2350\n==> Upgrading vim 8.2.2250_1 -> 8.2.2350\n==> Downloading https://homebrew.bintray.com/bottles/tcl-tk-8.6.11.big_sur.bottle.tar.gz\n==> Downloading from https://d29vzk4ow07wi7.cloudfront.net/f7c4fb93ca32dca70f3ead938b44bce22c7a99f060242ce802ca8955d274f361?response-c\n######################################################################## 100.0%\n==> Downloading https://homebrew.bintray.com/bottles/python%403.9-3.9.1_6.big_sur.bottle.tar.gz\n==> Downloading from https://d29vzk4ow07wi7.cloudfront.net/48d123683fa125de9f02f7777683edda40e998f0e2dca492024c00bbd3f05ea2?response-c\n######################################################################## 100.0%\n==> Downloading https://homebrew.bintray.com/bottles/vim-8.2.2350.big_sur.bottle.tar.gz\n==> Downloading from https://d29vzk4ow07wi7.cloudfront.net/5510c6bc9722e6d5fb620b750c9a5879355aef97a2e0bba8208f83323780cf12?response-c\n######################################################################## 100.0%\n==> Installing dependencies for vim: tcl-tk and python@3.9\n==> Installing vim dependency: tcl-tk\n==> Pouring tcl-tk-8.6.11.big_sur.bottle.tar.gz\n==> Caveats\ntcl-tk is keg-only, which means it was not symlinked into /usr/local,\nbecause macOS already provides this software and installing another version in\nparallel can cause all kinds of trouble.\n\nIf you need to have tcl-tk first in your PATH run:\n  echo \'export PATH="/usr/local/opt/tcl-tk/bin:$PATH"\' >> ~/.zshrc\n\nFor compilers to find tcl-tk you may need to set:\n  export LDFLAGS="-L/usr/local/opt/tcl-tk/lib"\n  export CPPFLAGS="-I/usr/local/opt/tcl-tk/include"\n\nFor pkg-config to find tcl-tk you may need to set:\n  export PKG_CONFIG_PATH="/usr/local/opt/tcl-tk/lib/pkgconfig"\n\n==> Summary\n🍺  /usr/local/Cellar/tcl-tk/8.6.11: 3,041 files, 51.6MB\n==> Installing vim dependency: python@3.9\n==> Pouring python@3.9-3.9.1_6.big_sur.bottle.tar.gz\n==> /usr/local/Cellar/python@3.9/3.9.1_6/bin/python3 -m ensurepip\n==> /usr/local/Cellar/python@3.9/3.9.1_6/bin/pip3 install -v --global-option=--no-user-cfg --install-option=--force --install-option=-\n==> /usr/local/Cellar/python@3.9/3.9.1_6/bin/pip3 wheel --wheel-dir=/usr/local/Cellar/python@3.9/3.9.1_6/Frameworks/Python.framework/V\n==> Caveats\nPython has been installed as\n  /usr/local/bin/python3\n\nUnversioned symlinks `python`, `python-config`, `pip` etc. pointing to\n`python3`, `python3-config`, `pip3` etc., respectively, have been installed into\n  /usr/local/opt/python@3.9/libexec/bin\n\nYou can install Python packages with\n  pip3 install <package>\nThey will install into the site-package directory\n  /usr/local/lib/python3.9/site-packages\n\nSee: https://docs.brew.sh/Homebrew-and-Python\n')])])]),a("p",[n._v("手動安裝作業程序：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("cd ~/build\n\n# (1) Download the latest version of Lua\ncurl -R -O http://www.lua.org/ftp/lua-5.2.3.tar.gz\n\n# (2) Extract it\ntar zxf lua-5.2.3.tar.gz\n\n# (3) Go to the new directory\ncd lua-5.2.3\n\n# (4) Compile it\nmake macosx\n\n# (5) Test it.\nmake test\n\n# (6) If it succeeds, install it.\nsudo make install\n")])])]),a("p",[n._v("【註】：上述之手動作業，需要在「終端機」中，使用「make」指令。若作業系統尚未安裝 Xcode 及其 Command Line Tools ，很可能會無法正常運作。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("$ sudo make install\nPassword:\ncd src && mkdir -p /usr/local/bin /usr/local/include /usr/local/lib /usr/local/man/man1 /usr/local/share/lua/5.2 /usr/local/lib/lua/5.2\ncd src && install -p -m 0755 lua luac /usr/local/bin\ncd src && install -p -m 0644 lua.h luaconf.h lualib.h lauxlib.h lua.hpp /usr/local/include\ncd src && install -p -m 0644 liblua.a /usr/local/lib\ncd doc && install -p -m 0644 lua.1 luac.1 /usr/local/man/man1\n")])])]),a("p",[n._v("【ArchLinux】")]),n._v(" "),a("p",[n._v("https://wiki.archlinux.org/index.php/Lua")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("sudo pacman -S lua53\n\n\nsudo pacman -S luarocks\n")])])]),a("p",[n._v("luarocks-3.4.0-1 軟體包：")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("unzip-6.0-14")])]),n._v(" "),a("li",[a("p",[n._v("zip-3.0-9")])]),n._v(" "),a("li",[a("p",[n._v("luarocks-3.4.0-1")]),n._v(" "),a("p",[n._v("luarocks install lua-lsp")]),n._v(" "),a("p",[n._v("yay -S lua-language-server-git")])])]),n._v(" "),a("p",[n._v("Lua 其它參考：")]),n._v(" "),a("p",[n._v("https://codertw.com/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/84650/")]),n._v(" "),a("hr"),n._v(" "),a("h2",{attrs:{id:"django-project-開發環境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#django-project-開發環境"}},[n._v("#")]),n._v(" Django Project 開發環境")]),n._v(" "),a("p",[a("strong",[n._v("開發環境設定檔")])]),n._v(" "),a("p",[n._v("需有的開發環境設定檔：")]),n._v(" "),a("ul",[a("li",[n._v(".python-version")]),n._v(" "),a("li",[n._v("pyrightconfig.json")]),n._v(" "),a("li",[n._v(".gitignore")])]),n._v(" "),a("p",[a("strong",[n._v("《.python-version》")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("$ cat .python-version\nvenv-3.9.1\n")])])]),a("p",[n._v("上述檔案，可使用下列指令產生：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("pyenv local <venv>\n")])])]),a("p",[n._v("範例：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("pyenv local venv-3.9.1\n")])])]),a("p",[a("strong",[n._v("《pyrightconfig.json》")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('$ cat pyrightconfig.json\n{\n  "venvPath": "/Users/alanjui/.pyenv/versions/3.9.1/envs",\n  "venv": "venv-3.9.1"\n}\n')])])]),a("p",[n._v("【註】： "),a("strong",[n._v("venvPath")]),n._v(" 的設定，不可使用 Home Dir 的簡寫：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("- $**HOME**/.pyenv/versions/3.9.1/envs\n- **~**/.pyenv/versions/3.9.1/envs\n")])])]),a("p",[a("strong",[n._v("《.gitignore》")])]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v("$ cat .gitignore\n$HOME/.config/coc/extensions/\n###################\n.DS_Store\n.hg\n.svn\n.idea\n.vscode\n*.vscode\nnode_modules\n###################\n# Python files\n.venv/\nenv/\n__pycache__/\n.pyc\nstatic_collected/\n# Temporary files\n*.kate-swp\n*.swp\n*.swo\n*~\n")])])]),a("p",[a("strong",[n._v("存檔時自動格式化")])]),n._v(" "),a("p",[n._v("https://github.com/neoclide/coc-prettier")]),n._v(" "),a("p",[n._v("https://prettier.io/docs/en/vim.html")]),n._v(" "),a("h2",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[n._v("#")])])])}),[],!1,null,null,null);a.default=t.exports}}]);