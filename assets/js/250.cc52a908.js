(window.webpackJsonp=window.webpackJsonp||[]).push([[250],{537:function(n,e,a){"use strict";a.r(e);var s=a(10),t=Object(s.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"poetry-and-django-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#poetry-and-django-4"}},[n._v("#")]),n._v(" Poetry and Django 4")]),n._v(" "),e("p",[e("a",{attrs:{href:"https://rasulkireev.com/managing-django-with-poetry/",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://rasulkireev.com/managing-django-with-poetry/"),e("OutboundLink")],1)]),n._v(" "),e("p",[e("a",{attrs:{href:"https://www.digitalocean.com/community/tutorials/how-to-install-poetry-to-manage-python-dependencies-on-ubuntu-22-04",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://www.digitalocean.com/community/tutorials/how-to-install-poetry-to-manage-python-dependencies-on-ubuntu-22-04"),e("OutboundLink")],1)]),n._v(" "),e("h1",{attrs:{id:"poetry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#poetry"}},[n._v("#")]),n._v(" Poetry")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("poetry config virtualenvs.create true\npoetry config virtualenvs.in-project true\n")])])]),e("h1",{attrs:{id:"create-project"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-project"}},[n._v("#")]),n._v(" Create Project")]),n._v(" "),e("p",[e("strong",[n._v("(1)")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ cd ~/workspace/django\n❯ poetry new ex-2023-02 && cd $_\n\n❯ pyenv local 3.10.6\n❯ pyenv shell\n❯ python -m venv .venv\n❯ ls -al\ntotal 16\ndrwxr-xr-x   8 alanjui  staff   256  2 19 14:23 .\ndrwxr-xr-x  42 alanjui  staff  1344  2 19 14:19 ..\n-rw-r--r--   1 alanjui  staff     7  2 19 14:22 .python-version\ndrwxr-xr-x   6 alanjui  staff   192  2 19 14:23 .venv\n-rw-r--r--   1 alanjui  staff     0  2 19 14:19 README.md\ndrwxr-xr-x   3 alanjui  staff    96  2 19 14:19 ex_2023_02\n-rw-r--r--   1 alanjui  staff   308  2 19 14:19 pyproject.toml\ndrwxr-xr-x   3 alanjui  staff    96  2 19 14:19 tests\n\n❯ poetry env info\n\nVirtualenv\nPython:         3.10.6\nImplementation: CPython\nPath:           /Users/alanjui/workspace/django/ex-2023-02/.venv\nExecutable:     /Users/alanjui/workspace/django/ex-2023-02/.venv/bin/python\nValid:          True\n\nSystem\nPlatform:   darwin\nOS:         posix\nPython:     3.10.6\nPath:       /Users/alanjui/.pyenv/versions/3.10.6\nExecutable: /Users/alanjui/.pyenv/versions/3.10.6/bin/python3.10\n")])])]),e("p",[e("strong",[n._v("(2)")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ poetry shell\nSpawning shell within /Users/alanjui/workspace/django/ex-2023-02/.venv\n❯ emulate bash -c '. /Users/alanjui/workspace/django/ex-2023-02/.venv/bin/activate'\n")])])]),e("p",[n._v("**(****3)**")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('❯ poetry add django\nUsing version ^4.1.7 for django\n\nUpdating dependencies\nResolving dependencies... (0.3s)\n\nWriting lock file\n\nPackage operations: 3 installs, 0 updates, 0 removals\n\n  • Installing asgiref (3.6.0)\n  • Installing sqlparse (0.4.3)\n  • Installing django (4.1.7)\n\n❯ ls -al .venv/lib/python3.10/site-packages\ntotal 8\ndrwxr-xr-x  15 alanjui  staff   480  2 19 14:30 .\ndrwxr-xr-x   3 alanjui  staff    96  2 19 14:23 ..\ndrwxr-xr-x  12 alanjui  staff   384  2 19 14:30 Django-4.1.7.dist-info\ndrwxr-xr-x   5 alanjui  staff   160  2 19 14:23 _distutils_hack\ndrwxr-xr-x  14 alanjui  staff   448  2 19 14:30 asgiref\ndrwxr-xr-x   9 alanjui  staff   288  2 19 14:30 asgiref-3.6.0.dist-info\n-rw-r--r--   1 alanjui  staff   151  2 19 14:23 distutils-precedence.pth\ndrwxr-xr-x  21 alanjui  staff   672  2 19 14:30 django\ndrwxr-xr-x   9 alanjui  staff   288  2 19 14:23 pip\ndrwxr-xr-x  10 alanjui  staff   320  2 19 14:23 pip-22.2.1.dist-info\ndrwxr-xr-x   6 alanjui  staff   192  2 19 14:23 pkg_resources\ndrwxr-xr-x  48 alanjui  staff  1536  2 19 14:23 setuptools\ndrwxr-xr-x  10 alanjui  staff   320  2 19 14:23 setuptools-63.2.0.dist-info\ndrwxr-xr-x  16 alanjui  staff   512  2 19 14:30 sqlparse\ndrwxr-xr-x  11 alanjui  staff   352  2 19 14:30 sqlparse-0.4.3.dist-info\n\n❯ cat pyproject.toml\n[tool.poetry]\nname = "ex-2023-02"\nversion = "0.1.0"\ndescription = ""\nauthors = ["居正中 <AlanJui.1960@gmail.com>"]\nreadme = "README.md"\npackages = [{include = "ex_2023_02"}]\n\n[tool.poetry.dependencies]\npython = "^3.10"\ndjango = "^4.1.7"\n\n\n[build-system]\nrequires = ["poetry-core"]\nbuild-backend = "poetry.core.masonry.api"\n')])])]),e("p",[n._v("**(****4)**")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ django-admin startproject web_app .\n\n❯ ls -al\ntotal 32\ndrwxr-xr-x  11 alanjui  staff   352  2 19 14:31 .\ndrwxr-xr-x  42 alanjui  staff  1344  2 19 14:19 ..\n-rw-r--r--   1 alanjui  staff     7  2 19 14:22 .python-version\ndrwxr-xr-x   6 alanjui  staff   192  2 19 14:23 .venv\n-rw-r--r--   1 alanjui  staff     0  2 19 14:19 README.md\ndrwxr-xr-x   3 alanjui  staff    96  2 19 14:19 ex_2023_02\n-rwxr-xr-x   1 alanjui  staff   663  2 19 14:31 manage.py\n-rw-r--r--   1 alanjui  staff  2243  2 19 14:30 poetry.lock\n-rw-r--r--   1 alanjui  staff   326  2 19 14:30 pyproject.toml\ndrwxr-xr-x   3 alanjui  staff    96  2 19 14:19 tests\ndrwxr-xr-x   7 alanjui  staff   224  2 19 14:31 web_app\n\n❯ tree .\n.\n├── README.md\n├── ex_2023_02\n│   └── __init__.py\n├── manage.py\n├── poetry.lock\n├── pyproject.toml\n├── tests\n│   └── __init__.py\n└── web_app\n    ├── __init__.py\n    ├── asgi.py\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py\n\n4 directories, 11 files\n")])])]),e("p",[e("strong",[n._v("(5)")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ python manage.py migrate\nOperations to perform:\n  Apply all migrations: admin, auth, contenttypes, sessions\nRunning migrations:\n  Applying contenttypes.0001_initial... OK\n  Applying auth.0001_initial... OK\n  Applying admin.0001_initial... OK\n  Applying admin.0002_logentry_remove_auto_add... OK\n  Applying admin.0003_logentry_add_action_flag_choices... OK\n  Applying contenttypes.0002_remove_content_type_name... OK\n  Applying auth.0002_alter_permission_name_max_length... OK\n  Applying auth.0003_alter_user_email_max_length... OK\n  Applying auth.0004_alter_user_username_opts... OK\n  Applying auth.0005_alter_user_last_login_null... OK\n  Applying auth.0006_require_contenttypes_0002... OK\n  Applying auth.0007_alter_validators_add_error_messages... OK\n  Applying auth.0008_alter_user_username_max_length... OK\n  Applying auth.0009_alter_user_last_name_max_length... OK\n  Applying auth.0010_alter_group_name_max_length... OK\n  Applying auth.0011_update_proxy_permissions... OK\n  Applying auth.0012_alter_user_first_name_max_length... OK\n  Applying sessions.0001_initial... OK\n")])])]),e("p",[e("strong",[n._v("(6)")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ python manage.py runserver\nWatching for file changes with StatReloader\nPerforming system checks...\n\nSystem check identified no issues (0 silenced).\nFebruary 19, 2023 - 06:39:15\nDjango version 4.1.7, using settings 'web_app.settings'\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n")])])]),e("h1",{attrs:{id:"create-django-application"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create-django-application"}},[n._v("#")]),n._v(" Create Django Application")]),n._v(" "),e("p",[e("strong",[n._v("(1)")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ python manage.py startapp hello\n❯ ll\ntotal 280\n-rw-r--r--  1 alanjui  staff     0B Feb 15 17:13 README.md\n-rw-r--r--  1 alanjui  staff   128K Feb 15 17:22 db.sqlite3\ndrwxr-xr-x  3 alanjui  staff    96B Feb 15 17:13 ex_2023_02\ndrwxr-xr-x  9 alanjui  staff   288B Feb 15 17:30 hello\n-rwxr-xr-x  1 alanjui  staff   663B Feb 15 17:21 manage.py\n-rw-r--r--  1 alanjui  staff   2.1K Feb 15 17:18 poetry.lock\n-rw-r--r--  1 alanjui  staff   326B Feb 15 17:18 pyproject.toml\ndrwxr-xr-x  3 alanjui  staff    96B Feb 15 17:13 tests\ndrwxr-xr-x  8 alanjui  staff   256B Feb 15 17:22 web_app\n\n❯ tree .\n.\n├── README.md\n├── db.sqlite3\n├── ex_2023_02\n│   └── __init__.py\n├── hello\n│   ├── __init__.py\n│   ├── admin.py\n│   ├── apps.py\n│   ├── migrations\n│   │   └── __init__.py\n│   ├── models.py\n│   ├── tests.py\n│   └── views.py\n├── manage.py\n├── poetry.lock\n├── pyproject.toml\n├── tests\n│   └── __init__.py\n└── web_app\n    ├── __init__.py\n    ├── __pycache__\n    │   ├── __init__.cpython-310.pyc\n    │   ├── settings.cpython-310.pyc\n    │   ├── urls.cpython-310.pyc\n    │   └── wsgi.cpython-310.pyc\n    ├── asgi.py\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py\n\n7 directories, 23 files\n")])])]),e("p",[e("strong",[n._v("(2) web_app/settings.py")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("ALLOWD_HOSTS = [\n  'localhost',\n  '127.0.0.1',\n]\n...\nINSTALLED_APPS = [\n    'hello',\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n]\n")])])]),e("h1",{attrs:{id:"setup-project-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setup-project-configuration"}},[n._v("#")]),n._v(" Setup Project Configuration")]),n._v(" "),e("h2",{attrs:{id:"git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[n._v("#")]),n._v(" git")]),n._v(" "),e("p",[e("strong",[n._v("(1)")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("cp ~/.config/nvim/tools/django/.gitignore .\ngit init\n")])])]),e("h2",{attrs:{id:"pyright"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pyright"}},[n._v("#")]),n._v(" pyright")]),n._v(" "),e("p",[e("strong",[n._v("(2)")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ poetry add django-stubs --group dev\n❯ cp ~/.config/nvim/tools/django/pyrightconfig.json .\n❯ cp ~/.config/nvim/tools/django/.yabs .\n")])])]),e("p",[n._v("[pyrightconfig.json]")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('{\n  "venvPath": "./",\n  "venv": ".venv",\n        "exclude": [\n                "**/node_modules",\n                "**/__pycache__",\n                "**/.venv",\n                "**/.*"\n        ],\n        "ignore": [\n                "**/node_modules",\n                "**/__pycache__"\n        ],\n        "reportUnusedVariable": false,\n        "reportUnusedFunction": false,\n        "reportUnusedImport": true,\n        "reportMissingImports": true,\n        "reportMissingTypeStubs": "error",\n        "reportOptionalMemberAccess": false,\n        "reportGeneralTypeIssues": "warning",\n        "typeshedPaths": [],\n        "typeCheckingMode": "basic",\n        "useLibraryCodeForTypes": true\n}\n')])])]),e("h2",{attrs:{id:"verify-pyright"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#verify-pyright"}},[n._v("#")]),n._v(" Verify pyright")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('❯ ~/.local/share/nvim/mason/bin/pyright -p pyrightconfig.json manage.py\nLoading configuration file at /Users/alanjui/workspace/django/ex-2023-02/pyrightconfig.json\nAssuming Python version 3.10\nAssuming Python platform Darwin\nstubPath /Users/alanjui/workspace/django/ex-2023-02/typings is not a valid directory.\nSearching for source files\nFound 1 source file\npyright 1.1.294\n0 errors, 0 warnings, 0 informations\nCompleted in 0.64sec\n\n❯ mkdir typings\n❯ ~/.local/share/nvim/mason/bin/pyright -p pyrightconfig.json manage.py\nLoading configuration file at /Users/alanjui/workspace/django/ex-2023-02/pyrightconfig.json\nAssuming Python version 3.10\nAssuming Python platform Darwin\nSearching for source files\nFound 1 source file\npyright 1.1.294\n0 errors, 0 warnings, 0 informations\nCompleted in 0.636sec\n\n\n❯ pyright -p pyrightconfig.json manage.py\nLoading configuration file at /Users/alanjui/workspace/django/ex-2023-01/pyrightconfig.json\nConfig "reportMissingTypeStubs" entry must be true, false, "error", "warning", "information" or "none".\nvenvPath /Users/alanjui/workspace/django/ex-2023-01/$HOME/workspace/django/ex-2023-01 is not a valid directory.\nvenv .venv subdirectory not found in venv path /Users/alanjui/workspace/django/ex-2023-01/$HOME/workspace/django/ex-2023-01.\nstubPath /Users/alanjui/workspace/django/ex-2023-01/typings is not a valid directory.\nSearching for source files\nFound 1 source file\npyright 1.1.294\n0 errors, 0 warnings, 0 informations\nCompleted in 0.931sec\n')])])]),e("h2",{attrs:{id:"yabs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yabs"}},[n._v("#")]),n._v(" yabs")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("cp ~/.config/nvim/tools/django/.yabs .\n")])])]),e("h2",{attrs:{id:"pylint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pylint"}},[n._v("#")]),n._v(" pylint")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("poetry add pylint pylint-django --group dev\ncp ~/.config/nvim/tools/django/.pylintrc .\n")])])]),e("p",[n._v("[.pylintrc]")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('[MASTER]\npersistent=yes\nignore=tests.py, urls.py, migrations\ninit-hook="import sys; import os; from pylint.config import find_pylintrc; sys.path.append(os.path.dirname(find_pylintrc()))"\nload-plugins=pylint_django\ndjango-settings-module=web_app.settings\n\n[MESSAGES CONTROL]\n# C0111 Missing docstring\n# C0114(missing-module-docstring) Missing module docstring\n# I0011 Warning locally suppressed using disable-msg\n# I0012 Warning locally suppressed using disable-msg\n# W0704 Except doesn\'t do anything Used when an except clause does nothing but "pass" and there is no "else" clause\n# W0142 Used * or * magic* Used when a function or method is called using *args or **kwargs to dispatch arguments.\n# W0212 Access to a protected member %s of a client class\n# W0232 Class has no __init__ method Used when a class has no __init__ method, neither its parent classes.\n# W0611(unused-import)\n# W0613 Unused argument %r Used when a function or method argument is not used.\n# W0702 No exception\'s type specified Used when an except clause doesn\'t specify exceptions type to catch.\n# R1710(inconsistent-return-statements)\n# R0201 Method could be a function\n# C1001 Used when a class is defined that does not inherit from anotherclass and does not inherit explicitly from “object”.\n# C0103 Invalid module name\n# R0901 Used when class has too many parent classes, try to reduce this to get a simpler (and so easier to use) class.\n# E501(flake8): line too long ( > 79 characters )\n# disable=C0111,I0011,I0012,W0704,W0142,W0212,W0232,W0613,W0702,R0201,C1001,C0103,R0901,E501\ndisable=raw-checker-failed,\n        bad-inline-option,\n        locally-disabled,\n        file-ignored,\n        suppressed-message,\n        useless-suppression,\n        deprecated-pragma,\n        use-symbolic-message-instead,\n        too-many-instance-attributes,\n        len-as-condition,\n        too-few-public-methods,\n        anomalous-backslash-in-string,\n        no-else-return,\n        simplifiable-if-statement,\n        too-many-arguments,\n        duplicate-code,\n        no-name-in-module,\n        no-member,\n        import-error,\n        missing-module-docstring,\n        missing-docstring,\n        invalid-name,\n        consider-using-enumerate\n\n\n[REPORTS]\nmsg-template={path}:{line}: [{msg_id}({symbol}), {obj}] {msg}\n\n\n[BASIC]\nno-docstring-rgx=__.*__|_.*\nclass-rgx=\\[A-Z_\\][a-zA-Z0-9_]+$\nfunction-rgx=\\[a-zA_\\][a-zA-Z0-9_]{2,70}$\nmethod-rgx=\\[a-z_\\][a-zA-Z0-9_]{2,70}$\nconst-rgx=((\\[A-Z_\\][A-Z0-9_]*)|(\\[a-z_\\][a-z0-9_]*)|(__.*__)|register|urlpatterns)$\ngood-names=_,i,j,k,e,qs,pk,setUp,tearDown\n\n[TYPECHECK]\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with "mixin" (case insensitive).\nignore-mixin-members=yes\n\n# List of classes names for which member attributes should not be checked\n# (useful for classes with attributes dynamically set).\nignored-classes=SQLObject,WSGIRequest\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn\'t trigger E0201 when accessed.\n# generated-members=objects,DoesNotExist,id,pk,_meta,base_fields,context\ngenerated-members=REQUEST,acl_users,aq_parent,objects,_meta,id,[a-zA-Z]+_set\n\n# List of method names used to declare (i.e. assign) instance attributes\ndefining-attr-methods=__init__,__new__,setUp\n\n\n[VARIABLES]\ninit-import=no\ndummy-variables-rgx=_|dummy\n\n[SIMILARITIES]\nmin-similarity-lines=6\nignore-comments=yes\nignore-docstrings=yes\n\n\n[MISCELLANEOUS]\nnotes=FIXME,XXX,TODO\n\n\n[FORMAT]\nmax-line-length=120\nmax-module-lines=500\nindent-string=\'    \'\n\n\n[DESIGN]\nmax-args=10\nmax-locals=15\nmax-returns=6\nmax-branches=12\nmax-statements=50\nmax-parents=13\nmax-attributes=7\nmin-public-methods=0\nmax-public-methods=50\n\n\n❯ poetry run pylint --load-plugins pylint_django --django-settings-module=web_app.settings blog\n************* Module blog.models\nblog/models.py:1: [E5142(imported-auth-user), ] User model imported from django.contrib.auth.models\nException on node <ClassDef.Post l.11 at 0x112ad57b0> in file \'/Users/alanjui/workspace/django/ex-2023-02/blog/models.py\'\nTraceback (most recent call last):\n  File "/Users/alanjui/workspace/django/ex-2023-02/.venv/lib/python3.10/site-packages/pylint/utils/ast_walker.py", line 91, in walk\n    callback(astroid)\n  File "/Users/alanjui/workspace/django/ex-2023-02/.venv/lib/python3.10/site-packages/pylint_django/checkers/models.py", line 91, in visit_classdef\n    if _is_meta_with_abstract(child):\n  File "/Users/alanjui/workspace/django/ex-2023-02/.venv/lib/python3.10/site-packages/pylint_django/checkers/models.py", line 41, in _is_meta_with_abstract\n    if not meta_child.targets[0].name == "abstract":\nAttributeError: \'AssignAttr\' object has no attribute \'name\'\nblog/models.py:1: [F0002(astroid-error), ] blog/models.py: Fatal error while checking \'blog/models.py\'. Please open an issue in our bug tracker so we address this. There is a pre-filled template that you can use in \'/Users/alanjui/Library/Caches/pylint/pylint-crash-2023-02-22-05-13-06.txt\'.\n************* Module blog.apps\nblog/apps.py:1: [C0413(wrong-import-position), ] Import "from django.apps import AppConfig" should be placed at the top of the module\n************* Module blog.views\nblog/views.py:1: [W0611(unused-import), ] Unused render imported from django.shortcuts\n\n-----------------------------------\nYour code has been rated at 0.00/10\n')])])]),e("h2",{attrs:{id:"mypy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mypy"}},[n._v("#")]),n._v(" mypy")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("poetry add mypy django-stubs --group dev\ncp ~/.config/nvim/tools/django/mypy.ini\n")])])]),e("p",[n._v("[mypy.ini]")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('[mypy]\nplugins =\n    mypy_django_plugin.main\n\n[mypy.plugins.django-stubs]\ndjango_settings_module = "web_app.settings"\n')])])]),e("h2",{attrs:{id:"install-packages"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-packages"}},[n._v("#")]),n._v(" Install Packages")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ poetry add django-stubs mypy pylint pylint-django --group dev\nUsing version ^1.14.0 for django-stubs\nUsing version ^1.0.1 for mypy\nUsing version ^2.16.2 for pylint\nUsing version ^2.5.3 for pylint-django\n\nUpdating dependencies\nResolving dependencies... (1.9s)\n\nWriting lock file\n\nPackage operations: 19 installs, 0 updates, 0 removals\n\n  • Installing lazy-object-proxy (1.9.0)\n  • Installing typing-extensions (4.5.0)\n  • Installing wrapt (1.14.1)\n  • Installing astroid (2.14.2)\n  • Installing dill (0.3.6)\n  • Installing isort (5.12.0)\n  • Installing mccabe (0.7.0)\n  • Installing platformdirs (3.0.0)\n  • Installing tomli (2.0.1)\n  • Installing tomlkit (0.11.6)\n  • Installing mypy-extensions (1.0.0)\n  • Installing pylint (2.16.2)\n  • Installing django-stubs-ext (0.7.0)\n  • Installing mypy (1.0.1)\n  • Installing pylint-plugin-utils (0.7)\n  • Installing types-pytz (2022.7.1.1)\n  • Installing types-pyyaml (6.0.12.8)\n  • Installing django-stubs (1.14.0)\n  • Installing pylint-django (2.5.3)\n")])])]),e("h2",{attrs:{id:"django-development-environment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#django-development-environment"}},[n._v("#")]),n._v(" Django Development Environment")]),n._v(" "),e("p",[e("strong",[n._v("pyproject.toml")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('[tool.poetry]\nname = "ex-2023-02"\nversion = "0.1.0"\ndescription = ""\nauthors = ["居正中 <AlanJui.1960@gmail.com>"]\nreadme = "README.md"\npackages = [{include = "ex_2023_02"}]\n\n[tool.poetry.dependencies]\npython = "^3.10"\ndjango = "^4.1.7"\n\n\n[tool.poetry.group.dev.dependencies]\ndjango-stubs = "^1.14.0"\n\n[build-system]\nrequires = ["poetry-core"]\nbuild-backend = "poetry.core.masonry.api"\n')])])]),e("h2",{attrs:{id:"install-django-stubs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-django-stubs"}},[n._v("#")]),n._v(" Install Django-Stubs")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('❯ poetry add django-stubs [compatible-mypy] --group dev\nzsh: no matches found: [compatible-mypy]\n\n❯ bash poetry add django-stubs[compatible-mypy] --group dev\nzsh: no matches found: django-stubs[compatible-mypy]\n\n❯ poetry add "django-stubs[compatible-mypy]" --group dev\nUsing version ^1.15.0 for django-stubs\n\nUpdating dependencies\nResolving dependencies... (1.9s)\n\nWriting lock file\n\nPackage operations: 4 installs, 0 updates, 0 removals\n\n  • Installing django-stubs-ext (0.7.0)\n  • Installing types-pytz (2022.7.1.2)\n  • Installing types-pyyaml (6.0.12.8)\n  • Installing django-stubs (1.15.0)\n')])])]),e("h2",{attrs:{id:"顯示套件的版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#顯示套件的版本"}},[n._v("#")]),n._v(" 顯示套件的版本")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ poetry show mypy\n name         : mypy\n version      : 1.0.1\n description  : Optional static typing for Python\n\ndependencies\n - mypy-extensions >=0.4.3\n - tomli >=1.1.0\n - typing-extensions >=3.10\n\nrequired by\n - django-stubs >=1.0,<1.1\n")])])]),e("hr"),n._v(" "),e("h1",{attrs:{id:"clone-project"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clone-project"}},[n._v("#")]),n._v(" Clone Project")]),n._v(" "),e("p",[e("strong",[n._v("(1)")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ cd ~/workspace/django\n❯ git clone <GitRepoURL>\n\n❯ cd <GitRepo>\n\n❯ pyenv local 3.10.6\n\n❯ python -m venv .venv\n\n❯ poetry env info\n\nVirtualenv\nPython:         3.10.6\nImplementation: CPython\nPath:           /Users/alanjui/workspace/django/ex-2023-02/.venv\nExecutable:     /Users/alanjui/workspace/django/ex-2023-02/.venv/bin/python\nValid:          True\n\nSystem\nPlatform:   darwin\nOS:         posix\nPython:     3.10.6\nPath:       /Users/alanjui/.pyenv/versions/3.10.6\nExecutable: /Users/alanjui/.pyenv/versions/3.10.6/bin/python3.10\n")])])]),e("p",[e("strong",[n._v("(2)")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ poetry shell\nSpawning shell within /Users/alanjui/workspace/django/ex-2023-02/.venv\n❯ emulate bash -c '. /Users/alanjui/workspace/django/ex-2023-02/.venv/bin/activate'\n")])])]),e("p",[e("strong",[n._v("(3)")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ poetry install\n")])])]),e("p",[e("strong",[n._v("(4)")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("❯ poetry run python manage.py runserver\n")])])]),e("hr"),n._v(" "),e("h2",{attrs:{id:"neovim"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#neovim"}},[n._v("#")]),n._v(" Neovim")]),n._v(" "),e("p",[e("strong",[n._v("LSP")])]),n._v(" "),e("ul",[e("li",[n._v("pyright")]),n._v(" "),e("li",[n._v("cssls")]),n._v(" "),e("li",[n._v("emmet_ls")]),n._v(" "),e("li",[n._v("html-lsp")]),n._v(" "),e("li",[n._v("json-lsp")]),n._v(" "),e("li",[n._v("typescript-language-server")]),n._v(" "),e("li",[n._v("eslint-lsp")]),n._v(" "),e("li",[n._v("stylelint-lsp")]),n._v(" "),e("li",[n._v("null-ls: html/htmldjango, django, css, javascript, jason,\njsonc")]),n._v(" "),e("li",[n._v("tailwindcss")]),n._v(" "),e("li",[n._v("copilot")])]),n._v(" "),e("p",[e("strong",[n._v("Linter")])]),n._v(" "),e("ul",[e("li",[n._v("eslint_d")]),n._v(" "),e("li",[n._v("pyright")])]),n._v(" "),e("p",[e("strong",[n._v("Formatter")])]),n._v(" "),e("ul",[e("li",[n._v("prettier")])]),n._v(" "),e("p",[e("strong",[n._v("DAP")])]),n._v(" "),e("ul",[e("li",[n._v("debupy4")])]),n._v(" "),e("p",[e("strong",[n._v("Mason")]),n._v(" 以下之 LS Server, Linter 不要安裝：")]),n._v(" "),e("ul",[e("li",[n._v("pylint")]),n._v(" "),e("li",[n._v("mypy")])]),n._v(" "),e("h1",{attrs:{id:"ubuntu"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu"}},[n._v("#")]),n._v(" Ubuntu")]),n._v(" "),e("h2",{attrs:{id:"install-poetry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-poetry"}},[n._v("#")]),n._v(" Install Poetry")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("curl -sSL https://install.python-poetry.org | python3 -\n")])])]),e("h2",{attrs:{id:"configure-path-for-shell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#configure-path-for-shell"}},[n._v("#")]),n._v(" Configure Path for Shell")]),n._v(" "),e("p",[e("strong",[n._v("~/.zshrc")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('...\nexport PATH="$HOME/.local/bin:$HOME/bin:$PATH"\n\n\nsource ~/.zshrc\n')])])])])}),[],!1,null,null,null);e.default=t.exports}}]);