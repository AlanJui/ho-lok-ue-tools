(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{468:function(e,n,t){"use strict";t.r(n);var a=t(10),s=Object(a.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"macos-使用-libvirt-qemu-建置-vm-指引"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#macos-使用-libvirt-qemu-建置-vm-指引"}},[e._v("#")]),e._v(" macOS 使用 Libvirt + QEMU 建置 VM 指引")]),e._v(" "),n("p",[e._v("https://www.naut.ca/blog/2020/08/26/ubuntu-vm-on-macos-with-libvirt-qemu/")]),e._v(" "),n("hr"),e._v(" "),n("h2",{attrs:{id:"nat-網路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nat-網路"}},[e._v("#")]),e._v(" NAT 網路")]),e._v(" "),n("p",[e._v("https://rambling-ideas.salessandri.name/setup-nat-network-for-qemu-in-mac-osx/")]),e._v(" "),n("p",[n("img",{attrs:{src:"https://paper-attachments.dropbox.com/s_0B73CB7F4D14E6D0E0B06E068565277F4E4DEC60C43E40C1FB34DDEE4E1FB7F5_1608381246655_image.png",alt:""}})]),e._v(" "),n("p",[n("strong",[e._v("Creating the bridge interface")])]),e._v(" "),n("ol",[n("li")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("sudo ifconfig bridge1 create\n\n\nbridge1: flags=8822<BROADCAST,SMART,SIMPLEX,MULTICAST> mtu 1500\n        options=63<RXCSUM,TXCSUM,TSO4,TSO6>\n        ether f2:18:98:45:b4:01\n        Configuration:\n                id 0:0:0:0:0:0 priority 0 hellotime 0 fwddelay 0\n                maxage 0 holdcnt 0 proto stp maxaddr 100 timeout 1200\n                root id 0:0:0:0:0:0 priority 0 ifcost 0 port 0\n                ipfilter disabled flags 0x0\n        nd6 options=201<PERFORMNUD,DAD>\n        media: <unknown type>\n        status: inactive\n")])])]),n("ol",{attrs:{start:"2"}},[n("li")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("sudo ifconfig bridge1 192.168.100.1/24\n\n\nbridge1: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500\n        options=63<RXCSUM,TXCSUM,TSO4,TSO6>\n        ether f2:18:98:45:b4:01\n        inet 192.168.100.1 netmask 0xffffff00 broadcast 192.168.100.255\n        Configuration:\n                id 0:0:0:0:0:0 priority 0 hellotime 0 fwddelay 0\n                maxage 0 holdcnt 0 proto stp maxaddr 100 timeout 1200\n                root id 0:0:0:0:0:0 priority 0 ifcost 0 port 0\n                ipfilter disabled flags 0x0\n        nd6 options=201<PERFORMNUD,DAD>\n        media: <unknown type>\n        status: inactive\n")])])]),n("p",[n("strong",[e._v("Packet forwarding and NAT")])]),e._v(" "),n("ol",{attrs:{start:"3"}},[n("li")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("vim pfctl-nat-config\n")])])]),n("p",[e._v("pfctl-nat-config")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("nat on en10 from bridge1:network to any -> (en10)\n")])])]),n("ol",{attrs:{start:"4"}},[n("li")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("sudo pfctl -F all\nPassword:\nNo ALTQ support in kernel\nALTQ related functions disabled\nrules cleared\nnat cleared\ndummynet cleared\n0 tables deleted.\n0 states cleared\nsource tracking entries cleared\npf: statistics cleared\npf: interface flags reset\n")])])]),n("ol",{attrs:{start:"5"}},[n("li")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("sudo pfctl -f ./pfctl-nat-config -e\npfctl: Use of -f option, could result in flushing of rules\npresent in the main ruleset added by the system at startup.\nSee /etc/pf.conf for further details.\n\nNo ALTQ support in kernel\nALTQ related functions disabled\npf enabled\n")])])]),n("p",[n("strong",[e._v("Setting up the DHCP server")])]),e._v(" "),n("ol",{attrs:{start:"6"}},[n("li")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("sudo vim /etc/bootpd.list\n")])])]),n("p",[e._v("/etc/bootpd.list")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n    <dict>\n        <key>bootp_enabled</key>\n        <false/>\n        <key>dhcp_enabled</key>\n        <array>\n            <string>bridge1</string>\n        </array>\n        <key>netboot_enabled</key>\n        <false/>\n        <key>relay_enabled</key>\n        <false/>\n        <key>Subnets</key>\n        <array>\n            <dict>\n                <key>name</key>\n                <string>VM NAT Network (192.168.100.0/24)</string>\n                <key>net_mask</key>\n                <string>255.255.255.0</string>\n                <key>net_address</key>\n                <string>192.168.100.0</string>\n                <key>net_range</key>\n                <array>\n                    <string>192.168.100.2</string>\n                    <string>192.168.100.254</string>\n                </array>\n                <key>allocate</key>\n                <true/>\n                <key>dhcp_router</key>\n                <string>192.168.100.1</string>\n                <key>dhcp_domain_name_server</key>\n                <array>\n                    <string>8.8.8.8</string>\n                </array>\n            </dict>\n        </array>\n    </dict>\n</plist>\n')])])]),n("ol",{attrs:{start:"7"}},[n("li")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v(" sudo /usr/libexec/bootpd -D\n")])])]),n("p",[n("strong",[e._v("QEMU and interface setup")])]),e._v(" "),n("ol",{attrs:{start:"8"}},[n("li")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("./s01-create-hd\n./s02-install-vm\n")])])]),n("hr"),e._v(" "),n("h2",{attrs:{id:"安裝-tap-tun-工具"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安裝-tap-tun-工具"}},[e._v("#")]),e._v(" 安裝 tap/tun 工具")]),e._v(" "),n("ol",[n("li")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("brew install --cask tuntap\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[e._v("Reboot OS")])]),e._v(" "),n("h2",{attrs:{id:"建置-tap-網路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#建置-tap-網路"}},[e._v("#")]),e._v(" 建置 tap 網路")]),e._v(" "),n("p",[n("strong",[e._v("釋放網路介面卡網址")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('$ ifconfig\n......\nen7: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500\n        options=6407<RXCSUM,TXCSUM,VLAN_MTU,CHANNEL_IO,PARTIAL_CSUM,ZEROINVERT_CSUM>\n        ether 00:14:3d:14:45:f8\n        inet6 fe80::184f:b99:3a1e:bdc1%en7 prefixlen 64 secured scopeid 0x14\n        inet 192.168.66.236 netmask 0xffffff00 broadcast 192.168.66.255\n        nd6 options=201<PERFORMNUD,DAD>\n        media: autoselect (100baseTX <full-duplex>)\n        status: active\n\n$ sudo ifconfig en7 down\n\n$ ifconfig\n......\nen7: flags=8822<BROADCAST,SMART,SIMPLEX,MULTICAST> mtu 1500\n        options=6407<RXCSUM,TXCSUM,VLAN_MTU,CHANNEL_IO,PARTIAL_CSUM,ZEROINVERT_CSUM>\n        ether 00:14:3d:14:45:f8\n        nd6 options=201<PERFORMNUD,DAD>\n        media: autoselect (none)\n        status: inactive\n\n\n\n$ sudo ifconfig bridge0 down\n\n$ ifconfig\n......\nbridge0: flags=8822<BROADCAST,SMART,SIMPLEX,MULTICAST> mtu 1500\n        options=3<RXCSUM,TXCSUM>\n        ether d0:37:45:d2:70:98\n        inet6 fe80::cf0:4f39:9250:31d5%bridge0 prefixlen 64 secured scopeid 0xf\n        inet6 fd00:30b7:d45e:4bf2:103e:27cc:b83f:321d prefixlen 64 autoconf secured\n        inet6 fd00:30b7:d45e:4bf2:a1d4:1d24:9af3:2a70 prefixlen 64 autoconf temporary\n        inet 192.168.66.21 netmask 0xffffff00 broadcast 192.168.66.255\n        inet 192.168.66.19 netmask 0xffffff00 broadcast 192.168.66.255\n        Configuration:\n                id 0:0:0:0:0:0 priority 0 hellotime 0 fwddelay 0\n                maxage 0 holdcnt 0 proto stp maxaddr 100 timeout 1200\n                root id 0:0:0:0:0:0 priority 0 ifcost 0 port 0\n                ipfilter disabled flags 0x0\n        member: en10 flags=3<LEARNING,DISCOVER>\n                ifmaxaddr 0 port 10 priority 0 path cost 0\n        member: en7 flags=3<LEARNING,DISCOVER>\n                ifmaxaddr 0 port 20 priority 0 path cost 0\n        nd6 options=201<PERFORMNUD,DAD>\n        media: autoselect\n        status: active\n......\n\n$ sudo ifconfig bridge0 addm en7\n\n$ ifconfig\n......\nen7: flags=8963<UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1500\n        options=6407<RXCSUM,TXCSUM,VLAN_MTU,CHANNEL_IO,PARTIAL_CSUM,ZEROINVERT_CSUM>\n        ether 00:14:3d:14:45:f8\n        inet6 fe80::184f:b99:3a1e:bdc1%en7 prefixlen 64 duplicated secured scopeid 0x14\n        inet 192.168.66.236 netmask 0xffffff00 broadcast 192.168.66.255\n        nd6 options=201<PERFORMNUD,DAD>\n        media: autoselect (100baseTX <full-duplex>)\n        status: active\n\n\n\n\n$ sudo sh -c "exec 5<>/dev/tap0; chown $USER: /dev/tap0"\n$ ll /dev/tap0\ncrw-rw----  1 alanjui  wheel   22,   0 12 19 14:07 /dev/tap0\n\n\n\n$ sudo ifconfig bridge0 addm tap0\n$ ifconfig\n......\nbridge0: flags=8822<BROADCAST,SMART,SIMPLEX,MULTICAST> mtu 1500\n        options=3<RXCSUM,TXCSUM>\n        ether d0:37:45:d2:70:98\n        inet6 fe80::cf0:4f39:9250:31d5%bridge0 prefixlen 64 secured scopeid 0xf\n        inet6 fd00:30b7:d45e:4bf2:103e:27cc:b83f:321d prefixlen 64 autoconf secured\n        inet6 fd00:30b7:d45e:4bf2:a1d4:1d24:9af3:2a70 prefixlen 64 autoconf temporary\n        inet 192.168.66.21 netmask 0xffffff00 broadcast 192.168.66.255\n        inet 192.168.66.19 netmask 0xffffff00 broadcast 192.168.66.255\n        Configuration:\n                id 0:0:0:0:0:0 priority 0 hellotime 0 fwddelay 0\n                maxage 0 holdcnt 0 proto stp maxaddr 100 timeout 1200\n                root id 0:0:0:0:0:0 priority 0 ifcost 0 port 0\n                ipfilter disabled flags 0x0\n        member: en10 flags=3<LEARNING,DISCOVER>\n                ifmaxaddr 0 port 10 priority 0 path cost 0\n        member: en7 flags=3<LEARNING,DISCOVER>\n                ifmaxaddr 0 port 20 priority 0 path cost 0\n        member: tap0 flags=3<LEARNING,DISCOVER>\n                ifmaxaddr 0 port 19 priority 0 path cost 0\n        nd6 options=201<PERFORMNUD,DAD>\n        media: autoselect\n        status: active\n......\ntap0: flags=8943<UP,BROADCAST,RUNNING,PROMISC,SIMPLEX,MULTICAST> mtu 1500\n        ether 52:53:79:9b:1c:3a\n        media: autoselect\n        status: active\n        open (pid 11861)\n\n\n\n\nsudo ifconfig bridge0 up\n')])])]),n("p",[n("strong",[e._v("(1) Establish the Bridge Interface")])]),e._v(" "),n("p",[n("img",{attrs:{src:"https://paper-attachments.dropbox.com/s_0B73CB7F4D14E6D0E0B06E068565277F4E4DEC60C43E40C1FB34DDEE4E1FB7F5_1608434952756_image.png",alt:""}})]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("sudo ifconfig bridge1 192.168.100.1/24\n")])])]),n("p",[n("strong",[e._v("(2) Enable NAT on macOS")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("sudo ./pf_nat.sh\n")])])]),n("p",[e._v("pf_nat.sh")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('#!/bin/sh\n\nNIC="en10"\nBRIDGE="bridge1"\n\nsudo cat > /usr/local/etc/pf-nat.conf << EOF\nnat on $NIC from $BRIDGE:network to any -> ($NIC)\nEOF\n\nsudo pfctl -d\nsudo sysctl -w net.inet.ip.forwarding=1\nsudo pfctl -f /usr/local/etc/pf-nat.conf -e\n')])])]),n("p",[n("strong",[e._v("(3) Setting up the DHCP server")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("sudo /usr/libexec/bootpd -D\n")])])]),n("p",[n("strong",[e._v("/etc/bootpd.list")]),e._v(" :")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('<?xml version="1.0" encoding="UTF-8"?>\n<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">\n<plist version="1.0">\n    <dict>\n        <key>bootp_enabled</key>\n        <false/>\n        <key>dhcp_enabled</key>\n        <array>\n            <string>bridge1</string>\n        </array>\n        <key>netboot_enabled</key>\n        <false/>\n        <key>relay_enabled</key>\n        <false/>\n        <key>Subnets</key>\n        <array>\n            <dict>\n                <key>name</key>\n                <string>VM NAT Network (192.168.100.0/24)</string>\n                <key>net_mask</key>\n                <string>255.255.255.0</string>\n                <key>net_address</key>\n                <string>192.168.100.0</string>\n                <key>net_range</key>\n                <array>\n                    <string>192.168.100.2</string>\n                    <string>192.168.100.254</string>\n                </array>\n                <key>allocate</key>\n                <true/>\n                <key>dhcp_router</key>\n                <string>192.168.100.1</string>\n                <key>dhcp_domain_name_server</key>\n                <array>\n                    <string>8.8.8.8</string>\n                </array>\n            </dict>\n        </array>\n    </dict>\n</plist>\n')])])]),n("p",[n("strong",[e._v("(4) Install VM")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("./s01-create-hd\n\nsudo ./s02-install-vm\n")])])]),n("p",[n("strong",[e._v("s02-install-vm")]),e._v(" :")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('#!/bin/sh\nVM_NAME="ARCH-01"\nMAC_ADDR=$(./qemu-mac-hasher.py "$VM_NAME")\n\necho "VM_NAME=$VM_NAME"\necho "MAC_ADDR=$MAC_ADDR"\n\nqemu-system-x86_64 \\\n    -name "$VM_NAME" \\\n    -machine q35,accel=hvf \\\n    -cpu host \\\n    -smp cpus=2 \\\n    -m 2048 \\\n    -vga virtio \\\n    -display default,show-cursor=on \\\n    -usb \\\n    -device usb-tablet \\\n    -drive media=disk,format=qcow2,file=./vdisk1.qcow2 \\\n    -cdrom $HOME/ISO/debian-10.7.0-amd64-netinst.iso \\\n    -netdev tap,id=nd0,ifname=tap0,script=./qemu-ifup.sh,downscript=./qemu-ifdown.sh \\\n    -device virtio-net-pci,netdev=nd0,mac="$MAC_ADDR" \\\n    -boot n\n')])])]),n("hr"),e._v(" "),n("h2",{attrs:{id:"brew-services-manager"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#brew-services-manager"}},[e._v("#")]),e._v(" brew services manager")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v(" brew services --help\nUsage: brew services [subcommand]\n\nManage background services with macOS' launchctl(1) daemon manager.\n\nIf sudo is passed, operate on /Library/LaunchDaemons (started at boot).\nOtherwise, operate on ~/Library/LaunchAgents (started at login).\n\n[sudo] brew services [list]:\n    List all managed services for the current user (or root).\n\n[sudo] brew services run (formula|--all):\n    Run the service formula without registering to launch at login (or boot).\n\n[sudo] brew services start (formula|--all):\n    Start the service formula immediately and register it to launch at login\n(or boot).\n\n[sudo] brew services stop (formula|--all):\n    Stop the service formula immediately and unregister it from launching at\nlogin (or boot).\n\n[sudo] brew services restart (formula|--all):\n    Stop (if necessary) and start the service formula immediately and register\nit to launch at login (or boot).\n\n[sudo] brew services cleanup:\n    Remove all unused services.\n\n      --all                        Run subcommand on all services.\n  -d, --debug                      Display any debugging information.\n  -q, --quiet                      Make some output more quiet.\n  -v, --verbose                    Make some output more verbose.\n  -h, --help                       Show this message.\n\n\n\nbrew services start libvirt\n\n\nbrew services stop libvirt\n\n\nbrew services restart libvirt\n\n\n$ brew services\nName    Status  User    Plist\nlibvirt started alanjui /Users/alanjui/Library/LaunchAgents/homebrew.mxcl.libvirt.plist\nunbound started root    /Library/LaunchDaemons/homebrew.mxcl.unbound.plist\n")])])]),n("h2",{attrs:{id:"network"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#network"}},[e._v("#")]),e._v(" Network")]),e._v(" "),n("p",[e._v("Ref: "),n("a",{attrs:{href:"https://gist.github.com/extremecoders-re/e8fd8a67a515fee0c873dcafc81d811c",target:"_blank",rel:"noopener noreferrer"}},[e._v("Setting up Qemu with a tap interface"),n("OutboundLink")],1)]),e._v(" "),n("h2",{attrs:{id:"how-to-install-qemu-on-mac-osx-10-6-10-7"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#how-to-install-qemu-on-mac-osx-10-6-10-7"}},[e._v("#")]),e._v(" "),n("a",{attrs:{href:"http://forum.gns3.net/topic4600-10.html?sid=bcc54b911ab5f3ee60c34ab608e8a2d2",target:"_blank",rel:"noopener noreferrer"}},[n("strong",[e._v("How to install Qemu on MAC OSX 10.6 & 10.7")]),n("OutboundLink")],1)]),e._v(" "),n("h2",{attrs:{id:"bridged-network-on-macos-host-10-14-6-mojave"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bridged-network-on-macos-host-10-14-6-mojave"}},[e._v("#")]),e._v(" "),n("a",{attrs:{href:"https://www.emaculation.com/forum/viewtopic.php?f=34&t=10411&sid=862ba8c952aaf298c80eddc3ed438199",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bridged network on macOS host (10.14.6 Mojave)"),n("OutboundLink")],1)]),e._v(" "),n("p",[n("strong",[e._v("s01-chreate-hd")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("#!/bin/sh\nqemu-img create -f qcow2 vdisk1.qcow2 30G\n")])])]),n("p",[n("strong",[e._v("s00-generate-mac")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('#!/usr/local/bin/bash\n# generate a random mac address for the qemu nic\n# printf \'DE:AD:BE:EF:%02X:%02X\\n\' $((RANDOM%256)) $((RANDOM%256))\nVAR1=$((RANDOM%256))\nVAR2=$((RANDOM%256))\nMAC_ADDR="DE:AD:BE:EF:$VAR1:$VAR2"\n\necho "export MAC_ADDR=\'$MAC_ADDR\'"\n\nexport MAC_ADDR="$MAC_ADDR"\n')])])]),n("p",[n("strong",[e._v("qemu-mac-hasher.py")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('#!/usr/bin/env python\n# usage: qemu-mac.hasher.py <VMName>\n\nimport sys\nimport zlib\n\ncrc = str(hex(zlib.crc32(sys.argv[1].encode("utf-8"))))[-8:]\nprint("52:54:%s%s:%s%s:%s%s:%s%s" % tuple(crc))\n')])])]),n("p",[n("strong",[e._v("s02-install")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('#!/bin/sh\nVM_NAME="arch-001"\nMAC_ADDR=$(./qemu-mac-hasher.py "$VM_NAME")\n\necho "VM_NAME = $VM_NAME"\necho "MAC_ADDR = $MAC_ADDR"\n\nqemu-system-x86_64 \\\n    -name "$VM_NAME" \\\n    -machine type=q35,accel=hvf \\\n    -cpu host \\\n    -smp cpus=6 \\\n    -m 4G \\\n    -vga virtio \\\n    -display default,show-cursor=on \\\n    -usb \\\n    -device usb-tablet \\\n    -drive file=./vdisk1.qcow2,if=virtio \\\n    -cdrom $HOME/ISO/debian-10.7.0-amd64-netinst.iso \\\n    -nic user,id=eth0,restrict=off,ipv4=on,ipv6=off,model=virtio,mac="$MAC_ADDR" \\\n    -boot n\n')])])]),n("p",[n("strong",[e._v("s03-start-vm")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('#!/bin/sh\nqemu-system-x86_64 \\\n    -name "$VM_NAME" \\\n    -machine type=q35,accel=hvf \\\n    -cpu host \\\n    -smp cpus=6 \\\n    -m 4G \\\n    -vga virtio \\\n    -display default,show-cursor=on \\\n    -usb \\\n    -device usb-tablet \\\n    -drive file=./vdisk1.qcow2,if=virtio \\\n    -nic user,id=eth0vi,model=virtio,restrict=off \\\n    -boot c\n')])])]),n("h2",{attrs:{id:"參考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#參考"}},[e._v("#")]),e._v(" 參考")]),e._v(" "),n("p",[n("strong",[e._v("ifconfig 指令")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("ifconfig --help\nifconfig: illegal option -- -\nusage: ifconfig \\[-C\\] [-L] interface address_family [address [dest_address]]\n                [parameters]\n       ifconfig interface create\n       ifconfig -a \\[-C\\] [-L] \\[-d\\] [-m] \\[-u\\] [-v] [address_family]\n       ifconfig -l \\[-d\\] [-u] [address_family]\n       ifconfig \\[-C\\] [-L] \\[-d\\] [-m] \\[-u\\] [-v]\n")])])]),n("p",[n("strong",[e._v("Download tuntaposx")])]),e._v(" "),n("p",[e._v("https://github.com/mal/docker-for-mac-host-bridge/issues/2")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/mal/docker-for-mac-host-bridge/issues/2",target:"_blank",rel:"noopener noreferrer"}},[e._v("mal/docker-for-mac-host-bridge#2"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("https://github.com/AlmirKadric-Published/docker-tuntap-osx")]),e._v(" "),n("p",[e._v("https://gist.github.com/retspen/4e6ec73271594399c050f6f8027a9880")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://gist.github.com/retspen/4e6ec73271594399c050f6f8027a9880",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://gist.github.com/retspen/4e6ec73271594399c050f6f8027a9880"),n("OutboundLink")],1)]),e._v(" "),n("h2",{attrs:{id:"nic-models"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nic-models"}},[e._v("#")]),e._v(" NIC Models:")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("sudo qemu-system-x86_64  -nic tap,model=help\nPassword:\nSupported NIC models:\ne1000\ne1000-82544gc\ne1000-82545em\ne1000e\ni82550\ni82551\ni82557a\ni82557b\ni82557c\ni82558a\ni82558b\ni82559a\ni82559b\ni82559c\ni82559er\ni82562\ni82801\nne2k_pci\npcnet\nrtl8139\ntulip\nvirtio-net-pci\nvirtio-net-pci-non-transitional\nvirtio-net-pci-transitional\nvmxnet3\n")])])]),n("p",[n("strong",[e._v("-nic user")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('#!/bin/sh\nVM_NAME="ARCH-01"\nMAC_ADDR=$(./qemu-mac-hasher.py "$VM_NAME")\n\necho "VM_NAME=$VM_NAME"\necho "MAC_ADDR=$MAC_ADDR"\n\nqemu-system-x86_64 \\\n    -name "$VM_NAME" \\\n    -machine q35,accel=hvf \\\n    -cpu host \\\n    -smp cpus=2 \\\n    -m 2048 \\\n    -vga virtio \\\n    -display default,show-cursor=on \\\n    -usb \\\n    -device usb-tablet \\\n    -drive media=disk,format=qcow2,file=./vdisk1.qcow2 \\\n    -cdrom $HOME/ISO/debian-10.7.0-amd64-netinst.iso \\\n    -nic user,ipv6=off,model=virtio-net-pci,mac="$MAC_ADDR" \\\n    -boot n\n')])])]),n("p",[n("img",{attrs:{src:"https://paper-attachments.dropbox.com/s_0B73CB7F4D14E6D0E0B06E068565277F4E4DEC60C43E40C1FB34DDEE4E1FB7F5_1608426343884_image.png",alt:""}})])])}),[],!1,null,null,null);n.default=s.exports}}]);